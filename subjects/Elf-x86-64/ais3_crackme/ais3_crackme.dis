void _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
_init_entry:
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004003C8:
	call_gmon_start()
	return
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp

_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



void _start(word64 rax, word64 rdx, word64 qwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax rdx
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(64)
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_start_entry:
// DataOut: rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000400410:
	__align(fp + 0x0000000000000008)
	word64 rax_21 = DPB(rax, __libc_start_main(0x00000000004005C5, qwArg00, fp + 0x0000000000000008, 0x0000000000400620, 0x00000000004006B0, rdx, DPB(qwArg00, fp + 0x0000000000000004, 0)), 0)
	__hlt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void call_gmon_start()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
call_gmon_start_entry:
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l000000000040043C:
	word64 rax_4 = Mem0[0x0000000000600FE0:word64]
	branch rax_4 == 0x0000000000000000 l000000000040044E
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l000000000040044C:
	word64 rsp_17
	byte SCZO_18
	word64 rax_19
	byte SZO_20
	byte C_21
	byte Z_22
	word32 eax_23
	call eax (retsize: 4; depth: 12)
		uses: C_7,eax,rax_4,rsp_2,SCZO,SZO_5,Z_6
		defs: C_21,eax_23,rax_19,rsp_17,SCZO_18,SZO_20,Z_22
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>
// LocalsOut: fp(64)

l000000000040044E:
	return
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>

call_gmon_start_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



word64 deregister_tm_clones(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut: rsp
// Trashed: SCZO ah al ax di dil eax edi esp r8 r8b r8d r8w rax rdi rsp sp spl
// Preserved: rbp
deregister_tm_clones_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400460:
	branch DPB(rax, 0x0060103F, 0) >u 0x000000000000000E l0000000000400477
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400477:
	word64 rax_37 = DPB(rax, 0x00000000, 0)
	branch rax_37 == 0x0000000000000000 l0000000000400475
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:0x0060103F r8:r8 - 6295608 rbp:fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64)

l0000000000400481:
	word64 rsp_44
	word32 eax_45
	word64 rbp_46
	word64 r8_47
	byte SCZO_48
	word64 rax_49
	byte CZ_50
	byte SZO_51
	byte C_52
	byte Z_53
	word32 edi_54
	call 0x00000000 (retsize: 4;)
		uses: C_40,CZ_11,dwLoc04_7,eax_36,edi_43,qwLoc04,r8_9,rax_37,rbp_41,rsp_42,SCZO_10,SZO_38,Z_39
		defs: C_52,CZ_50,eax_45,edi_54,r8_47,rax_49,rbp_46,rsp_44,SCZO_48,SZO_51,Z_53
	return rsp_44
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:0x00000000 r8:r8 - 6295608 rbp:fp - 0x0000000000000004 -4(fp):rbp

l0000000000400475:
	return fp + 0x0000000000000004
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:<invalid> r8:r8 - 6295608 rbp:fp - 0x0000000000000004 -4(fp):rbp

deregister_tm_clones_exit:
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 eax:<invalid> r8:<invalid> rbp:rbp edi:<invalid> -4(fp):rbp



void register_tm_clones(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax dh di dil dl dx eax edi edx esi esp r8 r8b r8d r8w rax rdi rdx rsi rsp si sil sp spl
// Preserved: rbp
register_tm_clones_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400490:
	word64 rax_4 = DPB(rax, 0x00601038, 0)
	word64 rdx_13 = rax_4 >> 0x0000000000000003 >>u 0x000000000000003F
	branch (rax_4 >> 0x0000000000000003) + rdx_13 >> 0x0000000000000001 != 0x0000000000000000 l00000000004004B4
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> r8:<invalid> rax:<invalid> rdx:<invalid> edx:<invalid> rsi:<invalid> edi:<invalid>
// LocalsOut: fp(64)

l00000000004004B4:
	word64 rdx_45 = DPB(rdx_13, 0x00000000, 0)
	branch rdx_45 == 0x0000000000000000 l00000000004004B2
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:<invalid> r8:<invalid> rax:<invalid> rbp:fp - 0x0000000000000004 rdx:<invalid> edx:<invalid> rsi:<invalid> edi:<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l00000000004004BE:
	word64 rsp_53
	word32 eax_54
	word64 rbp_55
	word64 r8_56
	byte SCZO_57
	word64 rax_58
	word64 rdx_59
	byte Z_60
	word32 edx_61
	byte SZO_62
	byte C_63
	word64 rsi_64
	word32 edi_65
	call 0x00000000 (retsize: 4;)
		uses: C_48,dwLoc04_7,eax_2,edi_52,edx_44,qwLoc04,r8_9,rax_15,rbp_49,rdx_45,rsi_51,rsp_50,SCZO_16,SZO_46,Z_47
		defs: C_63,eax_54,edi_65,edx_61,r8_56,rax_58,rbp_55,rdx_59,rsi_64,rsp_53,SCZO_57,SZO_62,Z_60
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:<invalid> r8:<invalid> rax:<invalid> rbp:fp - 0x0000000000000004 rdx:<invalid> edx:0x00000000 rsi:<invalid> edi:<invalid> -4(fp):rbp

l00000000004004B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:<invalid> r8:<invalid> rax:<invalid> rbp:fp - 0x0000000000000004 rdx:<invalid> edx:<invalid> rsi:<invalid> edi:<invalid> -4(fp):rbp

register_tm_clones_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 eax:<invalid> r8:<invalid> rax:<invalid> rbp:rbp rdx:<invalid> edx:<invalid> rsi:<invalid> edi:<invalid> -4(fp):rbp



void __do_global_dtors_aux(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax bp bpl di dil eax ebp edi esp r8 r8b r8d r8w rax rbp rdi rsp sp spl
// Preserved: rbp
__do_global_dtors_aux_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004D0:
	branch Mem0[0x0000000000601038:byte] != 0x00 l00000000004004EA
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004D9:
	deregister_tm_clones(r8)
	Mem17[0x0000000000601038:byte] = 0x01
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004004EA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> r8:<invalid> edi:<invalid> -4(fp):rbp

__do_global_dtors_aux_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> r8:<invalid> edi:<invalid> -4(fp):rbp



void frame_dummy(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax dh di dil dl dx eax edi edx esi esp r8 r8b r8d r8w rax rdi rdx rsi rsp si sil sp spl
// Preserved: rbp rsp
frame_dummy_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004F0:
	rsp = fp
	SCZO = cond(Mem0[0x0000000000600E08:word64] - 0x0000000000000000)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0000000000400518
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004FA:
	eax = 0x00000000
	rax = DPB(rax, eax, 0) (alias)
	SZO = cond(rax & rax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0000000000400518
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400518:
	register_tm_clones(r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp eax:0x00000000

l0000000000400490:
	word64 rax_4 = DPB(rax, 0x00601038, 0)
	word64 rdx_13 = rax_4 >> 0x0000000000000003 >>u 0x000000000000003F
	branch (rax_4 >> 0x0000000000000003) + rdx_13 >> 0x0000000000000001 != 0x0000000000000000 l00000000004004B4
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> r8:<invalid> rax:<invalid> rdx:<invalid> edx:<invalid> rsi:<invalid> edi:<invalid>
// LocalsOut: fp(64)

l00000000004004B4:
	word64 rdx_45 = DPB(rdx_13, 0x00000000, 0)
	branch rdx_45 == 0x0000000000000000 l00000000004004B2
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:<invalid> r8:<invalid> rax:<invalid> rbp:fp - 0x0000000000000004 rdx:<invalid> edx:<invalid> rsi:<invalid> edi:<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l00000000004004BE:
	word64 rsp_53
	word32 eax_54
	word64 rbp_55
	word64 r8_56
	byte SCZO_57
	word64 rax_58
	word64 rdx_59
	byte Z_60
	word32 edx_61
	byte SZO_62
	byte C_63
	word64 rsi_64
	word32 edi_65
	call 0x00000000 (retsize: 4;)
		uses: C_48,dwLoc04_7,eax_2,edi_52,edx_44,qwLoc04,r8_9,rax_15,rbp_49,rdx_45,rsi_51,rsp_50,SCZO_16,SZO_46,Z_47
		defs: C_63,eax_54,edi_65,edx_61,r8_56,rax_58,rbp_55,rdx_59,rsi_64,rsp_53,SCZO_57,SZO_62,Z_60
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:<invalid> r8:<invalid> rax:<invalid> rbp:fp - 0x0000000000000004 rdx:<invalid> edx:0x00000000 rsi:<invalid> edi:<invalid> -4(fp):rbp

l00000000004004B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:<invalid> r8:<invalid> rax:<invalid> rbp:fp - 0x0000000000000004 rdx:<invalid> edx:<invalid> rsi:<invalid> edi:<invalid> -4(fp):rbp

register_tm_clones_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 eax:<invalid> r8:<invalid> rax:<invalid> rbp:rbp rdx:<invalid> edx:<invalid> rsi:<invalid> edi:<invalid> -4(fp):rbp

l0000000000400504:
	rsp = fp - 0x0000000000000004
	dwLoc04 = rbp
	qwLoc04 = DPB(qwLoc04, dwLoc04, 0) (alias)
	edi = 0x00600E08
	rbp = fp - 0x0000000000000004
	call 0x00000000 (retsize: 4; depth: 8)
		defs: C,eax,edi,edx,r8,rax,rbp,rdx,rsi,rsp,SCZO,SZO,Z
	rbp = qwLoc04
	rsp = fp + 0x0000000000000004
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp eax:0x00000000

l000000000040050F_thunk_register_tm_clones:
	register_tm_clones(r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 eax:<invalid> edi:<invalid> rbp:rbp -4(fp):rbp

frame_dummy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> r8:<invalid> rax:<invalid> rdx:<invalid> edi:<invalid> rbp:rbp edx:<invalid> rsi:<invalid> -4(fp):rbp



word64 verify(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi
// LiveOut: eax rax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esi esp rax rcx rdx rsi rsp si sil sp spl
// Preserved: rbp
verify_entry:
// DataOut: rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400520:
	word32 dwLoc08_104 = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0008(32) Local -001C(64)

l00000000004005A1:
	word64 rax_100
	word64 rax_27 = rdi + (int64) dwLoc08_104
	branch (byte) (word32) Mem0[rax_27:byte] != 0x00 l0000000000400531
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 eax:<invalid> rdx:<invalid> rax:<invalid> edx:(word32) al << cl ecx:<invalid> esi:(word32) al >> cl ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -0008(32) Local -001C(64)

l0000000000400531:
	word64 rax_59 = rdi + (int64) dwLoc08_104
	byte al_64 = (byte) (dwLoc08_104 ^ (word32) Mem0[rax_59:byte])
	branch (byte) (word32) Mem0[DPB(rax_59, (int16) (byte) dwLoc08_104, 0) + 0x0000000000601020:byte] == (byte) ((word32) al_64 >> (byte) (0x00000008 - ((dwLoc08_104 ^ 0x00000009) & 0x00000003)) | (word32) al_64 << (byte) ((dwLoc08_104 ^ 0x00000009) & 0x00000003)) + 0x08 l000000000040059D
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 eax:<invalid> rdx:<invalid> rax:<invalid> edx:<invalid> ecx:<invalid> esi:(word32) al >> cl ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -0008(32) Local -001C(64)

l000000000040059D:
	dwLoc08_104 = dwLoc08_104 + 0x00000001
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 eax:<invalid> rdx:<invalid> rax:<invalid> edx:(word32) al << cl ecx:<invalid> esi:(word32) al >> cl ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -0008(32) Local -001C(64)

l0000000000400596:
	rax_100 = DPB(rax_59, 0x00000000, 0) (alias)
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 eax:<invalid> rdx:<invalid> rax:<invalid> edx:(word32) al << cl ecx:<invalid> esi:(word32) al >> cl ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l00000000004005B9:
	rax_100 = DPB(rax_27, (word32) (dwLoc08_104 == 0x00000017), 0) (alias)
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 eax:<invalid> rdx:<invalid> rax:<invalid> edx:<invalid> ecx:<invalid> esi:(word32) al >> cl ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l00000000004005C3:
	return rax_100
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 eax:<invalid> rdx:<invalid> rax:<invalid> al:<invalid> edx:<invalid> ecx:<invalid> esi:(word32) al >> cl ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp

verify_exit:
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rbp:rbp eax:<invalid> rdx:<invalid> rax:<invalid> al:<invalid> edx:<invalid> ecx:<invalid> esi:(word32) al >> cl ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp



void main(word64 rax, word64 rsi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi rax rsi
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
main_entry:
// DataOut: edi rax rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004005C5:
	branch edi == 0x00000002 l00000000004005EB
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: Local -0014(64)

l00000000004005EB:
	word64 rax_37 = Mem0[rsi + 0x0000000000000008:word64]
	word64 rax_39 = verify(rax_37)
	branch (word32) rax_39 == 0x00000000 l000000000040060E
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000014 rbp:fp - 0x0000000000000004 -20(fp):rsi -8(fp):edi -4(fp):rbp

l000000000040060E:
	word64 rax_53 = DPB(rax_39, puts(DPB(rax_37, 0x00400718, 0)), 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> eax:<invalid> rdx:<invalid> al:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> -20(fp):rsi -8(fp):edi -4(fp):rbp

l0000000000400602:
	word64 rax_50 = DPB(rax_39, puts(DPB(rax_37, 0x004006F0, 0)), 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> eax:<invalid> rdx:<invalid> al:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> -20(fp):rsi -8(fp):edi -4(fp):rbp

l0000000000400618:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> edi:<invalid> eax:<invalid> rdx:<invalid> al:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> -20(fp):rsi -8(fp):edi -4(fp):rbp

l00000000004005DA:
	word64 rax_30 = DPB(rax, puts(DPB(rdi, 0x004006C8, 0)), 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000014 rbp:fp - 0x0000000000000004 -20(fp):rsi -8(fp):edi -4(fp):rbp

l000000000040061D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 edi:<invalid> rax:<invalid> eax:<invalid> rdi:<invalid> rdx:<invalid> al:0x00 edx:<invalid> ecx:<invalid> esi:<invalid> ax:0x0000 -20(fp):rsi -8(fp):edi -4(fp):rbp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:Mem0 rbp:fp - 0x0000000000000004 edi:<invalid> rax:<invalid> eax:<invalid> rdi:<invalid> rdx:<invalid> al:0x00 edx:<invalid> ecx:<invalid> esi:<invalid> ax:0x0000 -20(fp):rsi -8(fp):edi -4(fp):rbp



void __libc_csu_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx dh di dil dl dx eax ebx edi edx esi r13 r13b r13d r13w rax rbx rdi rdx rsi si sil
// Preserved: r12 r13 r14 r15 rbp rbx rsp
__libc_csu_init_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400620:
	_init()
	branch 0x0000000000600E00 - 0x0000000000600DF8 >> 0x0000000000000003 == 0x0000000000000000 l0000000000400686
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l000000000040066A:
	word64 rbx_47 = DPB(rbx, 0x00000000, 0)
// DataOut: rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:0x0000000000600E00 - 0x0000000000600DF8 >> 0x0000000000000003 r12:0000000000600DF8 r13d:edi r14:rsi r15:rdx rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15
// LocalsOut: fp(64)

l0000000000400670:
	word64 rsp_57
	word64 rbp_58
	word64 r12_59
	word64 r13_60
	word64 r14_61
	word64 r15_62
	word64 rbx_63
	byte SCZO_64
	word32 r13d_65
	word32 edi_66
	word64 rsi_67
	word64 rdx_68
	byte SZO_69
	byte C_70
	byte Z_71
	word32 ebx_72
	call Mem0[0x0000000000600DF8 + rbx_47 * 0x0000000000000008:word32] (retsize: 4; depth: 60)
		uses: C_49,ebx_46,edi_55,qwLoc08_13,qwLoc10_11,qwLoc18_9,qwLoc20_5,qwLoc28_3,qwLoc30_15,r12_7,r13,r13d_50,r14_51,r15_52,rbp_22,rbx_47,rdx_53,rsi_54,rsp_16,SCZO_23,SZO_48,Z_27
		defs: C_70,ebx_72,edi_66,r12_59,r13_60,r13d_65,r14_61,r15_62,rbp_58,rbx_63,rdx_68,rsi_67,rsp_57,SCZO_64,SZO_69,Z_71
	branch rbx_63 + 0x0000000000000001 != rbp_58 l0000000000400670
// DataOut: rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:0x0000000000600E00 - 0x0000000000600DF8 >> 0x0000000000000003 r12:0000000000600DF8 r13d:edi r14:rsi r15:rdx ebx:<invalid> rdx:<invalid> rsi:<invalid> edi:<invalid> rbx:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15
// LocalsOut: fp(64)

l0000000000400686:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:0x0000000000600E00 - 0x0000000000600DF8 >> 0x0000000000000003 r12:0000000000600DF8 r13d:edi r14:rsi r15:rdx ebx:<invalid> rdx:<invalid> rsi:<invalid> edi:<invalid> rbx:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15

__libc_csu_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp r12:r12 r13d:<invalid> r14:r14 r15:r15 rbx:rbx r13:r13 ebx:<invalid> rdx:<invalid> rsi:<invalid> edi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15



void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
__libc_csu_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004006B0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

__libc_csu_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004006B4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



