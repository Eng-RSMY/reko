void fn0800_01FA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_01FA_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01FA:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01FA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_01FF()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_01FF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01FF:
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01FF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_0222()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_0222_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0222:
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0222_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_0245()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_0245_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0245:
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0245_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void main(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
main_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -000E(16) Local -0010(16)

l0800_0265:
	word16 di_12
	word16 bx_13 = fn0800_0E4B(ds, 0x0194, out di_12)
	fn0800_16D4(bx_13, di_12, ds, 0x01B0)
	word16 di_37
	fn0800_0E4B(ds, 0x01B4, out di_37)
	word16 wLoc08_41 = 0x0000
	word16 wLoc0A_42 = 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_02A7:
	branch wLoc08_41 < wLoc04 l0800_029C
// DataOut: ax ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_02B2:
	branch wLoc08_41 > wLoc04 l0800_02B9
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_02B4:
	branch wLoc0A_42 <=u wLoc06 l0800_029C
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_029C:
	fn0800_0245()
	wLoc0A_42 = wLoc0A_42 + 0x0001
	wLoc08_41 = v16
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_02B9:
	word16 di_70
	fn0800_0E4B(ds, 0x01CE, out di_70)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:0x01CE dx:<invalid> di:<invalid> si:<invalid> al:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> ch:0x01 -16(fp):0x01B4 -14(fp):<invalid> -12(fp):0x01CE -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_0E4B(selector ds, word16 wArg02, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bx di
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_0E4B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0E4B:
	word16 di_20
	word16 bx_21 = fn0800_1073(ds, fp + 0x0004, wArg02, out di_20)
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0E62:
	return bx_21
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> di:<invalid> si:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -10(fp):fp + 0x0004 -8(fp):<invalid> -6(fp):0x0352 -4(fp):0x0F81 -2(fp):bp

fn0800_0E4B_exit:
// DataOut: bx di
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> si:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -10(fp):fp + 0x0004 -8(fp):<invalid> -6(fp):0x0352 -4(fp):0x0F81 -2(fp):bp



word16 fn0800_1073(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bx di
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_1073_entry:
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_1073:
	byte bLoc57_110 = 0x50
// DataOut: bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_10CD:
	word16 sp_17 = fp - 0x00A0
	word16 di_108 = fp - 0x0056
	word16 si_106 = wArg04
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x009E bp:fp - 0x0002 -158(fp):di -156(fp):si -90(fp):0x0000 -87(fp):0x50 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8) Stack +0002(16)

l0800_10DD:
	byte al_40 = Mem0[ds:si_106:byte]
	si_106 = si_106 + 0x0001
	byte al_102 = al_40
	ax = DPB(ax, al_40, 0) (alias)
	branch al_40 == 0x00 l0800_10F3
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8) Stack +0002(16)

l0800_10F3:
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0)

l0800_10E2:
	branch al_40 == 0x25 l0800_10F6
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8) Stack +0002(16)

l0800_10F6:
	al_102 = Mem0[ds:si_106:byte]
	ax = DPB(ax, al_102, 0) (alias)
	si_106 = si_106 + 0x0001
	branch al_102 == 0x25 l0800_10E6
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8) Local -008C(16) Stack +0002(16)

l0800_10FF:
	byte ch_124 = 0x00
	byte bLoc8F_129 = 0x00
// DataOut: al bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_1120:
	word16 ax_149 = DPB(ax, 0x00, 8)
	byte bl_153 = (byte) ax_149
	byte dl_151 = (byte) ax_149
	word16 bx_155 = DPB(ax_149, bl_153 - 0x20, 0)
	branch bl_153 >=u 0x80 l0800_1175
// DataOut: bp bx ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ax:<invalid> es:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_112E:
	word16 bx_195 = DPB(ax_149, Mem0[ds:bx_155 + 0x04F9:byte], 0)
	word16 ax_196 = bx_195
	branch bx_195 <=u 0x0017 l0800_113C
// DataOut: ax bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_113C:
	switch (fp - 0x00A0) { l0800_1190 l0800_1178 l0800_11D1 l0800_1184 }
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_1184:
	branch ch_124 >u 0x00 l0800_1175
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_1189:
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_11D1:
	ax_196 = Mem0[ds:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_124 >=u 0x02 l0800_11E8
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_11E8:
	branch ch_124 != 0x04 l0800_11CE
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_11CE:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_11ED:
	ch_124 = ch_124 + 0x01
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_11DF:
	ch_124 = 0x03
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_1178:
	branch ch_124 >u 0x00 l0800_1175
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_117D:
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_1190:
	branch ch_124 >u 0x00 l0800_1175
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_1175:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_1195:
	branch bLoc8F_129 == 0x2B l0800_11A0
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_119C:
	bLoc8F_129 = dl_151
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_11A0:
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_111F:
	ax = DPB(ax_196, Mem0[ds:si_106:byte], 0) (alias)
	si_106 = si_106 + 0x0001
// DataOut: al bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> ch:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16) Local -009A(16) Stack +0002(16)

l0800_1139:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_1560:
	word16 si_167 = si_106
	byte al_169 = 0x25
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0)

l0800_156A:
	bx = fn0800_1099(al_169, fp - 0x0002, di_108, ds, out di_108)
	byte al_180 = Mem0[ds:si_167:byte]
	sp_17 = sp_17 + 0xFFFE
	si_167 = si_167 + 0x0001
	al_169 = al_180
	branch al_180 != 0x00 l0800_156A
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0)

l0800_1572:
	branch bLoc57_110 >= 0x50 l0800_157B
	branch bLoc57_110 >= 0x50 l0800_157B
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16)

l0800_1578:
	word16 di_94
	fn0800_10A1(fp - 0x0002, di_108, out di_94)
	word16 di_96
	bx = fn0800_10A1(fp - 0x0002, di_94, out di_96)
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16)

l0800_157B:
	word16 sp_81 = sp_17 + 0x0002
	branch 0x0000 == 0x0000 l0800_1589
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16)

l0800_1589:
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16)

l0800_1582:
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16)

l0800_158E:
	word16 di_85
	*diOut = Mem0[ss:sp_81:word16]
	return bx
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>

fn0800_1073_exit:
// DataOut: bx di
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid>

l0800_10E6:
	Mem107[ds:di_108:byte] = al_102
	byte v15_109 = bLoc57_110 - 0x01
	di_108 = di_108 + 0x0001
	bLoc57_110 = v15_109
	branch v15_109 > 0x00 l0800_10DD
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8) Stack +0002(16)

l0800_10EE:
	bx = fn0800_10A1(fp - 0x0002, di_108, out di_108)
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8) Stack +0002(16)



word16 fn0800_1099(byte al, word16 bp, word16 di, selector ds, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ds ss
// LiveOut: bx di
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved: sp
fn0800_1099_entry:
// DataOut: al bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1099:
	Mem3[ds:di:byte] = al
	byte v9_9 = Mem3[ss:bp - 0x0055:byte] - 0x01
	Mem10[ss:bp - 0x0055:byte] = v9_9
	word16 di_6
	*diOut = di + 0x0001
	branch v9_9 <= 0x00 l0800_10CC_in_fn0800_1099
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_10CC_in_fn0800_1099:
	return bx
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_109F_thunk_fn0800_10A1:
	word16 di_15
	return fn0800_10A1(bp, di + 0x0001, out di_15)
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_109F_thunk_fn0800_10A1:
	word16 di_17
	return fn0800_10A1(bp, di_15, out di_17)
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>

fn0800_1099_exit:
// DataOut: bx di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>



word16 fn0800_10A1(word16 bp, word16 di, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ss
// LiveOut: bx di sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved:
fn0800_10A1_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_10A1:
	word16 sp_30
	word16 bx_31
	selector ss_32
	word16 cx_33
	word16 dx_34
	selector es_35
	word16 bp_36
	word16 ax_37
	word16 di_38
	byte SCZO_39
	selector cs_40
	byte SZO_41
	byte C_42
	byte Z_43
	call SEQ(cs, Mem0[ss:bp + 0x000A:word16]) (retsize: 2; depth: 16)
		uses: ax_19,bp,bx,cs,cx,di_17,dx,es,SCZO_18,sp_27,ss,wLoc02_4,wLoc04_7,wLoc06_10,wLoc08_13,wLoc0A_21,wLoc0C_23,wLoc0E_28
		defs: ax_37,bp_36,bx_31,C_42,cs_40,cx_33,di_38,dx_34,es_35,SCZO_39,sp_30,ss_32,SZO_41,Z_43
	branch ax_37 != 0x0000 l0800_10BE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_10B9:
	Mem62[ss_32:bp_36 - 0x0002:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0054) -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_10BE:
	Mem48[ss_32:bp_36 - 0x0055:byte] = 0x50
	Mem50[ss_32:bp_36 - 0x0058:word16] = Mem48[ss_32:bp_36 - 0x0058:word16] + di_38
	word16 di_52
	*diOut = bp_36 - 0x0054
	word16 bx_59 = Mem50[ss_32:sp_30 + 0x0006:word16]
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0054) -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_10CC:
	return bx_59
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:bp - 0x0054 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

fn0800_10A1_exit:
// DataOut: bx di sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:bp - 0x0054 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx



void fn0800_16D4(word16 bx, word16 di, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi es esi rax rbx rcx rdi rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_16D4_entry:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_16D4:
	fn0800_16F3(bx, di, ds, 0x0342, wArg02)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_16F1:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> al:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -12(fp):0x07F2 -10(fp):0x1D65 -8(fp):0x0342 -6(fp):<invalid> -4(fp):fp + 0x0004 -2(fp):bp

fn0800_16D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> al:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -12(fp):0x07F2 -10(fp):0x1D65 -8(fp):0x0342 -6(fp):<invalid> -4(fp):fp + 0x0004 -2(fp):bp



void fn0800_16F3(word16 bx, word16 di, selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi es esi rax rbx rcx rdi rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_16F3_entry:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_16F3:
	word16 bp_153 = fp - 0x0002
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16) Stack +0008(16)

l0800_1721:
	word16 sp_101 = fp - 0x0032
	word16 si_156 = wArg08
// DataOut: bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0030 bp:fp - 0x0002 -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_1726:
	byte al_53 = Mem0[ds:si_156:byte]
	word16 si_54 = si_156 + 0x0001
	branch al_53 == 0x00 l0800_1788
// DataOut: al bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_1788:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_172B:
	branch al_53 == 0x25 l0800_178B
// DataOut: al bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_178B:
	word16 ax_348 = (int16) Mem0[ds:si_54:byte]
	branch ax_348 < 0x0000 l0800_17E6
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0006(16)

l0800_179E:
	branch DPB(bx, 0x00, 8) <=u 0x0015 l0800_17AE
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0006(16)

l0800_17AE:
	switch (ax_348) { l0800_17E6 }
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:0x00 cx:<invalid> bx:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_17E6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_17AB:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:0x00 cx:<invalid> bx:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0006(16)

l0800_172F:
	word16 sp_148 = sp_101 - 0x0002
	Mem149[ss:sp_148:word16] = wArg06
	word16 sp_152
	byte SCZO_155
	word16 di_157
	selector es_158
	byte D_159
	byte al_160
	byte SZO_162
	byte C_163
	byte Z_164
	word16 ax_165
	word16 cx_167
	byte SO_168
	byte S_169
	byte bl_171
	byte bh_172
	byte CZ_173
	call SEQ(cs, Mem149[ss:bp_153 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: al_55,ax_142,bh_35,bl_36,bLoc2B,bp_50,bx_37,C_59,cs_40,cx_44,CZ_34,D_42,di_143,ds_41,es_46,S_38,SCZO_94,si_54,SO_39,sp_148,ss_43,SZO_146,wLoc02_4,wLoc24,wLoc28_145,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,Z_95
		defs: al_160,ax_165,bh_172,bl_171,bp_153,bx_170,C_163,cs_166,cx_167,CZ_173,D_159,di_157,ds_161,es_158,S_169,SCZO_155,si_156,SO_168,sp_152,ss_154,SZO_162,Z_164
	sp_101 = sp_152 + 0x0002
	word16 ax_176 = ax_165
	branch ax_165 < 0x0000 l0800_1764
// DataOut: al ax bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_173F:
	branch di_157 < 0x0000 l0800_1775
// DataOut: al ax bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_1743:
	branch Mem149[ds:di_157 + 0x055A:byte] != 0x01 l0800_1775
// DataOut: al ax bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_1775:
	branch ax_165 == di_157 l0800_1726
// DataOut: ax bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_1779:
	Mem212[ss:sp_152:word16] = wArg06
	Mem214[ss:sp_152 - 0x0002:word16] = ax_165
	word16 sp_215
	word16 bp_216
	selector ss_217
	byte SCZO_218
	word16 si_219
	word16 di_220
	selector es_221
	byte D_222
	byte al_223
	selector ds_224
	byte SZO_225
	byte C_226
	byte Z_227
	word16 ax_228
	selector cs_229
	word16 cx_230
	byte SO_231
	byte S_232
	word16 bx_233
	byte bl_234
	byte bh_235
	byte CZ_236
	call SEQ(cs, Mem214[ss:bp_153 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: al_177,ax_176,bh_172,bl_171,bLoc2B,bp_153,bx_170,C_207,cs_166,cx_174,CZ_173,D_159,di_204,ds_161,es_158,S_206,SCZO_208,si_156,SO_179,sp_213,ss_154,SZO_205,wLoc02_4,wLoc24,wLoc28_145,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,Z_209
		defs: al_223,ax_228,bh_235,bl_234,bp_216,bx_233,C_226,cs_229,cx_230,CZ_236,D_222,di_220,ds_224,es_221,S_232,SCZO_218,si_219,SO_231,sp_215,ss_217,SZO_225,Z_227
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_174A:
	byte bl_267 = (byte) ax_176
	word16 bx_270 = DPB(ax_176, bl_267, 0)
	branch bl_267 < 0x00 l0800_1767
// DataOut: ax bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_174F:
	branch Mem149[ds:bx_270 + 0x055A:byte] != 0x01 l0800_1767
// DataOut: ax bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_1767:
	word16 sp_275 = sp_101 - 0x0002
	Mem276[ss:sp_275:word16] = wArg06
	Mem278[ss:sp_275 - 0x0002:word16] = bx_270
	word16 sp_279
	byte SCZO_282
	word16 di_284
	selector es_285
	byte D_286
	byte al_287
	byte SZO_289
	byte C_290
	byte Z_291
	word16 ax_292
	word16 cx_294
	byte SO_295
	byte S_296
	byte bl_298
	byte bh_299
	byte CZ_300
	call SEQ(cs, Mem278[ss:bp_153 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: al_265,ax_264,bh_268,bl_269,bLoc2B,bp_261,bx_270,C_273,cs_250,cx_255,CZ_247,D_253,di_259,ds_252,es_257,S_272,SCZO_256,si_260,SO_249,sp_277,ss_254,SZO_271,wLoc02_4,wLoc24,wLoc28_246,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,Z_251
		defs: al_287,ax_292,bh_299,bl_298,bp_280,bx_297,C_290,cs_293,cx_294,CZ_300,D_286,di_284,ds_288,es_285,S_296,SCZO_282,si_283,SO_295,sp_279,ss_281,SZO_289,Z_291
	sp_101 = sp_279 + 0x0004
// DataOut: bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_1756:
	word16 sp_314 = sp_101 - 0x0002
	Mem315[ss:sp_314:word16] = wArg06
	word16 sp_316
	byte SCZO_319
	word16 si_320
	word16 di_321
	selector es_322
	byte D_323
	byte al_324
	byte SZO_326
	byte C_327
	byte Z_328
	word16 ax_329
	word16 cx_331
	byte SO_332
	byte S_333
	word16 bx_334
	byte bl_335
	byte bh_336
	byte CZ_337
	call SEQ(cs, Mem315[ss:bp_153 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: al_265,ax_264,bh_268,bl_269,bLoc2B,bp_261,bx_270,C_273,cs_250,cx_255,CZ_247,D_253,di_259,ds_252,es_257,S_272,SCZO_308,si_260,SO_249,sp_314,ss_254,SZO_312,wLoc02_4,wLoc24,wLoc28_311,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,Z_309
		defs: al_324,ax_329,bh_336,bl_335,bp_317,bx_334,C_327,cs_330,cx_331,CZ_337,D_323,di_321,ds_325,es_322,S_333,SCZO_319,si_320,SO_332,sp_316,ss_318,SZO_326,Z_328
	sp_101 = sp_316 + 0x0002
	ax_176 = ax_329
	branch ax_329 > 0x0000 l0800_174A
// DataOut: al bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(16) Stack +0006(16)

l0800_1764:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0006(16)

l0800_1AEB:
	word16 sp_104 = sp_101 - 0x0002
	Mem105[ss:sp_104:word16] = wArg06
	Mem108[ss:sp_104 - 0x0002:word16] = 0xFFFF
	word16 sp_109
	word16 bp_110
	selector ss_111
	byte SCZO_112
	word16 si_113
	word16 di_114
	selector es_115
	byte D_116
	byte al_117
	selector ds_118
	byte SZO_119
	byte C_120
	byte Z_121
	word16 ax_122
	selector cs_123
	word16 cx_124
	byte SO_125
	byte S_126
	word16 bx_127
	byte bl_128
	byte bh_129
	byte CZ_130
	call SEQ(cs, Mem108[ss:bp_153 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: al_55,ax_106,bh_35,bl_36,bLoc2B_97,bp_50,bx_37,C_59,cs_40,cx_44,CZ_34,D_42,di_48,ds_41,es_46,S_38,SCZO_94,si_54,SO_39,sp_107,ss_100,SZO_57,wLoc02_4,wLoc24_96,wLoc28_99,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,Z_95
		defs: al_117,ax_122,bh_129,bl_128,bp_110,bx_127,C_120,cs_123,cx_124,CZ_130,D_116,di_114,ds_118,es_115,S_126,SCZO_112,si_113,SO_125,sp_109,ss_111,SZO_119,Z_121
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:0x00 bx:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_1AFF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):<invalid> -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_1B8C:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> al:<invalid> es:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):<invalid> -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>

fn0800_16F3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:<invalid> al:<invalid> es:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):<invalid> -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>



