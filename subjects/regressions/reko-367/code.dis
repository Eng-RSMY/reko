void fn80000000(word32 d2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut:
// Trashed: CVZNX d0 d1 fp0 fp1 fp2 fpsr
// Preserved: a7
fn80000000_entry:
// DataOut: d2
// DataOut (flags): 
// SymbolicIn: a7:fp

l80000000:
	fn800003CC(d2)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp

fn80000000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp fp0:<invalid> fpsr:<invalid> d0:0x00000000 fp2:<invalid> fp1:<invalid> d1:<invalid>



real80 fn80000132(word32 d2, real96 rArg04, real96 rArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut: fp0
// Trashed: CVZNX d0 d1 fp0 fpsr
// Preserved: a6 a7 d2
// Stack args: Stack +0004(96) Stack +0010(96)
fn80000132_entry:
// DataOut: d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(96) Stack +0010(96)

l80000132:
	word32 dwLoc14_17 = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0010(32) Local -0014(80) Local -0018(32) Stack +0004(96) Stack +0010(96)

l8000014A:
	branch (real96) (real80) dwLoc14_17 >= rArg10 l80000172
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> -24(fp):d2 -20(fp):<invalid> -16(fp):<invalid> -4(fp):a6
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32) Stack +0004(96) Stack +0010(96)

l80000172:
	return (real80) DPB(rLoc24, dwLoc10, 0)
// DataOut: fp0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> -24(fp):d2 -20(fp):<invalid> -16(fp):<invalid> -4(fp):a6

fn80000132_exit:
// DataOut: fp0
// DataOut (flags): 
// SymbolicIn: a7:fp a6:a6 fp0:<invalid> fpsr:<invalid> d0:<invalid> d1:<invalid> d2:d2 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d2 -20(fp):<invalid> -16(fp):<invalid> -4(fp):a6

l8000015A:
	dwLoc14_17 = dwLoc14_17 + 0x00000001
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> -24(fp):d2 -20(fp):<invalid> -16(fp):<invalid> -4(fp):a6
// LocalsOut: fp(32) Local -0010(32) Local -0014(80) Local -0018(32) Stack +0004(96) Stack +0010(96)



real80 fn8000018E(word32 d2, real96 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut: fp0
// Trashed: CVZNX d0 d1 fp0 fp1 fpsr
// Preserved: a6 a7 d2
// Stack args: Stack +0004(96)
fn8000018E_entry:
// DataOut: d2 fp2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(96)

l8000018E:
	word32 dwLoc14_19 = 1
// DataOut: fp2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0010(32) Local -0014(80) Local -0018(32) Stack +0004(96)

l800001A8:
	branch (real96) (real80) dwLoc14_19 > rArg04 l800001D4
// DataOut: fp2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> d0:1 fp1:<invalid> -24(fp):d2 -20(fp):<invalid> -16(fp):<invalid> -4(fp):a6
// LocalsOut: fp(32) Local -0010(32) Local -0014(80) Local -0018(32) Stack +0004(96)

l800001D4:
	return (real80) DPB(rLoc24, dwLoc10, 0)
// DataOut: fp0 fp2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> d0:1 fp1:<invalid> -24(fp):d2 -20(fp):<invalid> -16(fp):<invalid> -4(fp):a6

fn8000018E_exit:
// DataOut: fp0
// DataOut (flags): 
// SymbolicIn: a7:fp a6:a6 fp0:<invalid> fpsr:<invalid> d0:<invalid> d1:<invalid> d2:d2 fp1:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d2 -20(fp):<invalid> -16(fp):<invalid> -4(fp):a6

l800001B8:
	dwLoc14_19 = dwLoc14_19 + 0x00000001
// DataOut: fp2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> d0:1 fp1:<invalid> -24(fp):d2 -20(fp):<invalid> -16(fp):<invalid> -4(fp):a6
// LocalsOut: fp(32) Local -0010(32) Local -0014(80) Local -0018(32) Stack +0004(96)



real80 fn800001F2(word32 d2, real96 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut: fp0
// Trashed: CVZNX d0 d1 fp0 fp1 fp2 fpsr
// Preserved: a6 a7 d2
// Stack args: Stack +0004(80)
fn800001F2_entry:
// DataOut: d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0034(32) Local -0038(32) Stack +0004(80)

l800001F2:
	word32 dwLoc20_28 = 3
// DataOut: a6 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(80) Local -0010(32) Local -001C(0) Local -0020(80) Local -0030(32) Local -0034(32) Local -0038(32) Stack +0004(80)

l8000021C:
	branch 100 - dwLoc20_28 < 0x00000000 l8000028A
// DataOut: a6 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> fp1:<invalid> d0:<invalid> fp2:<invalid> d1:<invalid> -72(fp):<invalid> -60(fp):<invalid> -48(fp):d2 -44(fp):fp2 -32(fp):<invalid> -28(fp):<invalid> -16(fp):<invalid> -4(fp):a6
// LocalsOut: fp(80) Local -0010(32) Local -001C(0) Local -0020(80) Local -0030(32) Local -0034(32) Local -0038(32) Stack +0004(80)

l8000028A:
	return (real80) DPB(rLoc3C, dwLoc10, 0)
// DataOut: fp0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> fp1:<invalid> d0:100 fp2:<invalid> d1:<invalid> -72(fp):<invalid> -60(fp):<invalid> -48(fp):d2 -44(fp):fp2 -32(fp):<invalid> -28(fp):<invalid> -16(fp):<invalid> -4(fp):a6

fn800001F2_exit:
// DataOut: fp0
// DataOut (flags): 
// SymbolicIn: a7:fp a6:a6 fp0:<invalid> fpsr:<invalid> fp1:<invalid> d0:<invalid> d1:<invalid> d2:d2 fp2:<invalid> -72(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):fp2 -32(fp):<invalid> -28(fp):<invalid> -16(fp):<invalid> -4(fp):a6

l80000224:
	fn80000132(d2, (real96) (real80) rArg04, (real96) (real80) dwLoc20_28)
	real96 v19_67 = (real96) (real80) dwLoc20_28
	fn8000018E(d2, v19_67)
	rLoc3C = v19_67
	dwLoc20_28 = dwLoc20_28 + 0x00000002
// DataOut: a6 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> fp1:<invalid> d0:100 fp2:<invalid> d1:<invalid> -72(fp):<invalid> -60(fp):<invalid> -48(fp):d2 -44(fp):fp2 -32(fp):<invalid> -28(fp):<invalid> -16(fp):<invalid> -4(fp):a6
// LocalsOut: fp(80) Local -0010(32) Local -001C(0) Local -0020(80) Local -0030(32) Local -0034(32) Local -0038(32) Stack +0004(80)



real80 fn800002AE(word32 d2, real96 rArg04, ptr32 & fp2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut: fp0 fp2
// Trashed: CVZNX d0 d1 fp0 fp1 fp2 fpsr
// Preserved: a6 a7 d2
// Stack args: Stack +0004(80)
fn800002AE_entry:
// DataOut: d2 fp2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0034(32) Local -0038(32) Stack +0004(80)

l800002AE:
	word32 dwLoc20_27 = 2
// DataOut: a6 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(80) Local -0010(32) Local -001C(0) Local -0020(80) Local -002C(80) Local -0030(32) Local -0034(32) Local -0038(32) Stack +0004(80)

l800002DA:
	branch 100 - dwLoc20_27 < 0x00000000 l80000348
// DataOut: a6 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> fp1:<invalid> d0:<invalid> fp2:<invalid> d1:<invalid> -72(fp):<invalid> -60(fp):<invalid> -48(fp):d2 -44(fp):fp2 -32(fp):<invalid> -28(fp):<invalid> -16(fp):<invalid> -4(fp):a6
// LocalsOut: fp(80) Local -0010(32) Local -001C(0) Local -0020(80) Local -002C(80) Local -0030(32) Local -0034(32) Local -0038(32) Stack +0004(80)

l80000348:
	real80 fp2_118
	*fp2Out = fp2
	return (real80) DPB(rLoc3C, dwLoc10, 0)
// DataOut: fp0 fp2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> fp1:<invalid> d0:100 fp2:<invalid> d1:<invalid> -72(fp):<invalid> -60(fp):<invalid> -48(fp):d2 -44(fp):fp2 -32(fp):<invalid> -28(fp):<invalid> -16(fp):<invalid> -4(fp):a6

fn800002AE_exit:
// DataOut: fp0 fp2
// DataOut (flags): 
// SymbolicIn: a7:fp a6:a6 fp0:<invalid> fpsr:<invalid> fp1:<invalid> d0:<invalid> d1:<invalid> d2:d2 fp2:<invalid> -72(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):fp2 -32(fp):<invalid> -28(fp):<invalid> -16(fp):<invalid> -4(fp):a6

l800002E2:
	fn80000132(d2, (real96) (real80) rArg04, (real96) (real80) dwLoc20_27)
	real96 v19_67 = (real96) (real80) dwLoc20_27
	fn8000018E(d2, v19_67)
	rLoc3C = v19_67
	dwLoc20_27 = dwLoc20_27 + 0x00000002
// DataOut: a6 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a6:fp - 0x00000004 fp0:<invalid> fpsr:<invalid> fp1:<invalid> d0:100 fp2:<invalid> d1:<invalid> -72(fp):<invalid> -60(fp):<invalid> -48(fp):d2 -44(fp):fp2 -32(fp):<invalid> -28(fp):<invalid> -16(fp):<invalid> -4(fp):a6
// LocalsOut: fp(80) Local -0010(32) Local -001C(0) Local -0020(80) Local -002C(80) Local -0030(32) Local -0034(32) Local -0038(32) Stack +0004(80)



void fn8000036C(word32 d2, real96 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut:
// Trashed: CVZNX d0 d1 fp0 fp1 fp2 fpsr
// Preserved: a6 a7 d2
// Stack args: Stack +0004(80)
fn8000036C_entry:
// DataOut: d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(80) Local -0018(32) Local -001C(32) Stack +0004(80)

l8000036C:
	fn800001F2(d2, (real96) (real80) rArg04)
	real80 fp2_32
	fn800002AE(d2, (real96) (real80) rArg04, out fp2_32)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp

fn8000036C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a6:a6 fp0:<invalid> fpsr:<invalid> fp2:<invalid> fp1:<invalid> d0:<invalid> d1:<invalid> d2:d2 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):fp2 -4(fp):a6



void fn800003CC(word32 d2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut:
// Trashed: CVZNX d0 d1 fp0 fp1 fp2 fpsr
// Preserved: a6 a7
fn800003CC_entry:
// DataOut: d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l800003CC:
	real96 v6_10 = (real96) (real80) Mem0[0x80000538:real96]
	fn80000132(d2, (real96) (real80) v6_10, (real96) (real80) v6_10)
	fn8000018E(d2, (real96) (real80) v6_10)
	fn800001F2(d2, (real96) (real80) v6_10)
	real80 fp2_50
	fn800002AE(d2, (real96) (real80) v6_10, out fp2_50)
	fn8000036C(d2, (real96) (real80) v6_10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp

fn800003CC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a6:a6 fp0:<invalid> fpsr:<invalid> d0:0x00000000 fp2:<invalid> fp1:<invalid> d1:<invalid> -40(fp):<invalid> -28(fp):<invalid> -16(fp):<invalid> -4(fp):a6



