DWORD Win32CrtStartup()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp fs
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
Win32CrtStartup_entry:
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l004014E0:
	Mem4[0x00406398:word32] = 0x00000000
	fn00401840()
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401170:
	word32 ecx_12 = 0x00000011
	word32 ebp_13 = fp - 0x00000004
	word32 edi_24 = fp - 0x00000060
// DataOut: eax ebp ecx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> edx:<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00401185:
	branch ecx_12 == 0x00000000 l00401187
// DataOut: eax ebp ecx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l00401187:
	fn00402770(0x00000030)
	word32 eax_35 = fp - 0x000000A1 & 0xFFFFFFF0
	Mem36[eax_35:word32] = 0xCCCCCCCC
	Mem37[eax_35 + 0x00000004:word32] = 0xCCCCCCCC
	Mem38[eax_35 + 0x00000008:word32] = 0xCCCCCCCC
	Mem39[eax_35 + 0x0000000C:word32] = 0xCCCCCCCC
	Mem40[eax_35 + 0x00000010:word32] = 0xCCCCCCCC
	Mem41[eax_35 + 0x00000014:word32] = 0xCCCCCCCC
	Mem42[eax_35 + 0x00000018:word32] = 0xCCCCCCCC
	Mem43[eax_35 + 0x0000001C:word32] = 0xCCCCCCCC
	__align(fp - 0x000000BC)
	branch Mem43[0x00406398:word32] != 0x00000000 l00401470
// DataOut: ebp esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l00401470:
	GetStartupInfoA(fp - 0x00000060)
// DataOut: ebp esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:fp - 0x000000A1 & 0xFFFFFFF0 ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:<invalid> esi:<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l004011E2:
	word32 ebx_57 = Mem43[Mem43[fs:0x00000018:word32] + 0x00000004:word32]
	word32 edi_322 = Sleep
// DataOut: ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:fp - 0x000000A1 & 0xFFFFFFF0 ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:<invalid> esi:<invalid> -188(fp):fp - 0x00000060 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l00401209:
	word32 ebx_361
	__lock()
	word32 eax_64
	__cmpxchg(Mem43[0x004063EC:word32], ebx_57, 0x00000000, out eax_64)
	word32 esp_330 = fp - 0x000000BC
	branch eax_64 != 0x00000000 l004011F5
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l004011F5:
	branch ebx_57 == eax_64 l00401412
// DataOut: ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l00401412:
	ebx_361 = 0x00000001
	branch Mem43[0x004063F0:word32] != 0x00000001 l00401227
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l004011FD:
	Sleep(0x000003E8)
// DataOut: ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l00401217:
	ebx_361 = 0x00000000
	branch Mem43[0x004063F0:word32] == 0x00000001 l00401425
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401425:
	_amsg_exit(0x0000001F)
	Mem359[fp - 0x000000BC:word32] = 0x0000001F
	_amsg_exit(Mem359[fp - 0x000000BC:int32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401227:
	branch Mem43[0x004063F0:word32] == 0x00000000 l00401481
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401481:
	Mem351[0x004063F0:word32] = 0x00000001
	_initterm(0x0040800C, 0x00408018)
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401234:
	Mem349[0x00406004:word32] = 0x00000001
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l0040123E:
	branch Mem43[0x004063F0:word32] == 0x00000001 l0040143F
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):0x00408018 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l0040143F:
	_initterm(0x00408000, 0x00408008)
	Mem348[0x004063F0:word32] = 0x00000002
	branch ebx_361 != 0x00000000 l00401254
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):0x00408018 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l0040124C:
	branch ebx_361 == 0x00000000 l00401465
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):0x00408018 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401465:
	Mem338[0x004063EC:word32] = ebx_361
// DataOut: ebp edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401254:
	word32 eax_83 = Mem43[0x00404088:word32]
	branch eax_83 == 0x00000000 l00401279
// DataOut: ebp edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l0040125D:
	word32 esp_315
	byte SCZO_316
	word32 eax_318
	byte SZO_319
	byte C_320
	word32 ecx_321
	word32 esi_323
	word32 edx_324
	word32 ebx_325
	byte Z_326
	selector fs_327
	byte dl_328
	word16 ax_329
	call eax_83 (retsize: 4; depth: 192)
		uses: ax_63,C_86,dl,dwLoc04_9,dwLoc08_16,dwLoc0C_19,dwLoc10_23,dwLocB4_312,dwLocB8_313,dwLocBC_314,eax_83,ebp_13,ebx_82,ecx_28,edi_58,edx_20,esi_54,esp_60,fs,SCZO_78,SZO_84,Z_85
		defs: ax_329,C_320,dl_328,eax_318,ebp_317,ebx_325,ecx_321,edi_322,edx_324,esi_323,esp_315,fs_327,SCZO_316,SZO_319,Z_326
	esp_330 = esp_315 - 0x0000000C
// DataOut: ebp edi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000BC eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401279:
	fn00401CF0(ebp_13, edi_322)
	Mem102[esp_330:word32] = 0x00401FC0
	Mem107[0x004063AC:word32] = SetUnhandledExceptionFilter(Mem102[esp_330:LPTOP_LEVEL_EXCEPTION_FILTER])
	word32 esp_104 = esp_330 + 0x00000004
	Mem108[esp_104 - 0x00000004:word32] = 0x00401000
	fn00402860(dwArg00)
	fn00401B20()
	Mem111[0x004063DC:word32] = 0x00400000
	word32 eax_112 = Mem111[acmdln:word32]
	branch eax_112 == 0x00000000 l00401314
// DataOut: eax ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:<invalid> edi:Sleep esi:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// Terminates process

l004012B9:
	word32 ecx_246 = 0x00000000
// DataOut: eax ebp ecx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012D1:
	byte dl_256 = (byte) (word32) Mem111[eax_112:byte]
	branch dl_256 <= 0x20 l004012C0
// DataOut: dl eax ebp ecx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012C0:
	branch dl_256 == 0x00 l004012F0
// DataOut: dl eax ebp ecx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012C4:
	branch (ecx_246 & 0x00000001) == 0x00000000 l004012F0
// DataOut: dl eax ebp esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012F0:
	branch dl_256 != 0x00 l00401305
// DataOut: eax ebp esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401305:
	word32 eax_293 = eax_112 + 0x00000001
	branch (byte) (word32) Mem111[eax_293:byte] != 0x00 l00401300
	eax_112 = eax_293 + 0x00000001
	byte dl_301 = (byte) (word32) Mem111[eax_293 + 0x00000001:byte]
	branch dl_301 != 0x00 l00401300
// DataOut: dl eax ebp esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401300:
	branch dl_301 > 0x20 l0040130F
// DataOut: eax ebp esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012F4:
// DataOut: eax ebp esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l0040130F:
	Mem288[0x004063D8:word32] = eax_112
	Mem289[0x004063D8:word32] = eax_112
	Mem290[0x004063D8:word32] = eax_112
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401314:
	word32 ebx_123 = Mem111[0x00406398:word32]
	branch ebx_123 == 0x00000000 l00401334
// DataOut: ebp ebx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l0040131E:
	word16 ax_240 = 0x000A
	branch (Mem111[ebp_13 - 0x00000030:byte] & 0x01) == 0x00 l0040132C
// DataOut: ax ebp ebx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401327_1:
	ax_240 = Mem111[ebp_13 - 0x0000002C:word16]
// DataOut: ax ebp ebx esp
// DataOut (flags): 
// SymbolicIn: eax:0x0000000A ebx:<invalid> ecx:<invalid> edx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l0040132C:
	Mem243[0x00403000:word32] = (word32) ax_240
// DataOut: ebp ebx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401334:
	word32 eax_141
	word32 eax_129 = Mem111[0x00406018:word32]
	Mem130[ebp_13 - 0x00000070:word32] = eax_129
	word32 eax_132 = eax_129 * 0x00000004 + 0x00000004
	Mem133[ebp_13 - 0x00000074:word32] = eax_132
	Mem134[esp_104 - 0x00000004:word32] = eax_132
	Mem138[ebp_13 - 0x0000006C:word32] = malloc(Mem134[esp_104 - 0x00000004:size_t])
	word32 edi_139 = Mem138[0x00406014:word32]
	branch eax_129 <= 0x00000000 l004014A4
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004014A4:
	eax_141 = 0x00000000
// DataOut: eax ebp ebx
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401361:
	ebx_123 = 0x00000000
// DataOut: ebp ebx esi esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401365:
	Mem213[esp_104 - 0x00000004:word32] = Mem138[edi_139 + ebx_123 * 0x00000004:word32]
	word32 eax_214 = strlen(Mem213[esp_104 - 0x00000004:(ptr char)])
	Mem216[esp_104 - 0x00000004:word32] = eax_214 + 0x00000001
	word32 eax_217 = malloc(Mem216[esp_104 - 0x00000004:size_t])
	Mem219[Mem216[ebp_13 - 0x0000006C:word32] + ebx_123 * 0x00000004:word32] = eax_217
	word32 ecx_220 = Mem219[edi_139 + ebx_123 * 0x00000004:word32]
	Mem222[esp_104 + 0x00000004:word32] = eax_214 + 0x00000001
	Mem223[esp_104 - 0x00000004:word32] = eax_217
	Mem224[esp_104:word32] = ecx_220
	memcpy(Mem224[esp_104 - 0x00000004:(ptr void)], Mem224[esp_104:(ptr void)], Mem224[esp_104 + 0x00000004:size_t])
	ebx_123 = ebx_123 + 0x00000001
	branch Mem224[ebp_13 - 0x00000070:word32] != ebx_123 l00401365
// DataOut: ebp ebx esi esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> ax:<invalid> edx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l0040139C:
	eax_141 = Mem224[ebp_13 - 0x00000074:word32] - 0x00000004
// DataOut: eax ebp ebx
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> ax:<invalid> edx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004013A2:
	word32 esi_144 = Mem138[ebp_13 - 0x0000006C:word32]
	Mem145[esi_144 + eax_141:word32] = 0x00000000
	Mem146[0x00406014:word32] = esi_144
	word32 ebx_147 = fn00401800(ebx_123)
	Mem150[_initenv:word32] = Mem146[0x00406010:word32]
	Mem152[esp_104 + 0x00000004:word32] = Mem150[0x00406010:word32]
	Mem154[esp_104:word32] = Mem152[0x00406014:word32]
	Mem156[esp_104 - 0x00000004:word32] = Mem154[0x00406018:word32]
	word32 eax_157 = fn00401630(dwArg00)
	word32 ecx_159 = Mem156[0x00406008:word32]
	Mem160[0x0040600C:word32] = eax_157
	branch ecx_159 == 0x00000000 l004014AB
// DataOut: eax ebp esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004014AB:
	Mem206[esp_104 - 0x00000004:word32] = 0x00000000
	exit(Mem206[esp_104 - 0x00000004:int32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: eax:0x00000000 ebx:<invalid> esi:<invalid> edi:<invalid> esp:<invalid> al:0x00 edx:<invalid> ecx:<invalid> ax:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004013F6:
	word32 edx_164 = Mem160[0x00406004:word32]
	branch edx_164 != 0x00000000 l0040140A
// DataOut: eax ebp esp
// DataOut (flags): 
// SymbolicIn: eax:0x00000000 ebx:<invalid> esi:<invalid> edi:<invalid> esp:<invalid> al:0x00 edx:<invalid> ecx:<invalid> ax:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401400:
	word32 esp_188
	byte SCZO_189
	word32 ebp_190
	word32 eax_191
	byte SZO_192
	byte C_193
	word32 ecx_194
	word32 edi_195
	word32 esi_196
	word32 edx_197
	word32 ebx_198
	byte Z_199
	selector fs_200
	byte dl_201
	word16 ax_202
	call cexit (retsize: 4; depth: 4)
		uses: ax_158,C_167,dl_117,dwLoc04_9,dwLoc08_16,dwLoc0C_19,dwLoc10_23,dwLocB4_89,dwLocB8_90,dwLocBC_91,eax_157,ebp_96,ebx_147,ecx_159,edi_143,edx_164,esi_144,esp_105,fs_93,SCZO_142,SZO_165,Z_166
		defs: ax_202,C_193,dl_201,eax_191,ebp_190,ebx_198,ecx_194,edi_195,edx_197,esi_196,esp_188,fs_200,SCZO_189,SZO_192,Z_199
	eax_157 = Mem160[0x0040600C:word32]
// DataOut: eax ebp
// DataOut (flags): 
// SymbolicIn: eax:0x00000000 ebx:<invalid> esi:<invalid> edi:<invalid> esp:<invalid> al:0x00 edx:<invalid> ecx:<invalid> ax:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l0040140A:
	return eax_157
// DataOut:
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> esp:<invalid> al:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

Win32CrtStartup_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> esp:ebp + 0x00000004 al:<invalid> edx:<invalid> ecx:<invalid> ebp:<invalid> ax:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012C9:
	ecx_246 = 0x00000001
// DataOut: eax ebp ecx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012D9:
	word32 ebx_268 = ecx_246 ^ 0x00000001
	branch dl_256 != 0x22 l004012E4
// DataOut: eax ebp ebx ecx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012E1_1:
	ecx_246 = ebx_268
// DataOut: eax ebp ecx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012E4:
// DataOut: eax ebp ecx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004012CE:
	eax_112 = eax_112 + 0x00000001
// DataOut: eax ebp ecx esp
// DataOut (flags): 
// SymbolicIn: eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):0x00000000 -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401185_1:
	Mem29[edi_24:word32] = 0x00000000
	edi_24 = edi_24 + 0x00000004
	ecx_12 = ecx_12 - 0x00000001
// DataOut: eax ebp ecx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C eax:<invalid> ecx:<invalid> ebp:fp - 0x00000004 edx:fp - 0x00000060 edi:<invalid> -96(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)



word32 fn00401630(word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx esp
fn00401630_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401630:
	__align(fp)
	Mem24[fp - 0x00000030:word32] = Mem0[Mem0[fn00401800(fp + 0x00000004) + 0x00000004:word32] + 0x00000004:word32]
	Mem32[fp - 0x0000002C:word32] = LoadLibraryA(Mem24[fp - 0x00000030:LPCSTR])
	Mem33[fp - 0x00000030:word32] = 0x00404064
	printf(Mem33[fp - 0x00000030:(ptr char)], Mem33[fp - 0x0000002C:uint32])
	Mem39[fp - 0x0000002C:word32] = GetLastError()
	Mem40[fp - 0x00000030:word32] = 0x00404072
	printf(Mem40[fp - 0x00000030:(ptr char)], Mem40[fp - 0x0000002C:uint32])
	return 0x00000000
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp

fn00401630_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:fp + 0x00000004 ebp:ebp ebx:ebx eax:0x00000000 al:0x00 edx:<invalid> -48(fp):0x00404072 -44(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):fp + 0x00000004 -12(fp):ebx -8(fp):ebp -4(fp):<invalid>



word32 fn004016A0(word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax esp
// Trashed: SCZO ah al ax bh bl bx eax ebx esp rax rbx rsp sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32)
fn004016A0_entry:
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Local -0030(0) Local -0034(32) Stack +0000(32) Stack +0004(32)

l004016A0:
	word32 eax_10 = fn00401B30(Mem0[0x004063E8:word32])
	branch eax_10 == 0xFFFFFFFF l00401740
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Local -0034(32) Stack +0000(32) Stack +0004(32)

l00401740:
	return _onexit(dwArg04)
// DataOut: eax ebp esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C eax:<invalid> -44(fp):<invalid> -20(fp):<invalid> -4(fp):ebx

l004016BE:
	word32 esp_30
	word32 ebx_31
	byte SCZO_32
	word32 eax_33
	byte Z_34
	call lock (retsize: 4; depth: 48)
		uses: dwLoc04_4,dwLoc14_13,dwLoc18,dwLoc28,dwLoc2C_25,dwLoc30,dwLoc34,eax_10,ebx,esp_5,SCZO_11,Z_12
		defs: eax_33,ebx_31,esp_30,SCZO_32,Z_34
	word32 eax_38 = fn00401B30(Mem0[0x004063E8:word32])
	fn00401B30(Mem0[0x004063E4:word32])
	word32 esp_51
	word32 ebx_52
	byte SCZO_53
	word32 eax_54
	byte Z_55
	call _dllonexit (retsize: 4; depth: 52)
		uses: dwLoc04_4,dwLoc14_43,dwLoc18_39,dwLoc28_45,dwLoc2C_47,dwLoc30_50,dwLoc34,eax_49,ebx_31,esp_35,SCZO_32,Z_34
		defs: eax_54,ebx_52,esp_51,SCZO_53,Z_55
	Mem62[0x004063E8:word32] = fn00401B40(dwLoc1C)
	word32 eax_65 = fn00401B40(eax_38)
	Mem67[0x004063E4:word32] = eax_65
	word32 esp_68
	word32 ebx_69
	byte SCZO_70
	word32 eax_71
	byte Z_72
	call unlock (retsize: 4; depth: 56)
		uses: dwLoc04_4,dwLoc14_43,dwLoc18_39,dwLoc1C,dwLoc28_45,dwLoc2C_47,dwLoc30_50,dwLoc34_66,eax_65,ebx_57,esp_56,SCZO_53,Z_55
		defs: eax_71,ebx_69,esp_68,SCZO_70,Z_72
	return ebx_69
// DataOut: eax ebp esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C eax:<invalid> -44(fp):<invalid> -20(fp):<invalid> -4(fp):ebx

fn004016A0_exit:
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebx:<invalid> -44(fp):<invalid> -20(fp):<invalid> -4(fp):ebx



void fn00401760(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx eax ebx esp rax rbx rsp sp spl
// Preserved: esp
// Stack args: Stack +0004(32)
fn00401760_entry:
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401760:
	fn004016A0(dwLoc20, dwArg04)
	return
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:fp

fn00401760_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:-(word32) Test(EQ,Z) al:<invalid> ebx:<invalid> -28(fp):<invalid>



word32 fn00401800(word32 ebx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx
// LiveOut: ebx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx esp rax rbx rdx rsp sp spl
// Preserved: esp
fn00401800_entry:
// DataOut: ebp ebx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401800:
	branch Mem0[0x00406034:word32] == 0x00000000 l00401810
// DataOut: ebp ebx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401810:
	Mem20[0x00406034:word32] = 0x00000001
// DataOut: ebp ebx
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>
// LocalsOut: fp(32)

l004017B0:
	word32 esp_23 = fp - 0x0000001C
	word32 ebx_24 = Mem20[0x00402880:word32]
	branch ebx_24 == 0xFFFFFFFF l004017E0
// DataOut: ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>
// LocalsOut: Local -0004(32)

l004017E0:
	ebx_24 = 0x00000000
// DataOut: ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C eax:<invalid> ebx:<invalid> -4(fp):ebx
// LocalsOut: Local -0004(32)

l004017E6:
	word32 eax_60 = ebx_24 + 0x00000001
	branch Mem20[eax_60 * 0x00000004 + 0x00402880:word32] != 0x00000000 l004017E4
// DataOut: eax ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C eax:<invalid> ebx:<invalid> edx:<invalid> -4(fp):ebx
// LocalsOut: Local -0004(32)

l004017E4:
	ebx_24 = eax_60
// DataOut: ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C eax:<invalid> ebx:<invalid> edx:<invalid> -4(fp):ebx
// LocalsOut: Local -0004(32)

l004017F4:
// DataOut: ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C eax:<invalid> ebx:<invalid> edx:<invalid> -4(fp):ebx
// LocalsOut: Local -0004(32)

l004017BF:
	branch ebx_24 == 0x00000000 l004017CF
// DataOut: ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C eax:<invalid> ebx:<invalid> edx:<invalid> -4(fp):ebx
// LocalsOut: Local -0004(32)

l004017C3:
	word32 eax_46
	byte SZO_47
	byte C_48
	byte Z_49
	word32 ebx_50
	byte SCZO_51
	word32 edx_52
	call Mem20[ebx_24 * 0x00000004 + 0x00402880:word32] (retsize: 4; depth: 4)
		uses: C_32,dwLoc04_22,eax_28,ebx_29,edx_27,esp_23,SCZO_25,SZO_30,Z_31
		defs: C_48,eax_46,ebx_50,edx_52,esp_45,SCZO_51,SZO_47,Z_49
	branch ebx_50 != 0x00000001 l004017C3
// DataOut: ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -4(fp):ebx
// LocalsOut: Local -0004(32)

l004017CF:
	Mem39[esp_23:word32] = 0x00401780
	fn00401760(dwArg00)
	return Mem39[esp_23 + 0x00000018:word32]
// DataOut: ebp ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -4(fp):ebx

l00401809:
	return ebx
// DataOut: ebp ebx
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

fn00401800_exit:
// DataOut: ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebx:<invalid> al:<invalid> edx:<invalid> -4(fp):ebx



void fn00401840()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: ebp ebx edi esi esp
fn00401840_entry:
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0020(32) Local -0024(32)

l00401840:
	word32 eax_16 = Mem0[0x0040302C:word32]
	branch eax_16 == 0xBB40E64E l00401872
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0020(32) Local -0024(32)

l00401872:
	word32 edx_72
	GetSystemTimeAsFileTime(fp - 0x0000002C)
	word32 eax_51 = GetCurrentProcessId()
	word32 eax_53 = GetCurrentThreadId()
	word32 eax_55 = GetTickCount()
	QueryPerformanceCounter(fp - 0x00000024)
	word32 eax_69 = dwLoc24 ^ 0x00000000 ^ dwLoc20 ^ eax_51 ^ eax_53 ^ eax_55
	branch eax_69 == 0xBB40E64E l004018E0
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C eax:<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32)

l004018E0:
	edx_72 = 0x44BF19B0
	eax_69 = 0xBB40E64F
// DataOut: eax edx fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C eax:<invalid> ebx:0x00000000 ebp:<invalid> edi:<invalid> esi:<invalid> -60(fp):fp - 0x00000024 -44(fp):0x00000000 -40(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32)

l004018C9:
	edx_72 = ~eax_69
// DataOut: eax edx fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C eax:<invalid> ebx:0x00000000 ebp:<invalid> edi:<invalid> esi:<invalid> -60(fp):fp - 0x00000024 -44(fp):0x00000000 -40(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32)

l004018CD:
	Mem74[0x0040302C:word32] = eax_69
	Mem75[0x00403030:word32] = edx_72
	return
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C eax:<invalid> ebx:0x00000000 ebp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> -60(fp):fp - 0x00000024 -44(fp):0x00000000 -40(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401863:
	Mem32[0x00403030:word32] = ~eax_16
	return
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C eax:<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

fn00401840_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ebx:ebx esi:esi edi:edi ebp:ebp edx:<invalid> -60(fp):fp - 0x00000024 -44(fp):0x00000000 -40(fp):0x00000000 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp



void fn00401B20()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00401B20_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00401B20_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

l00401B20:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



word32 fn00401B30(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: ah al ax eax rax
// Preserved: esp
// Stack args: Stack +0004(32)
fn00401B30_entry:
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(32)

l00401B30:
	return dwArg04
// DataOut: eax ebp
// DataOut (flags): 
// SymbolicIn: esp:fp

fn00401B30_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>



word32 fn00401B40(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: ah al ax eax rax
// Preserved: esp
// Stack args: Stack +0004(32)
fn00401B40_entry:
// DataOut: ebp ebx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(32)

l00401B40:
	return dwArg04
// DataOut: eax ebp ebx
// DataOut (flags): 
// SymbolicIn: esp:fp

fn00401B40_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>



word32 fn00401B50(word32 edi, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi
// LiveOut: eax ebp ebx edi esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn00401B50_entry:
// DataOut: edi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401B50:
	word32 esp_14
	word32 ebx_15
	byte SCZO_16
	word32 eax_17
	word32 edi_18
	word32 esi_19
	byte SZO_20
	byte C_21
	word32 edx_22
	word32 ecx_23
	byte CZ_24
	byte Z_25
	word32 ebp_26
	call msvcrt.dll!fwrite (retsize: 4; depth: 32)
		uses: dwLoc04_4,dwLoc10_13,dwLoc14_7,dwLoc18_8,dwLoc1C_10,eax_11,ebx_9,esp_5,SCZO_12
		defs: C_21,CZ_24,eax_17,ebp_26,ebx_15,ecx_23,edi_18,edx_22,esi_19,esp_14,SCZO_16,SZO_20,Z_25
	word32 esp_35
	word32 ebx_36
	byte SCZO_37
	word32 eax_38
	word32 edi_39
	word32 esi_40
	byte SZO_41
	byte C_42
	word32 edx_43
	word32 ecx_44
	byte CZ_45
	byte Z_46
	word32 ebp_47
	call msvcrt.dll!vfprintf (retsize: 4; depth: 32)
		uses: C_21,CZ_24,dwLoc04_4,dwLoc10_13,dwLoc14_29,dwLoc18_30,dwLoc1C_34,eax_32,ebp_26,ebx_15,ecx_23,edi_18,edx_22,esi_19,esp_14,SCZO_33,SZO_20,Z_25
		defs: C_42,CZ_45,eax_38,ebp_47,ebx_36,ecx_44,edi_39,edx_43,esi_40,esp_35,SCZO_37,SZO_41,Z_46
	abort()
// DataOut: eax edi
// DataOut (flags): 
// SymbolicIn: esp:fp

l00401B9C_thunk_fn00401BB0:
	word32 ebx_48
	word32 ebp_49
	word32 esi_50
	word32 edi_51
	return fn00401BB0(eax_38, edi_39, out ebx_48, out ebp_49, out esi_50, out edi_51)
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebx:fp + 0x00000008 -28(fp):0x004041C0 -24(fp):0x00000001 -20(fp):0x0000001B -16(fp):iob + 0x00000040 -4(fp):ebx

fn00401B50_exit:
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ebp:<invalid> -28(fp):0x004041C0 -24(fp):0x00000001 -20(fp):0x0000001B -16(fp):iob + 0x00000040 -4(fp):ebx



word32 fn00401BB0(word32 eax, word32 edi, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax edi
// LiveOut: eax ebp ebx edi esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn00401BB0_entry:
	*ebpOut = ebp
// DataOut: eax ebp ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0014(32) Local -001C(32) Local -0028(32)

l00401BB0:
	word32 ebx_190
	word32 esp_11 = fp - 0x0000003C
	word32 esi_13 = Mem0[0x004063A0:word32]
	branch esi_13 <= 0x00000000 l00401C9D
// DataOut: eax ebp esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0014(32) Local -001C(32) Local -0028(32)

l00401C9D:
	ebx_190 = 0x00000000
// DataOut: eax ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0014(32) Local -001C(32) Local -0028(32)

l00401BC4:
	ebx_190 = 0x00000000
	word32 edx_193 = Mem0[0x004063A4:word32] + 0x00000004
// DataOut: eax ebp ebx edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0014(32) Local -001C(32) Local -0028(32)

l00401BD0:
	word32 ecx_200 = Mem0[edx_193:word32]
	branch ecx_200 >u eax l00401BE4
// DataOut: eax ebp ebx ecx edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> edi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0014(32) Local -001C(32) Local -0028(32)

l00401BD6:
	branch eax <u ecx_200 + Mem0[Mem0[edx_193 + 0x00000004:word32] + 0x00000008:word32] l00401C96
// DataOut: eax ebp ebx edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> edi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0014(32) Local -001C(32) Local -0028(32)

l00401BE4:
	ebx_190 = ebx_190 + 0x00000001
	edx_193 = edx_193 + 0x0000000C
	branch ebx_190 != esi_13 l00401BD0
// DataOut: eax ebp ebx edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> edi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0014(32) Local -001C(32) Local -0028(32)

l00401BEE:
	word32 eax_65 = fn00402500(eax)
	word32 esi_136 = eax
	word32 edi_126 = eax_65
	branch eax_65 == 0x00000000 l00401CDA
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> ebx:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0014(32) Local -001C(32) Local -0028(32)

l00401C02:
	word32 ebx_96 = ebx_190 * 0x00000003
	word32 esi_98 = Mem0[0x004063A4:word32] + (ebx_96 << 0x00000002)
	Mem100[esi_98 + 0x00000008:word32] = eax_65
	Mem101[esi_98:word32] = 0x00000000
	Mem104[esi_98 + 0x00000004:word32] = fn00402610() + Mem101[eax_65 + 0x0000000C:word32]
	word32 ebx_125 = ebx_96 << 0x00000002
	word32 esp_113 = fp - 0x0000003C
	branch VirtualQuery(Mem104[Mem104[0x004063A4:word32] + 0x00000004 + (ebx_96 << 0x00000002):word32], fp - 0x00000028, 0x0000001C) == 0x00000000 l00401CBA
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:eax ebx:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> -60(fp):eax -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0014(32) Local -001C(32) Local -0028(32)

l00401C4D:
	eax = dwLoc14
	branch (dwLoc14 - 0x00000004 & 0xFFFFFFFB) == 0x00000000 l00401C8F
// DataOut: eax ebp ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> ebx:<invalid> edi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):fp - 0x00000028 -52(fp):0x0000001C -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -001C(32) Local -0028(32)

l00401C59:
	eax = dwLoc14 - 0x00000040 & 0xFFFFFFBF
	branch eax == 0x00000000 l00401C8F
// DataOut: eax ebp ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> ebx:<invalid> edi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):fp - 0x00000028 -52(fp):0x0000001C -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -001C(32) Local -0028(32)

l00401C61:
	eax = VirtualProtect(dwLoc28, dwLoc1C, 0x00000040, (ebx_96 << 0x00000002) + Mem104[0x004063A4:word32])
	branch eax == 0x00000000 l00401CA4
// DataOut: eax ebp edi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> ebx:<invalid> edi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):fp - 0x00000028 -52(fp):0x0000001C -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l00401CA4:
	GetLastError()
	word32 ebp_184
	word32 esi_185
	fn00401B50(eax_65, 0x00404230, out ebx_125, out ebp_184, out esi_185, out edi_126)
	esp_113 = fp + 0xFFFFFFC0
// DataOut: ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> ebx:<invalid> edi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000040 -48(fp):<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: Local -0004(32)

l00401CBA:
	Mem130[esp_113 + 0x00000008:word32] = Mem104[Mem104[0x004063A4:word32] + 0x00000004 + ebx_125:word32]
	word32 eax_131 = Mem130[edi_126 + 0x00000008:word32]
	Mem132[esp_113:word32] = 0x004041FC
	Mem133[esp_113 + 0x00000004:word32] = eax_131
	word32 ebx_134
	word32 ebp_135
	fn00401B50(edi_126, dwArg00, out ebx_134, out ebp_135, out esi_136, out edi_126)
	esp_11 = esp_113 + 0xFFFFFFFC
// DataOut: edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> ebx:<invalid> edi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> ebp:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: Local -0004(32)

l00401CDA:
	Mem85[esp_11 + 0x00000004:word32] = esi_136
	Mem86[esp_11:word32] = 0x004041DC
	word32 ebx_88
	word32 ebp_89
	word32 esi_90
	word32 edi_91
	fn00401B50(edi_126, dwArg00, out ebx_88, out ebp_89, out esi_90, out edi_91)
	word32 esi_93
	*esiOut = esi_90
// DataOut: ebp edi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> ebx:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> ebp:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi

l00401CEA_thunk_fn00401CF0:
	return fn00401CF0(ebp_89, edi_91)
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> ebx:<invalid> edi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ebp:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi

l00401C8F:
	Mem158[0x004063A0:word32] = Mem104[0x004063A0:word32] + 0x00000001
// DataOut: eax ebp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> ebx:<invalid> edi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l00401C96:
	word32 ebx_50
	*ebxOut = ebx
	word32 esi_52
	*esiOut = esi
	word32 edi_54
	*ediOut = edi
	return eax
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C esi:<invalid> edi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi

fn00401BB0_exit:
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> edi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> ebp:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi



word32 fn00401CF0(word32 ebp, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp edi
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn00401CF0_entry:
// DataOut: eax ebp edi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401CF0:
	word32 ebp_5 = fp - 0x00000004
	word32 ebx_17 = Mem0[0x0040639C:word32]
	branch ebx_17 == 0x00000000 l00401D10
// DataOut: eax ebp ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l00401D10:
	Mem71[0x0040639C:word32] = 0x00000001
	word32 eax_76 = fn00402570() * 0x00000003 * 0x00000004 + 0x0000001E >>u 0x00000004 << 0x00000004
	fn00402770(eax_76)
	Mem78[0x004063A0:word32] = 0x00000000
	word32 esp_101 = fp - 0x0000005C - eax_76
	Mem82[0x004063A4:word32] = esp_101 + 0x0000001F & 0xFFFFFFF0
	eax = 0x00000000
	branch true l00401D03
// DataOut: eax ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C ebp:fp - 0x00000004 ebx:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401D5B:
	word32 esi_625
	word32 ebx_511
	branch true l00401ED0
// DataOut: eax ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:0x00000000 edx:<invalid> al:0x00 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401ED0:
	esi_625 = 0x0040475C
// DataOut: eax ebp ebx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:0x00000000 edx:<invalid> al:0x00 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401D64:
	eax = Mem82[0x0040475C:word32]
	branch eax != 0x00000000 l00401DF8
// DataOut: eax ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:0x00000000 edx:<invalid> al:0x00 -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401D71:
	eax = Mem82[0x00404760:word32]
	branch eax != 0x00000000 l00401DF8
// DataOut: eax ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:<invalid> al:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401D7A:
	eax = Mem82[0x00404764:word32]
	esi_625 = 0x00404768
	branch eax == 0x00000000 l00401ED5
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:<invalid> al:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401ED5:
	edi = Mem82[esi_625:word32]
	branch edi != 0x00000000 l00401DFD
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401EDF:
	branch Mem82[esi_625 + 0x00000004:word32] == 0x00000000 l00401D91
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> al:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401EEA:
// DataOut: eax ebp ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401D8C:
	esi_625 = 0x0040475C
// DataOut: ebp edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:0x00404768 edx:<invalid> al:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401D91:
	eax = Mem82[esi_625 + 0x00000008:word32]
	branch eax != 0x00000001 l00401FA3
// DataOut: eax ebp edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401D9D:
	word32 esi_681 = esi_625 + 0x0000000C
	branch esi_681 >=u 0x0040475C l00401D03
// DataOut: eax ebp esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401DAC:
// DataOut: ebp esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401DAF:
	word32 esi_708
	word32 eax_690 = Mem82[esi_681:word32]
	word32 edx_691 = (word32) Mem82[esi_681 + 0x00000008:byte]
	word32 edi_692 = Mem82[esi_681 + 0x00000004:word32]
	word32 eax_694 = Mem82[eax_690 + 0x00400000:word32]
	Mem700[ebp_5 - 0x0000003C:word32] = eax_694
	branch edx_691 == 0x00000010 l00401EEF
// DataOut: eax ebp ebx ecx edi edx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401EEF:
	word32 edx_767 = (word32) Mem700[edi_692 + 0x00400000:word16]
	branch Mem700[edi_692 + 0x00400000:word16] >= 0x0000 l00401F08
// DataOut: eax ebp ebx ecx edi edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401F05_1:
	edx_767 = edx_767 | 0xFFFF0000
// DataOut: ebp ebx ecx edi edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401F08:
	Mem779[ebp_5 - 0x00000034:word32] = Mem700[ebp_5 - 0x0000003C:word32] + (edx_767 - (eax_690 + 0x00400000))
	word32 ebx_781
	word32 edi_784
	fn00401BB0(edi_692 + 0x00400000, edi_692, out ebx_781, out ebp_5, out esi_708, out edi_784)
	Mem789[edi_784 + 0x00400000:word16] = (word16) (word32) Mem779[ebp_5 - 0x00000034:word16]
	esp_101 = esp_101 + 0x00000004
// DataOut: ebp esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401DD6:
	branch edx_691 == 0x00000020 l00401F67
// DataOut: eax ebp ebx ecx edi edx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401F67:
	word32 eax_755 = Mem700[ebp_5 - 0x0000003C:word32] - (eax_690 + 0x00400000) + Mem700[edi_692 + 0x00400000:word32]
	Mem758[ebp_5 - 0x00000034:word32] = eax_755
	word32 ebx_760
	word32 edi_763
	fn00401BB0(edi_692 + 0x00400000, eax_755, out ebx_760, out ebp_5, out esi_708, out edi_763)
	Mem766[ebx_760:word32] = edi_763
	esp_101 = esp_101 + 0x00000004
// DataOut: ebp esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401DDF:
	branch edx_691 == 0x00000008 l00401F40
// DataOut: eax ebp ebx ecx edi edx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401F40:
	word32 edx_737
	word32 edx_732 = (word32) Mem700[edi_692 + 0x00400000:byte]
	edx_737 = edx_732
	branch Mem700[edi_692 + 0x00400000:byte] >= 0x00 l00401F51
// DataOut: eax ebp ebx ecx edi edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401F4E_1:
	edx_737 = edx_732 | 0xFFFFFF00
// DataOut: eax ebp ebx ecx edi edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401F51:
	Mem741[ebp_5 - 0x00000034:word32] = eax_694 + (edx_737 - (eax_690 + 0x00400000))
	word32 ebx_743
	word32 edi_746
	fn00401BB0(edi_692 + 0x00400000, edx_732 | 0xFFFFFF00, out ebx_743, out ebp_5, out esi_708, out edi_746)
	Mem751[ebx_743:byte] = (byte) (word32) Mem741[ebp_5 - 0x00000034:byte]
	esp_101 = esp_101 + 0x00000004
// DataOut: ebp esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401F24:
	esi_681 = esi_708 + 0x0000000C
	branch esi_681 <u 0x0040475C l00401DAF
// DataOut: ebp esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(0)

l00401F33:
	ebx_511 = Mem700[ebp_5 - 0x00000040:word32]
	eax = Mem700[0x004063A0:word32]
// DataOut: eax ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401DE8:
	Mem723[esp_101 + 0x00000004:word32] = edx_691
	Mem724[esp_101:word32] = 0x0040428C
	word32 esi_727
	word32 edi_728
	eax = fn00401B50(edi_692, dwArg00, out ebx_17, out ebp_5, out esi_727, out edi_728)
// DataOut: eax ebp ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401DF8:
	esi_625 = 0x0040475C
// DataOut: eax ebp ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> al:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401DFD:
	branch esi_625 >=u 0x0040475C l00401D03
// DataOut: eax ebp ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401E09:
	Mem631[ebp_5 - 0x0000003C:word32] = ebx_17
	word32 esi_632 = esi_625
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401E10:
	word32 edi_635 = Mem631[esi_632 + 0x00000004:word32]
	word32 ebx_642
	word32 edi_645
	fn00401BB0(edi_635 + 0x00400000, edi_635, out ebx_642, out ebp_5, out esi_632, out edi_645)
	Mem650[edi_645 + 0x00400000:word32] = ebx_642
	esp_101 = esp_101 + 0x00000004
	branch esi_632 <u 0x0040475C l00401E10
// DataOut: ebp esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401E39:
	ebx_511 = Mem650[ebp_5 - 0x0000003C:word32]
	eax = Mem650[0x004063A0:word32]
// DataOut: eax ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401E41:
	branch eax > 0x00000000 l00401E5F
// DataOut: eax ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401E5F:
	branch Mem82[Mem82[0x004063A4:word32] + (ebx_511 * 0x00000003) * 0x00000004:word32] == 0x00000000 l00401E50
	word32 edi_530 = ebx_511 * 0x00000003
	eax = Mem82[0x004063A4:word32] + edi_530 * 0x00000004
	branch Mem82[eax:word32] == 0x00000000 l00401E50
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401E76:
	Mem552[esp_101 + 0x00000008:word32] = 0x0000001C
	Mem553[esp_101 + 0x00000004:word32] = ebp_5 - 0x00000034
	Mem555[esp_101:word32] = Mem553[eax + 0x00000004:word32]
	word32 eax_556 = VirtualQuery(Mem555[esp_101:LPCVOID], Mem555[esp_101 + 4:PMEMORY_BASIC_INFORMATION], Mem555[esp_101 + 8:SIZE_T])
	word32 esp_557 = esp_101 + 0x0000000C
	branch eax_556 == 0x00000000 l00401F7E
	Mem562[esp_557 - 0x00000004:word32] = 0x0000001C
	Mem563[esp_557 - 0x00000008:word32] = ebp_5 - 0x00000034
	Mem565[esp_557 - 0x0000000C:word32] = Mem563[eax_556 + 0x00000004:word32]
	esp_101 = esp_557 - 0x0000000C
	branch VirtualQuery(Mem565[esp_557 - 0x0000000C:LPCVOID], Mem565[esp_557 - 0x00000008:PMEMORY_BASIC_INFORMATION], Mem565[esp_557 - 0x00000004:SIZE_T]) == 0x00000000 l00401F7E
// DataOut: ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401F7E:
	word32 ecx_600 = Mem565[0x004063A4:word32] + edi_530 * 0x00000004
	Mem603[esp_557 - 0x00000004:word32] = Mem565[ecx_600 + 0x00000004:word32]
	word32 eax_605 = Mem603[Mem603[ecx_600 + 0x00000008:word32] + 0x00000008:word32]
	Mem606[esp_557 - 0x0000000C:word32] = 0x004041FC
	Mem607[esp_557 - 0x00000008:word32] = eax_605
	word32 ebx_608
	word32 ebp_609
	word32 esi_610
	eax = fn00401B50(edi_530, dwArg00, out ebx_608, out ebp_609, out esi_610, out edi)
// DataOut: eax edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401FA3:
	word32 eax_278
	word32 eax_127
	Mem102[esp_101 + 0x00000004:word32] = eax
	Mem103[esp_101:word32] = 0x00404258
	word32 ebx_105
	word32 ebp_106
	word32 esi_107
	word32 edi_108
	fn00401B50(edi, dwArg00, out ebx_105, out ebp_106, out esi_107, out edi_108)
	word32 esp_110 = esp_101 - 0x00000004
	Mem111[esp_110:word32] = ebx_105
	word32 ebx_113 = Mem111[esp_110 + 0x00000008:word32]
	word32 esp_112 = esp_110 - 0x00000018
	word32 eax_115 = Mem111[Mem111[ebx_113:word32]:word32]
	branch eax_115 >u 0xC0000091 l00402020
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402020:
	branch eax_115 == 0xC0000094 l00402050
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402050:
	Mem459[esp_110 - 0x00000014:word32] = 0x00000000
	Mem460[esp_110 - 0x00000018:word32] = 0x00000008
	word32 ebp_462
	word32 edi_463
	word32 esi_464
	byte SCZO_466
	byte SZO_467
	byte C_468
	byte Z_469
	word32 edx_471
	word32 ecx_472
	byte S_473
	byte al_474
	word16 ax_475
	byte CZ_476
	byte SO_477
	call msvcrt.dll!signal (retsize: 4; depth: 4)
		uses: al_116,ax_117,C_96,CZ_119,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_115,ebp_106,ebx_113,ecx_93,edi_108,edx_94,esi_107,esp_112,S_92,SCZO_453,SO_99,SZO_97,Z_454
		defs: al_474,ax_475,C_468,CZ_476,eax_470,ebp_462,ebx_465,ecx_472,edi_463,edx_471,esi_464,esp_461,S_473,SCZO_466,SO_477,SZO_467,Z_469
	branch eax_278 == 0x00000001 l00402111
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402111:
	Mem480[esp_112 + 0x00000004:word32] = 0x00000001
	Mem481[esp_112:word32] = 0x00000008
	word32 esp_482
	word32 ebp_483
	word32 edi_484
	word32 esi_485
	word32 ebx_486
	byte SCZO_487
	byte SZO_488
	byte C_489
	byte Z_490
	word32 eax_491
	word32 edx_492
	word32 ecx_493
	byte S_494
	byte al_495
	word16 ax_496
	byte CZ_497
	byte SO_498
	call msvcrt.dll!signal (retsize: 4; depth: 4)
		uses: al_474,ax_475,C_468,CZ_476,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_470,ebp_462,ebx_465,ecx_472,edi_463,edx_471,esi_464,esp_461,S_473,SCZO_478,SO_477,SZO_467,Z_479
		defs: al_495,ax_496,C_489,CZ_497,eax_491,ebp_483,ebx_486,ecx_493,edi_484,edx_492,esi_485,esp_482,S_494,SCZO_487,SO_498,SZO_488,Z_490
	eax_127 = 0xFFFFFFFF
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402027:
	branch eax_115 == 0xC0000096 l004020DB
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402032:
	branch eax_115 == 0xC0000093 l00402090
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401FD3:
	branch eax_115 >=u 0xC000008D l00402090
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402090:
	Mem333[esp_110 - 0x00000014:word32] = 0x00000000
	Mem334[esp_110 - 0x00000018:word32] = 0x00000008
	word32 ebp_336
	word32 edi_337
	word32 esi_338
	byte SCZO_340
	byte SZO_341
	byte C_342
	byte Z_343
	word32 edx_345
	word32 ecx_346
	byte S_347
	byte al_348
	word16 ax_349
	byte CZ_350
	byte SO_351
	call msvcrt.dll!signal (retsize: 4; depth: 4)
		uses: al_116,ax_117,C_96,CZ_119,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_115,ebp_106,ebx_113,ecx_93,edi_108,edx_94,esi_107,esp_112,S_92,SCZO_118,SO_99,SZO_97,Z_95
		defs: al_348,ax_349,C_342,CZ_350,eax_344,ebp_336,ebx_339,ecx_346,edi_337,edx_345,esi_338,esp_335,S_347,SCZO_340,SO_351,SZO_341,Z_343
	branch eax_278 != 0x00000001 l0040206D
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l0040206D:
	branch eax_278 == 0x00000000 l00402039
	branch eax_278 == 0x00000000 l00402039
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402071:
	Mem293[esp_112:word32] = 0x00000008
	word32 esp_294
	word32 ebp_295
	word32 edi_296
	word32 esi_297
	word32 ebx_298
	byte SCZO_299
	byte SZO_300
	byte C_301
	byte Z_302
	word32 eax_303
	word32 edx_304
	word32 ecx_305
	byte S_306
	byte al_307
	word16 ax_308
	byte CZ_309
	byte SO_310
	call eax_278 (retsize: 4; depth: 4)
		uses: al_279,ax_280,C_292,CZ_274,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_278,ebp_286,ebx_283,ecx_276,edi_285,edx_277,esi_284,esp_287,S_275,SCZO_281,SO_282,SZO_290,Z_291
		defs: al_307,ax_308,C_301,CZ_309,eax_303,ebp_295,ebx_298,ecx_305,edi_296,edx_304,esi_297,esp_294,S_306,SCZO_299,SO_310,SZO_300,Z_302
	Mem312[esp_294:word32] = 0x00000008
	word32 esp_313
	word32 ebp_314
	word32 edi_315
	word32 esi_316
	word32 ebx_317
	byte SCZO_318
	byte SZO_319
	byte C_320
	byte Z_321
	word32 eax_322
	word32 edx_323
	word32 ecx_324
	byte S_325
	byte al_326
	word16 ax_327
	byte CZ_328
	byte SO_329
	call 0xFFFFFFFF (retsize: 4; depth: 4)
		uses: al_307,ax_308,C_301,CZ_309,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_311,ebp_295,ebx_298,ecx_305,edi_296,edx_304,esi_297,esp_294,S_306,SCZO_299,SO_310,SZO_300,Z_302
		defs: al_326,ax_327,C_320,CZ_328,eax_322,ebp_314,ebx_317,ecx_324,edi_315,edx_323,esi_316,esp_313,S_325,SCZO_318,SO_329,SZO_319,Z_321
	eax_127 = 0xFFFFFFFF
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004020A9:
	Mem354[esp_112 + 0x00000004:word32] = 0x00000001
	Mem355[esp_112:word32] = 0x00000008
	word32 esp_356
	word32 ebp_357
	word32 edi_358
	word32 esi_359
	word32 ebx_360
	byte SCZO_361
	byte SZO_362
	byte C_363
	byte Z_364
	word32 eax_365
	word32 edx_366
	word32 ecx_367
	byte S_368
	byte al_369
	word16 ax_370
	byte CZ_371
	byte SO_372
	call msvcrt.dll!signal (retsize: 4; depth: 4)
		uses: al_348,ax_349,C_342,CZ_350,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_344,ebp_336,ebx_339,ecx_346,edi_337,edx_345,esi_338,esp_335,S_347,SCZO_352,SO_351,SZO_341,Z_353
		defs: al_369,ax_370,C_363,CZ_371,eax_365,ebp_357,ebx_360,ecx_367,edi_358,edx_366,esi_359,esp_356,S_368,SCZO_361,SO_372,SZO_362,Z_364
	fn00401B20()
	eax_127 = 0xFFFFFFFF
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401FDE:
	branch eax_115 != 0xC0000005 l004020D0
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004020D0:
	branch eax_115 != 0xC000001D l00402039
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004020DB:
	Mem203[esp_110 - 0x00000014:word32] = 0x00000000
	Mem204[esp_110 - 0x00000018:word32] = 0x00000004
	word32 ebp_206
	word32 edi_207
	word32 esi_208
	byte SCZO_210
	byte SZO_211
	byte C_212
	byte Z_213
	word32 eax_214
	word32 edx_215
	word32 ecx_216
	byte S_217
	byte al_218
	word16 ax_219
	byte CZ_220
	byte SO_221
	call msvcrt.dll!signal (retsize: 4; depth: 4)
		uses: al_116,ax_117,C_96,CZ_119,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_115,ebp_106,ebx_113,ecx_93,edi_108,edx_94,esi_107,esp_112,S_92,SCZO_118,SO_99,SZO_97,Z_95
		defs: al_218,ax_219,C_212,CZ_220,eax_214,ebp_206,ebx_209,ecx_216,edi_207,edx_215,esi_208,esp_205,S_217,SCZO_210,SO_221,SZO_211,Z_213
	branch eax_214 == 0x00000001 l00402150
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402150:
	Mem252[esp_112 + 0x00000004:word32] = 0x00000001
	Mem253[esp_112:word32] = 0x00000004
	word32 esp_254
	word32 ebp_255
	word32 edi_256
	word32 esi_257
	word32 ebx_258
	byte SCZO_259
	byte SZO_260
	byte C_261
	byte Z_262
	word32 eax_263
	word32 edx_264
	word32 ecx_265
	byte S_266
	byte al_267
	word16 ax_268
	byte CZ_269
	byte SO_270
	call msvcrt.dll!signal (retsize: 4; depth: 4)
		uses: al_218,ax_219,C_212,CZ_220,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_214,ebp_206,ebx_209,ecx_216,edi_207,edx_215,esi_208,esp_205,S_217,SCZO_222,SO_221,SZO_211,Z_223
		defs: al_267,ax_268,C_261,CZ_269,eax_263,ebp_255,ebx_258,ecx_265,edi_256,edx_264,esi_257,esp_254,S_266,SCZO_259,SO_270,SZO_260,Z_262
	eax_127 = 0xFFFFFFFF
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004020F4:
	branch eax_214 == 0x00000000 l00402039
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l004020FC:
	Mem227[esp_112:word32] = 0x00000004
	word32 esp_228
	word32 ebp_229
	word32 edi_230
	word32 esi_231
	word32 ebx_232
	byte SCZO_233
	byte SZO_234
	byte C_235
	byte Z_236
	word32 eax_237
	word32 edx_238
	word32 ecx_239
	byte S_240
	byte al_241
	word16 ax_242
	byte CZ_243
	byte SO_244
	call eax_214 (retsize: 4; depth: 4)
		uses: al_218,ax_219,C_226,CZ_220,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_214,ebp_206,ebx_209,ecx_216,edi_207,edx_215,esi_208,esp_205,S_217,SCZO_222,SO_221,SZO_224,Z_225
		defs: al_241,ax_242,C_235,CZ_243,eax_237,ebp_229,ebx_232,ecx_239,edi_230,edx_238,esi_231,esp_228,S_240,SCZO_233,SO_244,SZO_234,Z_236
	return 0xFFFFFFFF
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401FE9:
	Mem380[esp_110 - 0x00000014:word32] = 0x00000000
	Mem381[esp_110 - 0x00000018:word32] = 0x0000000B
	word32 ebp_383
	word32 edi_384
	word32 esi_385
	byte SCZO_387
	byte SZO_388
	byte C_389
	byte Z_390
	word32 eax_391
	word32 edx_392
	word32 ecx_393
	byte S_394
	byte al_395
	word16 ax_396
	byte CZ_397
	byte SO_398
	call msvcrt.dll!signal (retsize: 4; depth: 4)
		uses: al_116,ax_117,C_377,CZ_119,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_115,ebp_106,ebx_113,ecx_93,edi_108,edx_94,esi_107,esp_112,S_92,SCZO_378,SO_99,SZO_97,Z_379
		defs: al_395,ax_396,C_389,CZ_397,eax_391,ebp_383,ebx_386,ecx_393,edi_384,edx_392,esi_385,esp_382,S_394,SCZO_387,SO_398,SZO_388,Z_390
	branch eax_391 == 0x00000001 l00402130
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402130:
	Mem429[esp_112 + 0x00000004:word32] = 0x00000001
	Mem430[esp_112:word32] = 0x0000000B
	word32 esp_431
	word32 ebp_432
	word32 edi_433
	word32 esi_434
	word32 ebx_435
	byte SCZO_436
	byte SZO_437
	byte C_438
	byte Z_439
	word32 eax_440
	word32 edx_441
	word32 ecx_442
	byte S_443
	byte al_444
	word16 ax_445
	byte CZ_446
	byte SO_447
	call msvcrt.dll!signal (retsize: 4; depth: 4)
		uses: al_395,ax_396,C_389,CZ_397,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_391,ebp_383,ebx_386,ecx_393,edi_384,edx_392,esi_385,esp_382,S_394,SCZO_399,SO_398,SZO_388,Z_400
		defs: al_444,ax_445,C_438,CZ_446,eax_440,ebp_432,ebx_435,ecx_442,edi_433,edx_441,esi_434,esp_431,S_443,SCZO_436,SO_447,SZO_437,Z_439
	eax_127 = 0xFFFFFFFF
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402006:
	branch eax_391 == 0x00000000 l00402039
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402039:
	branch Mem111[0x004063AC:word32] == 0x00000000 l0040207F
	eax_127 = Mem111[0x004063AC:word32]
	branch eax_127 == 0x00000000 l0040207F
// DataOut: eax ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l0040207F:
	return eax_127
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: eax:<invalid> esp:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00402042:
	Mem159[esp_112 + 0x00000020:word32] = ebx_113
	word32 esp_164
	word32 ebp_165
	word32 edi_166
	word32 esi_167
	word32 ebx_168
	byte SCZO_169
	byte SZO_170
	byte C_171
	byte Z_172
	word32 eax_173
	word32 edx_174
	word32 ecx_175
	byte S_176
	byte al_177
	word16 ax_178
	byte CZ_179
	byte SO_180
	call eax_127 (retsize: 4; depth: 4)
		uses: al_154,ax_155,C_158,CZ_139,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_153,ebp_148,ebx_162,ecx_141,edi_147,edx_142,esi_146,esp_163,S_140,SCZO_161,SO_144,SZO_156,Z_157
		defs: al_177,ax_178,C_171,CZ_179,eax_173,ebp_165,ebx_168,ecx_175,edi_166,edx_174,esi_167,esp_164,S_176,SCZO_169,SO_180,SZO_170,Z_172
	return eax_173
	Mem181[esp_164 + 0x00000020:word32] = ebx_168
	word32 esp_186
	word32 ebp_187
	word32 edi_188
	word32 esi_189
	word32 ebx_190
	byte SCZO_191
	byte SZO_192
	byte C_193
	byte Z_194
	word32 eax_195
	word32 edx_196
	word32 ecx_197
	byte S_198
	byte al_199
	word16 ax_200
	byte CZ_201
	byte SO_202
	call eax_173 (retsize: 4; depth: 4)
		uses: al_177,ax_178,C_171,CZ_179,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_173,ebp_165,ebx_184,ecx_175,edi_166,edx_174,esi_167,esp_185,S_176,SCZO_183,SO_180,SZO_170,Z_172
		defs: al_199,ax_200,C_193,CZ_201,eax_195,ebp_187,ebx_190,ecx_197,edi_188,edx_196,esi_189,esp_186,S_198,SCZO_191,SO_202,SZO_192,Z_194
	return eax_195
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l0040200A:
	Mem404[esp_112:word32] = 0x0000000B
	word32 esp_405
	word32 ebp_406
	word32 edi_407
	word32 esi_408
	word32 ebx_409
	byte SCZO_410
	byte SZO_411
	byte C_412
	byte Z_413
	word32 eax_414
	word32 edx_415
	word32 ecx_416
	byte S_417
	byte al_418
	word16 ax_419
	byte CZ_420
	byte SO_421
	call eax_391 (retsize: 4; depth: 4)
		uses: al_395,ax_396,C_403,CZ_397,dwLoc04_4,dwLoc08_8,dwLoc0C_11,dwLoc10_14,dwLoc44_91,eax_391,ebp_383,ebx_386,ecx_393,edi_384,edx_392,esi_385,esp_382,S_394,SCZO_399,SO_398,SZO_401,Z_402
		defs: al_418,ax_419,C_412,CZ_420,eax_414,ebp_406,ebx_409,ecx_416,edi_407,edx_415,esi_408,esp_405,S_417,SCZO_410,SO_421,SZO_411,Z_413
	return 0xFFFFFFFF
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401E9C:
	Mem573[esp_557:word32] = ebp_5 - 0x00000038
	Mem576[esp_557 - 0x00000004:word32] = Mem573[Mem573[0x004063A4:word32] + edi_530 * 0x00000004:word32]
	Mem578[esp_557 - 0x00000008:word32] = Mem576[ebp_5 - 0x00000028:word32]
	Mem580[esp_557 - 0x0000000C:word32] = Mem578[ebp_5 - 0x00000034:word32]
	VirtualProtect(Mem580[esp_557 - 0x0000000C:LPVOID], Mem580[esp_557 - 0x00000008:SIZE_T], Mem580[esp_557 - 0x00000004:DWORD], Mem580[esp_557:PDWORD])
	Mem585[esp_557:word32] = ebp_5 - 0x00000038
	Mem588[esp_557 - 0x00000004:word32] = Mem585[Mem585[0x004063A4:word32] + edi_530 * 0x00000004:word32]
	Mem590[esp_557 - 0x00000008:word32] = Mem588[ebp_5 - 0x00000028:word32]
	Mem592[esp_557 - 0x0000000C:word32] = Mem590[ebp_5 - 0x00000034:word32]
	eax = VirtualProtect(Mem592[esp_557 - 0x0000000C:LPVOID], Mem592[esp_557 - 0x00000008:SIZE_T], Mem592[esp_557 - 0x00000004:DWORD], Mem592[esp_557:PDWORD])
// DataOut: eax ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401E50:
	ebx_511 = ebx_511 + 0x00000001
	branch ebx_511 >= Mem82[0x004063A0:word32] l00401D03
// DataOut: eax ebp ebx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401E45:
// DataOut: eax ebp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

l00401D03:
	return eax
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> edi:<invalid> al:<invalid> ecx:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp

fn00401CF0_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> edi:<invalid> eax:<invalid> edx:<invalid> al:<invalid> ecx:<invalid> -68(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -16(fp):ebx -12(fp):esi -8(fp):edi -4(fp):ebp



word32 fn004023F0(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn004023F0_entry:
// DataOut: eax ebp ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp

l004023F0:
	word32 eax_4 = eax + Mem0[eax + 0x0000003C:word32]
	branch Mem0[eax_4:word32] == 0x00004550 l00402401
// DataOut: eax ebp ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp

l00402401:
	return (word32) (Mem0[eax_4 + 0x00000018:word16] == 0x010B)
// DataOut: eax ebp ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l004023FB:
	return 0x00000000
// DataOut: eax ebp ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

fn004023F0_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> al:<invalid>



word32 fn00402500(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx esi esp
// Stack args: Stack +0004(32)
fn00402500_entry:
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00402500:
	word32 edx_2 = 0x00000000
	branch Mem0[0x00400000:word16] == 0x5A4D l00402510
// DataOut: ebp edx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00402510:
	branch fn004023F0(0x00400000) == 0x00000000 l0040256A
// DataOut: ebp edx
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000
// LocalsOut: fp(32) Stack +0004(32)

l00402520:
	word32 eax_46 = Mem0[0x0040003C:word32]
	word32 esi_52 = (word32) Mem0[eax_46 + 0x00400006:word16]
	edx_2 = eax_46 + 0x00400018 + (word32) Mem0[eax_46 + 0x00400014:word16]
	branch esi_52 == 0x00000000 l00402568
// DataOut: ebp ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:0x00000000 eax:<invalid> al:<invalid> -8(fp):ebx -4(fp):esi
// LocalsOut: fp(32)

l00402547:
	word32 ecx_65 = 0x00000000
// DataOut: ebp ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> al:<invalid> -8(fp):ebx -4(fp):esi
// LocalsOut: fp(32)

l00402550:
	word32 eax_72 = Mem0[edx_2 + 0x0000000C:word32]
	branch dwArg04 - 0x00400000 <u eax_72 l0040255E
// DataOut: eax ebp ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -8(fp):ebx -4(fp):esi
// LocalsOut: fp(32)

l00402557:
	branch dwArg04 - 0x00400000 <u eax_72 + Mem0[edx_2 + 0x00000008:word32] l0040256A
// DataOut: ebp ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -8(fp):ebx -4(fp):esi
// LocalsOut: fp(32)

l0040255E:
	ecx_65 = ecx_65 + 0x00000001
	edx_2 = edx_2 + 0x00000028
	branch ecx_65 != esi_52 l00402550
// DataOut: ebp ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -8(fp):ebx -4(fp):esi
// LocalsOut: fp(32)

l00402568:
	edx_2 = 0x00000000
// DataOut: ebp edx
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> -8(fp):ebx -4(fp):esi
// LocalsOut: fp(32)

l0040256A:
	return edx_2
// DataOut: eax ebp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:<invalid> eax:<invalid> al:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -8(fp):ebx -4(fp):esi

l0040250D:
	return 0x00000000
// DataOut: eax ebp
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000

fn00402500_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> eax:<invalid> ebx:ebx esi:esi al:<invalid> ecx:<invalid> -8(fp):ebx -4(fp):esi



word32 fn00402570()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: esp
fn00402570_entry:
// DataOut: ebp ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp

l00402570:
	branch Mem0[0x00400000:word16] == 0x5A4D l00402580
// DataOut: ebp ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp

l00402580:
	branch fn004023F0(0x00400000) == 0x00000000 l0040257D
// DataOut: ebp ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000

l0040258E:
	return (word32) Mem0[Mem0[0x0040003C:word32] + 0x00400006:word16]
// DataOut: eax ebp ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000 eax:<invalid> al:<invalid>

l0040257D:
	return 0x00000000
// DataOut: eax ebp ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000 eax:<invalid> al:<invalid>

fn00402570_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> eax:<invalid> al:<invalid>



word32 fn00402610()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: esp
fn00402610_entry:
// DataOut: ebp ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp

l00402610:
	word32 edx_2 = 0x00000000
	branch Mem0[0x00400000:word16] == 0x5A4D l00402620
// DataOut: ebp ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp

l00402620:
	branch fn004023F0(0x00400000) == 0x00000000 l00402634
// DataOut: ebp ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000

l00402631_1:
	edx_2 = 0x00400000
// DataOut: ebp ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000 eax:0x00400000 al:0x00

l00402634:
	return edx_2
// DataOut: eax ebp ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> eax:0x00400000 al:0x00

l0040261D:
	return 0x00000000
// DataOut: eax ebp ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000

fn00402610_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> eax:<invalid> al:<invalid>



void fn00402770(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax
// LiveOut:
// Trashed: SCZO
// Preserved: eax ecx esp
fn00402770_entry:
// DataOut: eax ebp ebx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00402770:
	word32 ecx_10 = fp + 0x00000004
	branch eax <u 0x00001000 l00402792
// DataOut: eax ebp ebx ecx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l0040277D:
	ecx_10 = ecx_10 - 0x00001000
	Mem30[ecx_10:word32] = Mem0[ecx_10:word32]
	eax = eax - 0x00001000
	branch eax >u 0x00001000 l0040277D
// DataOut: eax ebp ebx ecx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ecx:<invalid> eax:<invalid> -4092(fp):<invalid> -8(fp):eax -4(fp):ecx
// LocalsOut: fp(32)

l00402792:
	word32 ecx_16 = ecx_10 - eax
	Mem19[ecx_16:word32] = Mem0[ecx_16:word32]
	return
// DataOut: ebp ebx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ecx:<invalid> eax:<invalid> -4092(fp):<invalid> -8(fp):eax -4(fp):ecx

fn00402770_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:ecx eax:eax -4092(fp):<invalid> -8(fp):eax -4(fp):ecx



void fn00402860(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ah al ax eax rax
// Preserved: esp
// Stack args: Stack +0004(32)
fn00402860_entry:
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(32)

l00402860:
	Mem6[0x004063D4:word32] = dwArg04
	return
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:fp

fn00402860_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>



