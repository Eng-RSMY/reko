void fn0000000000401000()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn0000000000401000_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000401000:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000401000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000401010(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w rax rcx rdx
// Preserved: rsp
fn0000000000401010_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401010:
	Mem9[Mem0[0x0000000000404480:word64]:word32] = 0x00000001
	Mem11[Mem9[0x0000000000404490:word64]:word32] = 0x00000001
	Mem13[Mem11[0x00000000004044A0:word64]:word32] = 0x00000001
	Mem15[Mem13[0x0000000000404470:word64]:word32] = 0x00000001
	word32 edx_101 = 0x00000000
	word64 rax_16 = Mem15[0x0000000000404330:word64]
	branch Mem15[rax_16:word16] == 0x5A4D l00000000004010D0
// DataOut: edx r8 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004010D0:
	rcx = (int64) Mem15[rax_16 + 0x000000000000003C:word32]
	word64 rax_71 = rax_16 + rcx
	branch Mem15[rax_71:word32] != 0x00004550 l0000000000401058
// DataOut: edx r8 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:0x00000000
// LocalsOut: fp(64)

l00000000004010E3:
	word32 ecx_75 = (word32) Mem15[rax_71 + 0x0000000000000018:word16]
	rcx = DPB(rcx, ecx_75, 0) (alias)
	word16 cx_77 = (word16) ecx_75
	branch cx_77 == 0x010B l0000000000401133
// DataOut: cx edx r8 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:0x00000000 rcx:<invalid>
// LocalsOut: fp(64)

l0000000000401133:
	branch Mem15[rax_71 + 0x0000000000000074:word32] <=u 0x0000000E l0000000000401058
// DataOut: edx r8
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:0x00000000 rcx:<invalid> ecx:<invalid>
// LocalsOut: fp(64)

l000000000040113D:
	edx_101 = (word32) (Mem15[r8 + 0x00000000000000E8:word32] != 0x00000000) (alias)
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:0x00000000 rcx:<invalid> ecx:<invalid>
// LocalsOut: fp(64)

l00000000004010EE:
	branch cx_77 != 0x020B l0000000000401058
// DataOut: edx rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:0x00000000 rcx:<invalid> ecx:<invalid>
// LocalsOut: fp(64)

l00000000004010F9:
	branch Mem15[rax_71 + 0x0000000000000084:word32] <=u 0x0000000E l0000000000401058
// DataOut: edx rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:0x00000000 rcx:<invalid> ecx:<invalid>
// LocalsOut: fp(64)

l0000000000401106:
	edx_101 = (word32) (Mem15[rax_71 + 0x00000000000000F8:word32] != 0x00000000) (alias)
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:0x00000000 rcx:<invalid> ecx:<invalid>
// LocalsOut: fp(64)

l0000000000401058:
	word64 rax_34 = Mem15[0x0000000000404460:word64]
	Mem35[0x0000000000407008:word32] = edx_101
	branch Mem35[rax_34:word32] == 0x00000000 l00000000004010C2
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:<invalid> rcx:<invalid> ecx:<invalid> r8d:<invalid> dl:Test(NE,Z)
// LocalsOut: fp(64)

l00000000004010C2:
	__set_app_type(DPB(rcx, 0x00000001, 0))
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:<invalid> eax:<invalid> rcx:<invalid> ecx:<invalid> r8d:<invalid> dl:Test(NE,Z)
// LocalsOut: fp(64)

l000000000040106B:
	__set_app_type(DPB(rcx, 0x00000002, 0))
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:<invalid> eax:<invalid> rcx:<invalid> ecx:<invalid> r8d:<invalid> dl:Test(NE,Z)
// LocalsOut: fp(64)

l0000000000401075:
	word64 rax_42 = fn0000000000401BE0()
	Mem44[Mem35[0x00000000004043C0:word64]:word64] = rax_42
	Mem46[Mem44[0x00000000004043B0:word64]:word64] = rax_42
	Mem51[Mem46[Mem46[0x0000000000404360:word64]:word64]:word32] = Mem46[Mem46[0x0000000000404420:word64]:word32]
	fn00000000004017D0()
	branch Mem51[Mem51[0x00000000004042E0:word64]:word32] == 0x00000001 l0000000000401120
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> rcx:<invalid> r8d:<invalid> dl:Test(NE,Z)
// LocalsOut: fp(64)

l0000000000401120:
	fn0000000000401AC0(0x0000000000401AD0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:<invalid> eax:<invalid> ecx:0xFFFFFFFF rcx:0xFFFFFFFFFFFFFFFF rdx:<invalid> r8d:<invalid> dl:<invalid>

l00000000004010BB:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> edx:<invalid> eax:<invalid> ecx:0xFFFFFFFF rcx:0xFFFFFFFFFFFFFFFF rdx:<invalid> r8d:<invalid> dl:<invalid>

fn0000000000401010_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> rcx:<invalid> rdx:<invalid> r8d:<invalid> dl:<invalid>



void fn0000000000401160()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rsp
fn0000000000401160_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401160:
	Mem9[0x0000000000407000:word32] = Mem0[Mem0[0x0000000000404450:word64]:word32]
	word64 rax_16 = DPB(Mem9[0x0000000000404410:word64], __getmainargs(0x0000000000407020, 0x0000000000407018, 0x0000000000407010, DPB(r9, Mem9[0x0000000000407010:word32], 0)), 0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000401160_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> r8:0000000000407010 rdx:0000000000407018 rcx:0000000000407020 eax:<invalid> r9d:<invalid> -24(fp):0000000000407000



void fn00000000004011B0(word64 r10, word64 r11, word64 r15, selector gs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gs r10 r11 r15
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000000004011B0_entry:
// DataOut: gs r10 r11 r15
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -00AC(0)

l00000000004011B0:
	word64 rsp_125 = fp - 0x00000000000000B0
	word64 rax_22 = DPB(rax, 0x00000000, 0)
	word64 rcx_28 = DPB(rcx, 0x0000000D, 0)
	word64 rdi_30 = fp - 0x0000000000000090
// DataOut: gs r10 r11 r15 rax rcx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -00AC(0)

l00000000004011CE:
	branch rcx_28 == 0x0000000000000000 l00000000004011D1
// DataOut: gs r10 r11 r15 rax rcx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:0x00000000 ecx:<invalid> rdx:fp - 0x0000000000000090 rdi:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -00AC(0)

l00000000004011D1:
	word64 rdi_128 = Mem0[0x0000000000404460:word64]
	branch Mem0[r15:word32] != 0x00000000 l0000000000401490
// DataOut: gs r10 r11 rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:0x00000000 ecx:<invalid> rdx:fp - 0x0000000000000090 rdi:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -00AC(0)

l0000000000401490:
	GetStartupInfoA(tLocAC)
	rcx_28 = fp - 0x0000000000000090
// DataOut: gs r10 r11 rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:0x00000000 ecx:<invalid> rdx:fp - 0x0000000000000090 rdi:<invalid> r9d:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004011E4:
	word64 rbx_123 = Mem0[0x0000000000404390:word64]
	word64 rsi_50 = Mem0[Mem0[gs:0x00000030:word64] + 0x0000000000000008:word64]
	word64 rbp_52 = DPB(rbp, 0x00000000, 0)
// DataOut: r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:0x00000000 ecx:<invalid> rdx:fp - 0x0000000000000090 rdi:<invalid> r9d:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401214:
	word64 rbp_103
	word64 rsi_482
	word32 ebp_470
	word32 eax_104
	__lock()
	__cmpxchg(Mem0[rbx_123:word64], rsi_50, Mem67, out Mem95)
	branch rbp_52 != 0x0000000000000000 l0000000000401203
// DataOut: r10 r11 rax rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:0x00000000 r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401203:
	branch rsi_50 == rbp_52 l0000000000401431
// DataOut: r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:rbp rbx:<invalid> rsi:<invalid> ebp:0x00000000 r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401431:
	rsi_482 = Mem0[0x00000000004043A0:word64]
	ebp_470 = 0x00000001
	rbp_103 = DPB(rbp_52, 0x00000001, 0) (alias)
	branch Mem0[rsi_482:word32] != 0x00000001 l0000000000401235
// DataOut: ebp r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:rbp rbx:<invalid> rsi:<invalid> ebp:0x00000000 r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l000000000040120C:
	byte SCZO_542
	word32 eax_543
	byte SZO_544
	byte C_545
	word32 ecx_546
	word64 rdx_547
	word64 rax_549
	word32 r9d_550
	word64 r15_551
	byte Z_552
	selector gs_553
	word32 ebp_554
	word64 r12_555
	word32 r8d_556
	word32 edx_557
	byte dl_559
	word16 ax_560
	word32 r13d_561
	word64 r13_562
	word32 ebx_563
	word64 r8_564
	call r12d (retsize: 4; depth: 180)
		uses: ax_94,C_99,dl_73,dwLoc04_4,dwLoc08_7,dwLoc0C_9,dwLoc10_12,dwLoc14_15,dwLoc18_18,eax_93,ebp_77,ebx_70,ecx_536,edx_75,gs_78,r10_69,r11_68,r12_76,r12d_74,r13_71,r13d_72,r15_79,r8_87,r8d_86,r9d_80,rax_92,rbp_84,rbx_82,rcx_90,rdi_89,rdx_81,rsi_83,rsp_85,SCZO_534,SZO_97,Z_535
		defs: ax_560,C_545,dl_559,eax_543,ebp_554,ebx_563,ecx_546,edx_557,gs_553,r10_565,r11_566,r12_555,r12d_558,r13_562,r13d_561,r15_551,r8_564,r8d_556,r9d_550,rax_549,rbp_538,rbx_541,rcx_548,rdi_539,rdx_547,rsi_540,rsp_537,SCZO_542,SZO_544,Z_552
// DataOut: r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:rbp rbx:<invalid> rsi:<invalid> ebp:0x00000000 r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401221:
	rsi_482 = Mem0[0x00000000004043A0:word64]
	ebp_470 = 0x00000000
	rbp_103 = DPB(rbp_52, 0x00000000, 0) (alias)
	branch Mem0[rsi_482:word32] == 0x00000001 l0000000000401448
// DataOut: ebp r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:rbp rbx:<invalid> rsi:<invalid> ebp:0x00000000 r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401448:
	_amsg_exit(DPB(rcx_28, 0x0000001F, 0))
	branch Mem0[rsi_482:word32] != 0x00000001 l0000000000401254
	_amsg_exit(DPB(rcx_28, 0x0000001F, 0))
	eax_104 = Mem0[rsi_482:word32]
	branch eax_104 != 0x00000001 l0000000000401254
// DataOut: ebp r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401235:
	branch Mem0[rsi_482:word32] == 0x00000000 l00000000004014A0
// DataOut: ebp r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004014A0:
	word64 rdx_512 = Mem0[0x0000000000404400:word64]
	word64 rcx_513 = Mem0[0x00000000004043F0:word64]
	Mem514[rsi_482:word32] = 0x00000001
	_initterm(rcx_513, rdx_512)
// DataOut: ebp r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l000000000040123F:
	Mem511[0x0000000000407004:word32] = 0x00000001
// DataOut: ebp r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401249:
	eax_104 = Mem0[rsi_482:word32]
	branch eax_104 == 0x00000001 l000000000040145D
// DataOut: ebp r10 r11 rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l000000000040145D:
	_initterm(Mem0[0x00000000004043D0:word64], Mem0[0x00000000004043E0:word64])
	Mem491[rsi_482:word32] = 0x00000002
	branch ebp_470 != 0x00000000 l000000000040125C
	_initterm(Mem491[0x00000000004043D0:word64], Mem491[0x00000000004043E0:word64])
	Mem497[rsi_482:word32] = 0x00000002
	branch ebp_470 != 0x00000000 l000000000040125C
// DataOut: r10 r11 rbp rbx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l000000000040147E:
// DataOut: r10 r11 rbp rbx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401254:
	branch ebp_470 == 0x00000000 l0000000000401480
// DataOut: r10 r11 rbp rbx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401480:
	Mem468[rbx_123:word64] = DPB(rbp_52, 0x00000000, 0)
	eax_104 = 0x00000000
// DataOut: r10 r11 rbp rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l000000000040125C:
	word64 rax_109 = Mem0[Mem0[0x0000000000404320:word64]:word64]
	branch rax_109 == 0x0000000000000000 l0000000000401277
// DataOut: r10 r11 rbp rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l000000000040126B:
	word64 rsi_428
	byte SCZO_430
	word32 eax_431
	byte SZO_432
	byte C_433
	word32 ecx_434
	word64 rdx_435
	word64 rcx_436
	word64 rax_437
	word32 r9d_438
	word64 r15_439
	byte Z_440
	selector gs_441
	word32 ebp_442
	word64 r12_443
	word32 r8d_444
	word32 edx_445
	word32 r12d_446
	byte dl_447
	word16 ax_448
	word32 r13d_449
	word64 r13_450
	word32 ebx_451
	word64 r8_452
	call eax_104 (retsize: 4; depth: 180)
		uses: ax_94,C_424,dl_73,dwLoc04_4,dwLoc08_7,dwLoc0C_9,dwLoc10_12,dwLoc14_15,dwLoc18_18,eax_104,ebp_100,ebx_70,ecx_422,edx_421,gs_78,r10_69,r11_68,r12_76,r12d_74,r13_71,r13d_72,r15_79,r8_87,r8d_420,r9d_80,rax_109,rbp_103,rbx_82,rcx_106,rdi_89,rdx_101,rsi_102,rsp_85,SCZO_105,SZO_423,Z_111
		defs: ax_448,C_433,dl_447,eax_431,ebp_442,ebx_451,ecx_434,edx_445,gs_441,r10_453,r11_454,r12_443,r12d_446,r13_450,r13d_449,r15_439,r8_452,r8d_444,r9d_438,rax_437,rbp_426,rbx_429,rcx_436,rdi_427,rdx_435,rsi_428,rsp_425,SCZO_430,SZO_432,Z_440
// DataOut: r10 r11 rbp rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401277:
	word64 rcx_130
	word64 rbp_131
	word64 rsi_132
	word64 rdi_133
	word64 r8_134
	word64 r10_135
	word64 r11_136
	word64 r12_137
	word64 r13_138
	word64 r15_139
	word64 rax_143 = DPB(fn0000000000401DC0(rbp_103, rdi_128, r10, r11, out rcx_130, out rbp_131, out rsi_132, out rdi_133, out r8_134, out r10_135, out r11_136, out r12_137, out r13_138, out r15_139), SetUnhandledExceptionFilter(Mem0[rsp_125 + 4:LPTOP_LEVEL_EXCEPTION_FILTER]), 0)
	Mem145[Mem0[0x0000000000404380:word64]:word64] = rax_143
	fn0000000000402260(rax_143, rbx_123, rbp_131, rsi_132, rdi_133, r15_139)
	fn0000000000402CE0(0x0000000000401000)
	fn0000000000401BC0()
	Mem148[0x0000000000407968:word64] = Mem145[0x0000000000404330:word64]
	word64 rax_151 = Mem148[Mem148[Mem148[0x0000000000404350:word64]:word64]:word64]
	branch rax_151 == 0x0000000000000000 l0000000000401327
// DataOut: r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:<invalid> ecx:<invalid> rdx:<invalid> rdi:<invalid> r9d:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> ebp:<invalid> r12:<invalid> rcx:<invalid> r8d:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004012C9:
	word32 ecx_336 = 0x00000000
// DataOut: ecx r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004012E2:
	byte dl_352 = (byte) (word32) Mem148[rax_151:byte]
	branch dl_352 <= 0x20 l00000000004012D0
// DataOut: dl ecx r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004012D0:
	branch dl_352 == 0x00 l0000000000401300
// DataOut: dl ecx r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004012D4:
	branch (ecx_336 & 0x00000001) == 0x00000000 l0000000000401300
// DataOut: dl r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401300:
	branch dl_352 != 0x00 l0000000000401315
// DataOut: r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401315:
	word64 rax_398 = rax_151 + 0x0000000000000001
	branch (byte) (word32) Mem148[rax_398:byte] != 0x00 l0000000000401310
	rax_151 = rax_398 + 0x0000000000000001
	byte dl_408 = (byte) (word32) Mem148[rax_398 + 0x0000000000000001:byte]
	branch dl_408 != 0x00 l0000000000401310
// DataOut: dl r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401310:
	branch dl_408 > 0x20 l0000000000401320
// DataOut: r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401304:
// DataOut: r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401320:
	Mem392[0x0000000000407960:word64] = rax_151
	Mem393[0x0000000000407960:word64] = rax_151
	Mem394[0x0000000000407960:word64] = rax_151
// DataOut: r15 rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401327:
	word32 r8d_167 = Mem148[r15_139:word32]
	branch r8d_167 == 0x00000000 l0000000000401348
// DataOut: r8d rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l000000000040132F:
	word16 ax_328 = 0x000A
	branch (Mem148[rsp_125 + 0x000000000000005C:byte] & 0x01) == 0x00 l000000000040133F
// DataOut: ax r8d rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> r8d:<invalid> ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401339_1:
	ax_328 = Mem148[rsp_125 + 0x0000000000000060:word16]
// DataOut: ax r8d rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> r8d:<invalid> eax:0x0000000A ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l000000000040133F:
	Mem332[0x0000000000403000:word32] = (word32) ax_328
// DataOut: r8d rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> r8d:<invalid> eax:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401348:
	word64 r13_189
	word32 r12d_175 = Mem148[0x0000000000407020:word32]
	word64 r12_176 = DPB(r12_137, r12d_175, 0)
	word64 r13_178 = (int64) (r12_176 + 0x0000000000000001)
	word64 rcx_181 = r13_178 << 0x0000000000000003
	word64 rax_182 = malloc(r13_178 << 0x0000000000000003)
	branch r12d_175 <= 0x00000000 l00000000004014BE
// DataOut: r12d r13 r8d rbp rdi rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> r8d:<invalid> eax:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004014BE:
	r13_189 = DPB(r13_178 << 0x0000000000000003, 0x00000000, 0) (alias)
// DataOut: r13 r8d rbp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> r8d:<invalid> r12d:<invalid> r13d:<invalid> r13:(int64) (r12 + 0x0000000000000001) << 0x0000000000000003 rcx:(int64) (r12 + 0x0000000000000001) << 0x0000000000000003 rbp:<invalid> rdi:<invalid> eax:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401376:
	word64 rbx_295 = DPB(rbx_123, 0x00000000, 0)
	rax_299 = rax_182
// DataOut: ebx r12d r13 rbp rbx rdi rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> r8d:<invalid> r12d:<invalid> r13d:<invalid> r13:(int64) (r12 + 0x0000000000000001) << 0x0000000000000003 rcx:(int64) (r12 + 0x0000000000000001) << 0x0000000000000003 rbp:<invalid> rdi:<invalid> eax:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401380:
	word64 rax_299
	word64 rax_302 = DPB(rax_299, strlen(Mem148[rsp_125:(ptr char)]), 0)
	rax_299 = malloc(rax_302 + 0x0000000000000001)
	Mem306[rax_182 + rbx_295 * 0x0000000000000008:word64] = rax_299
	memcpy(Mem306[rsp_125:(ptr void)], Mem306[rsp_125 + 8:(ptr void)], Mem306[rsp_125 + 16:size_t])
	rbx_295 = rbx_295 + 0x0000000000000001
	r8d_167 = (word32) (rax_302 + 0x0000000000000001) (alias)
	rcx_181 = rax_299
	branch r12d_175 > (word32) rbx_295 l0000000000401380
// DataOut: ebx r12d r13 r8d rbp rbx rdi rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> r8d:<invalid> r12d:<invalid> r13d:<invalid> r13:(int64) (r12 + 0x0000000000000001) << 0x0000000000000003 rcx:<invalid> rbp:<invalid> rdi:<invalid> ebx:<invalid> eax:<invalid> rsi:<invalid> rdx:<invalid> r8:<invalid> rbx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004013B2:
	r13_189 = (r13_178 << 0x0000000000000003) - 0x0000000000000008
// DataOut: r13 r8d rbp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> r8d:<invalid> r12d:<invalid> r13d:<invalid> r13:(int64) (r12 + 0x0000000000000001) << 0x0000000000000003 rcx:<invalid> rbp:<invalid> rdi:<invalid> ebx:<invalid> eax:<invalid> rsi:<invalid> rdx:<invalid> r8:<invalid> rbx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004013B6:
	Mem196[rax_182 + r13_189:word64] = 0x0000000000000000
	Mem197[0x0000000000407018:word64] = rax_182
	fn00000000004017A0(r8d_167)
	word64 rax_201 = Mem197[Mem197[0x0000000000404340:word64]:word64]
	Mem204[rax_201:word64] = Mem197[0x0000000000407010:word64]
	word64 r8_205 = Mem204[0x0000000000407010:word64]
	word32 r8d_206 = (word32) r8_205
	word64 rdx_207 = Mem204[0x0000000000407018:word64]
	fn00000000004015B0(rdx_207, r8d_206, dwArg0C, qwArg14)
	word32 eax_202 = (word32) rax_201
	word32 ecx_210 = Mem204[0x0000000000407008:word32]
	Mem211[0x000000000040700C:word32] = eax_202
	branch ecx_210 == 0x00000000 l00000000004014C6
// DataOut: eax rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> r8d:<invalid> r12d:<invalid> r13d:<invalid> r13:<invalid> rcx:<invalid> rbp:<invalid> rdi:<invalid> eax:<invalid> ax:<invalid> ebx:<invalid> rsi:<invalid> rdx:<invalid> r8:<invalid> rbx:<invalid> ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// Terminates process

l00000000004014C6:
	exit(DPB(rcx_181, eax_202, 0))
// DataOut:
// DataOut (flags): 
// SymbolicIn: ecx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l000000000040140C:
	word32 edx_215 = Mem211[0x0000000000407004:word32]
	branch edx_215 != 0x00000000 l0000000000401421
// DataOut: eax rax rsp
// DataOut (flags): 
// SymbolicIn: ecx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401416:
	word64 rsp_258
	word64 rbp_259
	word64 rdi_260
	word64 rsi_261
	word64 rbx_262
	byte SCZO_263
	word32 eax_264
	byte SZO_265
	byte C_266
	word32 ecx_267
	word64 rdx_268
	word64 rcx_269
	word64 rax_270
	word32 r9d_271
	word64 r15_272
	byte Z_273
	selector gs_274
	word32 ebp_275
	word64 r12_276
	word32 r8d_277
	word32 edx_278
	word32 r12d_279
	byte dl_280
	word16 ax_281
	word32 r13d_282
	word64 r13_283
	word32 ebx_284
	word64 r8_285
	word64 r10_286
	word64 r11_287
	call cexit (retsize: 8;)
		uses: ax_203,C_218,dl_157,dwLoc04_4,dwLoc08_7,dwLoc0C_9,dwLoc10_12,dwLoc14_15,dwLoc18_18,eax_202,ebp_186,ebx_188,ecx_210,edx_215,gs_121,r10_135,r11_136,r12_176,r12d_175,r13_189,r13d_190,r15_139,r8_205,r8d_206,r9d_122,rax_201,rbp_185,rbx_191,rcx_195,rdi_187,rdx_207,rsi_192,rsp_125,SCZO_194,SZO_216,Z_217
		defs: ax_281,C_266,dl_280,eax_264,ebp_275,ebx_284,ecx_267,edx_278,gs_274,r10_286,r11_287,r12_276,r12d_279,r13_283,r13d_282,r15_272,r8_285,r8d_277,r9d_271,rax_270,rbp_259,rbx_262,rcx_269,rdi_260,rdx_268,rsi_261,rsp_258,SCZO_263,SZO_265,Z_273
// DataOut: eax rax rsp
// DataOut (flags): 
// SymbolicIn: ecx:<invalid> edx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401421:
	return
// DataOut: eax rax rsp
// DataOut (flags): 
// SymbolicIn: ecx:<invalid> edx:<invalid> rsp:rsp + 0xFFFFFFFFFFFFFFF8 eax:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

fn00000000004011B0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: ecx:<invalid> edx:<invalid> rsp:<invalid> eax:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> rbp:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004012D9:
	ecx_336 = 0x00000001
// DataOut: ecx r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004012EA:
	word32 r8d_367 = ecx_336 ^ 0x00000001
	branch dl_352 != 0x22 l00000000004012F8
// DataOut: ecx r15 r8d rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004012F4_1:
	ecx_336 = r8d_367
// DataOut: ecx r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004012F8:
// DataOut: ecx r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004012DE:
	rax_151 = rax_151 + 0x0000000000000001
// DataOut: ecx r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rax:<invalid> ecx:<invalid> edx:<invalid> r8d:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l00000000004011CE_1:
	Mem34[rdi_30:word64] = rax_22
	rdi_30 = rdi_30 + 0x0000000000000008
	rcx_28 = rcx_28 - 0x0000000000000001
// DataOut: gs r10 r11 r15 rax rcx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000B0 eax:0x00000000 ecx:<invalid> rdx:fp - 0x0000000000000090 rdi:<invalid> rcx:<invalid> -144(fp):rax -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -00AC(0)



void fn00000000004014D0(word64 rdx, word64 r11, word64 r15, selector gs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gs r11 r15 rdx
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000000004014D0_entry:
// DataOut: gs r11 r15 rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004014D0:
	word64 rax_5 = Mem0[0x0000000000404460:word64]
	Mem6[rax_5:word32] = 0x00000001
	word64 r10_10
	fn00000000004017E0(rax_5, rdx, qwLoc2C, qwLoc24, out r10_10)
	fn00000000004011B0(r10_10, r11, r15, gs)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// Terminates process

fn00000000004014D0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:rsp + 0x0000000000000028



DWORD Win32CrtStartup()
// stackDelta: 8; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gs r11 r15 rdx
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
Win32CrtStartup_entry:
// DataOut: gs r11 r15 rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401500:
	word64 rax_5 = Mem0[0x0000000000404460:word64]
	Mem6[rax_5:word32] = 0x00000000
	word64 r10_10
	word64 rax_11 = fn00000000004017E0(rax_5, rdx, qwLoc2C, qwLoc24, out r10_10)
	fn00000000004011B0(r10_10, r11, r15, gs)
	return rax_11
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// Terminates process

Win32CrtStartup_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:rsp + 0x0000000000000028



void fn0000000000401530()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: esp rsp sp spl
// Preserved: rbp
fn0000000000401530_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401530:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000401530_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rbp:rbp -4(fp):rbp



void fn0000000000401540()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esp r8 r8b r8d r8w rax rbx rcx rdx rsp sp spl
// Preserved: rbp
fn0000000000401540_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0018(0) Local -0020(0)

l0000000000401540:
	branch Mem0[0x00000000004030A0:word64] == 0x0000000000000000 l0000000000401582
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0018(0) Local -0020(0)

l0000000000401552:
	word32 eax_29 = GetModuleHandleA(tLoc20)
	word64 rax_30 = DPB(rax, eax_29, 0)
	branch rax_30 == 0x0000000000000000 l0000000000401593
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rbp:fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0018(0) Local -0020(0)

l0000000000401593:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rbp:fp - 0x0000000000000004 rcx:0000000000404000 eax:<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l0000000000401564:
	branch DPB(rax, GetProcAddress(tLoc20, tLoc18), 0) == 0x0000000000000000 l0000000000401582
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rbp:fp - 0x0000000000000004 rcx:0000000000404000 eax:<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l0000000000401579:
	word64 rsp_35
	word64 rbp_36
	byte SCZO_37
	byte Z_38
	word64 rcx_39
	word32 eax_40
	word64 rax_41
	byte SZO_42
	byte C_43
	word64 rdx_44
	call eax_29 (retsize: 4; depth: 40)
		uses: C_33,dwLoc04_4,eax_29,qwLoc04,rax_30,rbp_5,rcx_34,rdx,rsp_6,SCZO_8,SZO_31,tLoc20,Z_32
		defs: C_43,eax_40,rax_41,rbp_36,rcx_39,rdx_44,rsp_35,SCZO_37,SZO_42,Z_38
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rbp:fp - 0x0000000000000004 rcx:<invalid> eax:<invalid> rdx:000000000040400E rax:0000000000401530 -4(fp):rbp
// LocalsOut: fp(64)

l0000000000401582:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rbp:fp - 0x0000000000000004 rcx:<invalid> eax:<invalid> rdx:<invalid> rax:<invalid> -4(fp):rbp

l000000000040158E_thunk_fn00000000004016D0:
	fn00000000004016D0()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rbp:rbp rcx:00000000004015A0 eax:<invalid> rdx:<invalid> rax:<invalid> -4(fp):rbp

fn0000000000401540_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:rbp rcx:<invalid> al:<invalid> eax:<invalid> rdx:<invalid> rax:<invalid> rbx:<invalid> ecx:<invalid> r8:<invalid> -4(fp):rbp



void fn00000000004015A0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: esp rsp sp spl
// Preserved: rbp
fn00000000004015A0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004015A0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn00000000004015A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rbp:rbp -4(fp):rbp



void fn00000000004015B0(word64 rdx, word32 r8d, word32 dwArg0C, word64 qwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8d rdx
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000000004015B0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00000000004015B0_entry:
// DataOut: r8d rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004015B0:
	fn00000000004017A0(r8d)
	word64 rax_19 = Mem0[0x000000000040826C:word64]
	word32 eax_20 = (word32) rax_19
	word64 rsp_21
	word64 rbp_22
	byte SCZO_23
	word32 ecx_24
	word64 rdx_25
	word64 rax_26
	word64 rcx_27
	word32 eax_28
	word32 r8d_29
	call eax_20 (retsize: 4; depth: 4)
		uses: dwLoc04_4,eax_20,ecx,r8d,rax_19,rbp_5,rcx_18,rdx,rsp_6,SCZO_15
		defs: eax_28,ecx_24,r8d_29,rax_26,rbp_22,rcx_27,rdx_25,rsp_21,SCZO_23
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



word64 fn0000000000401620()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax rsp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esp r8 r8b r8d r8w rax rbx rcx rdx rsp sp spl
// Preserved:
fn0000000000401620_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401620:
	word64 rax_11 = fn0000000000401BD0()
	branch rax_11 == 0xFFFFFFFFFFFFFFFF l00000000004016B5
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004016B5:
	word64 rax_83 = Mem0[0x0000000000404370:word64]
	word64 rsp_86
	word64 rbx_87
	byte SCZO_88
	word64 rcx_89
	word64 rax_90
	byte Z_91
	word32 ecx_92
	word64 rdx_93
	word64 r8_94
	call Mem0[rax_83:word32] (retsize: 4; depth: 56)
		uses: dwLoc04_4,ecx,qwLoc14_14,qwLoc1C,qwLoc24,r8,rax_83,rbx_8,rcx_84,rdx,rsp_5,SCZO_12,Z_13
		defs: ecx_92,r8_94,rax_90,rbx_87,rcx_89,rdx_93,rsp_86,SCZO_88,Z_91
	return rax_90
// DataOut: rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbx:rcx rcx:<invalid> rax:<invalid> -20(fp):<invalid> -4(fp):rbx

l000000000040163F:
	word64 rsp_30
	word64 rbx_31
	byte SCZO_32
	word64 rcx_33
	word64 rax_34
	byte Z_35
	word32 ecx_36
	word64 rdx_37
	word64 r8_38
	call lock (retsize: 8; depth: 60)
		uses: dwLoc04_4,ecx_26,qwLoc14_14,qwLoc1C,r8,rax_11,rbx_8,rcx_10,rdx,rsp_5,SCZO_12,Z_13
		defs: ecx_36,r8_38,rax_34,rbx_31,rcx_33,rdx_37,rsp_30,SCZO_32,Z_35
	fn0000000000401BD0()
	word64 rax_44 = fn0000000000401BD0()
	word64 rsp_49
	word64 rbx_50
	byte SCZO_51
	word64 rcx_52
	word64 rax_53
	byte Z_54
	word32 ecx_55
	word64 rdx_56
	word64 r8_57
	call _dllonexit (retsize: 8; depth: 68)
		uses: dwLoc04_4,ecx_36,qwLoc14_48,qwLoc1C_43,r8_46,rax_44,rbx_31,rcx_47,rdx_45,rsp_39,SCZO_32,Z_35
		defs: ecx_55,r8_57,rax_53,rbx_50,rcx_52,rdx_56,rsp_49,SCZO_51,Z_54
	Mem64[0x0000000000407970:word64] = fn0000000000401BE0()
	word64 rax_65 = fn0000000000401BE0()
	Mem67[0x0000000000407978:word64] = rax_65
	word64 rsp_68
	word64 rbx_69
	byte SCZO_70
	word64 rcx_71
	word64 rax_72
	byte Z_73
	word32 ecx_74
	word64 rdx_75
	word64 r8_76
	call unlock (retsize: 8; depth: 76)
		uses: dwLoc04_4,ecx_66,qwLoc14_48,qwLoc1C_43,qwLoc24,r8_57,rax_65,rbx_61,rcx_63,rdx_56,rsp_58,SCZO_51,Z_54
		defs: ecx_74,r8_76,rax_72,rbx_69,rcx_71,rdx_75,rsp_68,SCZO_70,Z_73
	return rbx_69
// DataOut: rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbx:rcx rcx:<invalid> rax:<invalid> -20(fp):<invalid> -4(fp):rbx

fn0000000000401620_exit:
// DataOut: rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbx:<invalid> rcx:<invalid> ecx:<invalid> rdx:<invalid> r8:<invalid> rax:<invalid> -28(fp):<invalid> -20(fp):<invalid> -4(fp):rbx



void fn00000000004016D0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esp r8 r8b r8d r8w rax rbx rcx rdx rsp sp spl
// Preserved: rsp
l00000000004016D0:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00000000004016D0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004016D0:
	fn0000000000401620()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn00000000004016D0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> al:<invalid> eax:-(word32) Test(EQ,Z) rbx:<invalid> rcx:<invalid> ecx:<invalid> rdx:<invalid> r8:<invalid> rax:<invalid>



void fn00000000004016F0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: rsp
fn00000000004016F0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004016F0:
	word64 rax_5 = Mem0[Mem0[0x0000000000403010:word64]:word64]
	branch rax_5 == 0x0000000000000000 l0000000000401720
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401703:
	word64 rsp_20
	byte SCZO_21
	word64 rax_22
	byte SZO_23
	byte C_24
	byte Z_25
	word32 eax_26
	word64 rdx_27
	call eax (retsize: 4; depth: 44)
		uses: C_8,eax,rax_5,rdx,rsp_2,SCZO,SZO_6,Z_7
		defs: C_24,eax_26,rax_22,rdx_27,rsp_20,SCZO_21,SZO_23,Z_25
	word64 rax_28 = Mem0[0x0000000000403010:word64]
	word64 rax_30 = Mem0[rax_28 + 0x0000000000000008:word64]
	Mem31[0x0000000000403010:word64] = rax_28 + 0x0000000000000008
	branch rax_30 != 0x0000000000000000 l0000000000401703
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rdx:<invalid>
// LocalsOut: fp(64)

l0000000000401720:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rdx:<invalid>

fn00000000004016F0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rdx:<invalid>



void fn0000000000401730(word32 r8d, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8d
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esi esp r8 r8b r8d r8w rax rbx rcx rdx rsi rsp si sil sp spl
// Preserved: rbx
l0000000000401730:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000401730_entry:
// DataOut: r8d
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401730:
	word64 rcx_10 = Mem0[0x00000000004042F0:word64]
	word64 rdx_11 = Mem0[rcx_10:word64]
	word32 edx_12 = (word32) rdx_11
	word32 eax_15 = edx_12
	branch edx_12 == 0xFFFFFFFF l0000000000401780
// DataOut: eax r8d rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401780:
	eax_15 = 0x00000000
// DataOut: eax r8d rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rcx:<invalid> rdx:<invalid> eax:edx -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401786:
	word32 r8d_80 = r8 + 0x0000000000000001
	r8 = DPB(r8, r8d_80, 0) (alias)
	rdx_11 = r8
	branch Mem0[rcx_10 + r8 * 0x0000000000000008:word64] != 0x0000000000000000 l0000000000401784
// DataOut: eax edx r8d rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rcx:<invalid> rdx:<invalid> eax:<invalid> r8d:r8 + 0x0000000000000001 -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401784:
	eax_15 = r8d_80
// DataOut: eax r8d rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rcx:<invalid> rdx:r8 eax:<invalid> r8d:r8 + 0x0000000000000001 -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401794:
// DataOut: eax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rcx:<invalid> rdx:r8 eax:<invalid> r8d:r8 + 0x0000000000000001 -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401747:
	branch eax_15 == 0x00000000 l000000000040176B
// DataOut: eax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rcx:<invalid> rdx:<invalid> eax:<invalid> r8d:r8 + 0x0000000000000001 -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l000000000040174B:
	word64 rbx_52 = rcx_10 + DPB(rdx_11, eax_15, 0) * 0x0000000000000008
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rcx:<invalid> rdx:<invalid> eax:<invalid> r8d:r8 + 0x0000000000000001 -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401760:
	word64 rsp_56
	word64 rsi_57
	word64 rbx_58
	byte SCZO_59
	word64 rcx_60
	word64 rdx_61
	word32 edx_62
	word32 eax_63
	byte Z_64
	byte SZO_65
	byte C_66
	word64 rax_67
	word64 r8_68
	word32 r8d_69
	call Mem0[rbx_52:word32] (retsize: 4; depth: 52)
		uses: C_29,dwLoc04_4,dwLoc08_7,eax_50,edx_48,qwLoc08,r8_21,r8d_20,rax_51,rbx_52,rcx_10,rdx_53,rsi_55,rsp_8,SCZO_54,SZO_27,Z_28
		defs: C_66,eax_63,edx_62,r8_68,r8d_69,rax_67,rbx_58,rcx_60,rdx_61,rsi_57,rsp_56,SCZO_59,SZO_65,Z_64
	branch rbx_58 - 0x0000000000000008 != rsi_57 l0000000000401760
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rcx:<invalid> rdx:<invalid> eax:<invalid> edx:<invalid> rbx:<invalid> rsi:<invalid> r8d:<invalid> -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l000000000040176B:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rcx:<invalid> rdx:<invalid> eax:<invalid> edx:<invalid> rbx:<invalid> rsi:<invalid> r8d:<invalid> -8(fp):rbx -4(fp):rsi

l0000000000401778_thunk_fn00000000004016D0:
	fn00000000004016D0()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000008 rcx:00000000004016F0 rdx:<invalid> eax:<invalid> rbx:rbx rsi:SLICE(rsi, word64, 32) edx:<invalid> r8d:<invalid> -8(fp):rbx -4(fp):rsi

fn0000000000401730_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> rdx:<invalid> eax:<invalid> rbx:<invalid> rsi:SLICE(rsi, word64, 32) al:<invalid> edx:<invalid> ecx:<invalid> r8:<invalid> rax:<invalid> r8d:<invalid> -8(fp):rbx -4(fp):rsi



void fn00000000004017A0(word32 r8d)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8d
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esi esp r8 r8b r8d r8w rax rbx rcx rdx rsi rsp si sil sp spl
// Preserved: rsp
fn00000000004017A0_entry:
// DataOut: r8d
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004017A0:
	branch Mem0[0x0000000000407030:word32] == 0x00000000 l00000000004017B0
// DataOut: r8d
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004017B0:
	Mem7[0x0000000000407030:word32] = 0x00000001
// DataOut: r8d
// DataOut (flags): 
// SymbolicIn: rsp:fp eax:<invalid>

l00000000004017BA_thunk_fn0000000000401730:
	fn0000000000401730(r8d, qwLoc08)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp eax:<invalid>

l00000000004017AA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp eax:<invalid>

fn00000000004017A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> rcx:<invalid> rdx:<invalid> rsi:<invalid> al:<invalid> rbx:<invalid> edx:<invalid> ecx:<invalid> r8:<invalid> rax:<invalid> r8d:<invalid>



void fn00000000004017C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000000004017C0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00000000004017C0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn00000000004017D0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
fn00000000004017D0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004017D0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn00000000004017D0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp eax:0x00000000



word64 fn00000000004017E0(word64 rax, word64 rdx, word64 qwArg04, word64 qwArg0C, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax rdx
// LiveOut: eax r10 rax rsp
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx esi esp r10 r10b r10d r10w r12 r12b r12d r12w r8 r8b r8d r8w rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: rbx
// Stack args: Stack +000C(64)
fn00000000004017E0_entry:
	*r10Out = r10
// DataOut: eax gs r10 r11 r15 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0024(64) Local -0050(0) Stack +000C(64)

l00000000004017E0:
	word64 rbx_19 = Mem0[0x0000000000403080:word64]
	branch rbx_19 == rax l0000000000401820
// DataOut: eax gs r10 r11 r15 rax rbx rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0024(64) Local -0050(0) Stack +000C(64)

l0000000000401820:
	GetSystemTimeAsFileTime(tLoc50)
	word32 eax_71 = GetCurrentProcessId()
	word32 eax_73 = GetCurrentThreadId()
	word32 eax_75 = GetTickCount()
	QueryPerformanceCounter(tLoc50)
	word64 rax_84 = DPB(rax, eax_71, 0) ^ (qwLoc24 ^ 0x0000000000000000)
	word64 r10_83
	*r10Out = 0x00000000FFFFFFFF
	word64 rax_91 = (DPB(rax_84, eax_75, 0) ^ (DPB(qwLoc24 ^ 0x0000000000000000, eax_73, 0) ^ rax_84)) & rdx
	branch rax_91 == rbx_19 l00000000004018A0
// DataOut: eax gs r10 r11 r15 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000054 rbx:<invalid> r8:0x000000002DDFA232 -52(fp):0x0000000000000000 -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp
// LocalsOut: fp(64) Stack +000C(64)

l00000000004018A0:
	word64 r10_114
	*r10Out = 0x00000000D2205DCC
// DataOut: eax gs r10 r11 r15 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000054 rbx:<invalid> r8:0x000000002DDFA232 rdi:<invalid> eax:<invalid> r12d:<invalid> ebp:<invalid> rcx:fp - 0x0000000000000024 esi:<invalid> r10:0x00000000FFFFFFFF rax:<invalid> edi:<invalid> -52(fp):0x0000000000000000 -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp
// LocalsOut: fp(64) Stack +000C(64)

l000000000040187B:
	rdx = ~rax_91
// DataOut: eax gs r10 r11 r15 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000054 rbx:<invalid> r8:0x000000002DDFA232 rdi:<invalid> eax:<invalid> r12d:<invalid> ebp:<invalid> rcx:fp - 0x0000000000000024 esi:<invalid> r10:0x00000000FFFFFFFF rax:<invalid> edi:<invalid> -52(fp):0x0000000000000000 -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp
// LocalsOut: fp(64) Stack +000C(64)

l0000000000401881:
	Mem98[0x0000000000403080:word64] = rax_91
	Mem99[0x0000000000403090:word64] = rdx
	return rax_91
// DataOut: eax gs r10 r11 r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000054 rbx:<invalid> r8:<invalid> rdi:<invalid> eax:<invalid> r12d:<invalid> ebp:<invalid> rcx:fp - 0x0000000000000024 esi:<invalid> r10:<invalid> rax:<invalid> edi:<invalid> rdx:<invalid> -52(fp):0x0000000000000000 -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l0000000000401809:
	Mem44[0x0000000000403090:word64] = ~rbx_19
	return rax
// DataOut: eax gs r10 r11 r15 rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000054 rbx:<invalid> r8:0x000000002DDFA232 -52(fp):0x0000000000000000 -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

fn00000000004017E0_exit:
// DataOut: eax r10 rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbx:rbx r8:<invalid> rsi:rdi rdi:fp rbp:<invalid> eax:<invalid> r12d:<invalid> ebp:<invalid> rcx:fp - 0x0000000000000024 esi:<invalid> r10:<invalid> rax:<invalid> edi:<invalid> rdx:<invalid> -52(fp):0x0000000000000000 -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp



void fn00000000004018C0(word64 rcx, word64 qwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +000C(64)
// Terminates process
fn00000000004018C0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00000000004018C0_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0070(0) Local -0078(0) Stack +000C(64)

l00000000004018C0:
	RtlCaptureContext(tLoc78)
	word64 rbx_17 = Mem0[0x0000000000407158:word64]
	word64 rsi_114 = rcx
	branch RtlLookupFunctionEntry(rbx_17, fp - 0x0000000000000034, DPB(r8, 0x00000000, 0)) == 0x0000000000000000 l00000000004019A0
// DataOut: rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0070(0) Local -0078(0) Stack +000C(64)

l00000000004018FD:
	word64 rsp_112
	word64 rbp_113
	word64 rbx_115
	byte SCZO_116
	word64 rcx_117
	word32 r8d_118
	byte SZO_119
	byte C_120
	word64 rdx_121
	word64 rax_122
	word64 r8_123
	word64 r9_124
	byte Z_125
	word32 ecx_126
	word32 eax_127
	word32 edx_128
	call KERNEL32.dll!RtlVirtualUnwind (retsize: 4; depth: 128)
		uses: C_106,dwLoc04_4,dwLoc08_7,dwLoc0C_10,eax,ecx_104,edx,qwLoc14,qwLoc1C,qwLoc34,qwLoc44_100,qwLoc4C_107,qwLoc54_109,qwLoc5C_111,r8_101,r8d_18,r9_27,rax_110,rbp_11,rbx_17,rcx_22,rdx_103,rsi_14,rsp_12,SCZO,SZO_105,tLoc70,tLoc78,Z_25
		defs: C_120,eax_127,ecx_126,edx_128,r8_123,r8d_118,r9_124,rax_122,rbp_113,rbx_115,rcx_117,rdx_121,rsi_114,rsp_112,SCZO_116,SZO_119,Z_125
// DataOut: rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000007C rbp:fp - 0x000000000000000C rsi:rcx rbx:<invalid> r8d:0x00000000 rdx:fp - 0x0000000000000034 rcx:<invalid> rax:<invalid> r9:<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rbp
// LocalsOut: fp(64) Local -0070(0) Local -0078(0) Stack +000C(64)

l0000000000401933:
	word64 rax_79 = Mem0[0x0000000000407158:word64]
	Mem83[0x00000000004070E0:word64] = rsi_114
	Mem84[0x0000000000407540:word32] = 0xC0000409
	Mem85[0x0000000000407544:word32] = 0x00000001
	Mem86[0x0000000000407550:word64] = rax_79
	SetUnhandledExceptionFilter(tLoc78)
	UnhandledExceptionFilter(tLoc78)
	GetCurrentProcess()
	TerminateProcess(tLoc78, tLoc70)
	abort()
// DataOut: rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000007C rbp:fp - 0x000000000000000C rsi:rcx rbx:<invalid> r8d:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> r9:<invalid> r8:<invalid> ecx:<invalid> eax:<invalid> edx:0xC0000409 -92(fp):0000000000407060 -84(fp):fp - 0x0000000000000024 -76(fp):fp - 0x000000000000002C -68(fp):0x0000000000000000 -28(fp):<invalid> -20(fp):<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rbp
// LocalsOut: fp(64) Local -0070(0) Local -0078(0) Stack +000C(64)

l00000000004019A0:
	Mem62[0x0000000000407158:word64] = qwArg0C
	Mem64[0x00000000004070F8:word64] = fp - 0x0000000000000004
// DataOut: rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000007C rbp:fp - 0x000000000000000C rsi:rcx rbx:<invalid> r8d:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> r9:<invalid> r8:<invalid> ecx:<invalid> eax:<invalid> edx:0xC0000409 -92(fp):0000000000407060 -84(fp):fp - 0x0000000000000024 -76(fp):fp - 0x000000000000002C -68(fp):0x0000000000000000 -28(fp):<invalid> -20(fp):<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rbp
// LocalsOut: fp(64) Local -0070(0) Local -0078(0) Stack +000C(64)



void fn00000000004019C0(word32 edx, word32 ebx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: rsp
fn00000000004019C0_entry:
// DataOut: ebx edx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004019C0:
	branch edx == 0x00000003 l00000000004019E0
// DataOut: ebx edx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004019C9:
	branch edx == 0x00000000 l00000000004019E0
// DataOut: ebx edx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028
// LocalsOut: fp(64)

l00000000004019E0:
	fn00000000004026C0(edx, ebx)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028

l00000000004019CD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028

fn00000000004019C0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:0x00000001 rcx:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> rax:<invalid>



void fn00000000004019F0(word32 edx, word32 ebx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: rbx
fn00000000004019F0_entry:
// DataOut: ebx edx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004019F0:
	word64 rax_10 = Mem0[0x00000000004042D0:word64]
	word32 eax_11 = (word32) rax_10
	branch Mem0[rax_10:word32] == 0x00000002 l0000000000401A08
// DataOut: ebx edx rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401A02:
	Mem90[rax_10:word32] = 0x00000002
// DataOut: ebx edx rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rax:<invalid> -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401A08:
	branch edx == 0x00000002 l0000000000401A20
// DataOut: ebx edx rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rax:<invalid> -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401A20:
	word64 rbx_42 = 0x0000000000409060
	word64 rsi_44 = 0x0000000000409060
	branch 0x0000000000409060 == 0x0000000000409060 l0000000000401A12
// DataOut: rbx rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rax:<invalid> -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401A33:
	word64 rax_54 = Mem0[rbx_42:word64]
	branch rax_54 == 0x0000000000000000 l0000000000401A3D
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rax:<invalid> rbx:<invalid> rsi:0000000000409060 -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401A3B:
	word64 rsp_79
	byte SCZO_82
	word64 rax_83
	byte Z_84
	word32 edx_85
	byte SZO_87
	byte C_88
	word32 ebx_89
	call eax_11 (retsize: 4; depth: 52)
		uses: C_57,dwLoc04_4,dwLoc08_7,eax_49,ebx_48,edx_47,qwLoc08,rax_54,rbx_51,rsi_52,rsp_53,SCZO_50,SZO_55,Z_56
		defs: C_88,eax_86,ebx_89,edx_85,rax_83,rbx_81,rsi_80,rsp_79,SCZO_82,SZO_87,Z_84
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rax:<invalid> rbx:<invalid> rsi:0000000000409060 -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401A3D:
	rbx_42 = rbx_42 + 0x0000000000000008
	branch rsi_44 != rbx_42 l0000000000401A33
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rax:<invalid> rbx:<invalid> rsi:0000000000409060 -8(fp):rbx -4(fp):rsi
// LocalsOut: fp(64)

l0000000000401A46:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rax:<invalid> rbx:<invalid> rsi:0000000000409060 -8(fp):rbx -4(fp):rsi

l0000000000401A0D:
	branch edx == 0x00000001 l0000000000401A52
// DataOut: ebx edx rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rax:<invalid> -8(fp):rbx -4(fp):rsi

l0000000000401A52:
	fn00000000004026C0(edx, ebx)
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000030 rax:<invalid> -8(fp):rbx -4(fp):rsi

l0000000000401A12:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> eax:0x00000001 rcx:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> -8(fp):rbx -4(fp):rsi

fn00000000004019F0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rax:<invalid> rbx:<invalid> rsi:<invalid> eax:0x00000001 rcx:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> -8(fp):rbx -4(fp):rsi



void fn0000000000401A60()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
fn0000000000401A60_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000401A60:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000401A60_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp eax:0x00000000



void fn0000000000401A70()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
fn0000000000401A70_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401A70:
	branch Mem0[0x0000000000407600:word64] == 0x0000000000000000 l0000000000401AAC
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401AAC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000058 rax:<invalid>

fn0000000000401A70_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>

l0000000000401A80:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000058 rax:<invalid>



void fn0000000000401AC0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed:
// Preserved: rsp
fn0000000000401AC0_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000401AC0:
	Mem3[0x0000000000407600:word64] = rcx
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000402C98:
	word64 rsp_4
	word64 rcx_5
	call Mem3[0x0000000000408314:word32] (retsize: 4; depth: 4)
		uses: rcx,rsp_1
		defs: rcx_5,rsp_4
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000401AC0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000401AD0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000401AD0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000401AD0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401AD0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000401BC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000401BC0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000401BC0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000401BC0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



word64 fn0000000000401BD0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: ah al ax eax rax
// Preserved: rsp
fn0000000000401BD0_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000401BD0:
	return rcx
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000401BD0_exit:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:rcx



word64 fn0000000000401BE0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: ah al ax eax rax
// Preserved: rsp
fn0000000000401BE0_entry:
// DataOut: rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000401BE0:
	return rcx
// DataOut: rax rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000401BE0_exit:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:rcx



word64 fn0000000000401BF0(word64 rbp, word64 r8, word64 r10, word64 qwArg18, word64 qwArg20, word64 qwArg28, ptr64 & rcxOut, ptr64 & rbxOut, ptr64 & rbpOut, ptr64 & rsiOut, ptr64 & rdiOut, ptr64 & r8Out, ptr64 & r10Out, ptr64 & r11Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r8 rbp
// LiveOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx rdi rsi rsp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp r10 r10b r10d r10w r11 r11b r11d r11w r12 r12b r12d r12w r13 r13b r13d r13w r14 r14b r14d r14w r15 r15b r15d r15w r8 r8b r8d r8w r9 r9b r9d r9w rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0000000000401BF0_entry:
// DataOut: r10 r8 rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0020(64)

l0000000000401BF0:
	word64 rsp_20
	word64 rsi_21
	word64 rbx_22
	byte SCZO_23
	word64 rax_24
	word64 rcx_25
	word64 rdx_26
	word64 r8_27
	word64 r9_28
	word32 eax_29
	word32 edx_30
	word64 rbp_31
	word64 r10_32
	word64 rdi_33
	word64 r11_34
	word64 r12_35
	word64 r13_36
	word64 r15_37
	call _iob_func (retsize: 8; depth: 72)
		uses: dwLoc04_4,dwLoc08_7,qwLoc18_19,r8,r9,rax_10,rbx_12,rcx,rdx,rsi,rsp_8,SCZO_9
		defs: eax_29,edx_30,r10_32,r11_34,r12_35,r13_36,r15_37,r8_27,r9_28,rax_24,rbp_31,rbx_22,rcx_25,rdi_33,rdx_26,rsi_21,rsp_20,SCZO_23
	word64 rsp_44
	word64 rsi_45
	word64 rbx_46
	byte SCZO_47
	word64 rax_48
	word64 rcx_49
	word64 rdx_50
	word64 r8_51
	word64 r9_52
	word32 eax_53
	word32 edx_54
	word64 rbp_55
	word64 r10_56
	word64 rdi_57
	word64 r11_58
	word64 r12_59
	word64 r13_60
	word64 r15_61
	call msvcrt.dll!fwrite (retsize: 8; depth: 80)
		uses: dwLoc04_4,dwLoc08_7,eax_41,edx_43,qwLoc18_19,r10_32,r11_34,r12_35,r13_36,r15_37,r8_27,r9_40,rax_42,rbp_31,rbx_22,rcx_39,rdi_33,rdx_26,rsi_21,rsp_38,SCZO_23
		defs: eax_53,edx_54,r10_56,r11_58,r12_59,r13_60,r15_61,r8_51,r9_52,rax_48,rbp_55,rbx_46,rcx_49,rdi_57,rdx_50,rsi_45,rsp_44,SCZO_47
	word64 rsp_64
	word64 rsi_65
	word64 rbx_66
	byte SCZO_67
	word64 rax_68
	word64 rcx_69
	word64 rdx_70
	word64 r8_71
	word64 r9_72
	word32 eax_73
	word32 edx_74
	word64 rbp_75
	word64 r10_76
	word64 rdi_77
	word64 r11_78
	word64 r12_79
	word64 r13_80
	word64 r15_81
	call _iob_func (retsize: 8; depth: 80)
		uses: dwLoc04_4,dwLoc08_7,eax_53,edx_54,qwLoc18_19,qwLoc20,r10_56,r11_58,r12_59,r13_60,r15_61,r8_51,r9_52,rax_48,rbp_55,rbx_46,rcx_49,rdi_57,rdx_50,rsi_63,rsp_44,SCZO_47
		defs: eax_73,edx_74,r10_76,r11_78,r12_79,r13_80,r15_81,r8_71,r9_72,rax_68,rbp_75,rbx_66,rcx_69,rdi_77,rdx_70,rsi_65,rsp_64,SCZO_67
	word64 rsp_86
	word64 rsi_87
	word64 rbx_88
	byte SCZO_89
	word64 rax_90
	word64 rcx_91
	word64 rdx_92
	word64 r8_93
	word64 r9_94
	word32 eax_95
	word32 edx_96
	word64 rbp_97
	word64 r10_98
	word64 rdi_99
	word64 r11_100
	word64 r12_101
	word64 r13_102
	word64 r15_103
	call msvcrt.dll!vfprintf (retsize: 8; depth: 88)
		uses: dwLoc04_4,dwLoc08_7,eax_73,edx_74,qwLoc18_19,qwLoc20,r10_76,r11_78,r12_79,r13_80,r15_81,r8_85,r9_72,rax_68,rbp_75,rbx_66,rcx_83,rdi_77,rdx_84,rsi_65,rsp_82,SCZO_67
		defs: eax_95,edx_96,r10_98,r11_100,r12_101,r13_102,r15_103,r8_93,r9_94,rax_90,rbp_97,rbx_88,rcx_91,rdi_99,rdx_92,rsi_87,rsp_86,SCZO_89
	abort()
// DataOut: r10 r8 rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000401C56_thunk_fn0000000000401C60:
	word64 rcx_106
	word64 rbx_107
	word64 rbp_108
	word64 rsi_109
	word64 rdi_110
	word64 r8_111
	word64 r10_112
	word64 r11_113
	word64 r12_114
	word64 r13_115
	word64 r15_116
	return fn0000000000401C60(rcx_91, rbp_97, r8_93, r10_98, qwLoc50, qwLoc48, out rcx_106, out rbx_107, out rbp_108, out rsi_109, out rdi_110, out r8_111, out r10_112, out r11_113, out r12_114, out r13_115, out r15_116)
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000050 rax:<invalid> rbx:rcx rcx:<invalid> r9:<invalid> eax:<invalid> edx:<invalid> rsi:<invalid> rdx:<invalid> r8:<invalid> -24(fp):fp + 0x0000000000000018 -8(fp):rbx -4(fp):rsi 24(fp):rdx 32(fp):r8 40(fp):r9

fn0000000000401BF0_exit:
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rax:<invalid> rbx:<invalid> rcx:<invalid> r9:<invalid> eax:<invalid> edx:<invalid> rsi:<invalid> rdx:<invalid> r8:<invalid> ecx:<invalid> rdi:<invalid> rbp:<invalid> ebx:<invalid> r12:<invalid> esi:<invalid> ax:<invalid> r8d:<invalid> r13:<invalid> r11d:<invalid> r10d:<invalid> al:<invalid> r9d:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -24(fp):fp + 0x0000000000000018 -8(fp):rbx -4(fp):rsi 24(fp):rdx 32(fp):r8 40(fp):r9



word64 fn0000000000401C60(word64 rcx, word64 rbp, word64 r8, word64 r10, word64 qwArg00, word64 qwArg08, ptr64 & rcxOut, ptr64 & rbxOut, ptr64 & rbpOut, ptr64 & rsiOut, ptr64 & rdiOut, ptr64 & r8Out, ptr64 & r10Out, ptr64 & r11Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r8 rbp rcx
// LiveOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx rdi rsi rsp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp r10 r10b r10d r10w r11 r11b r11d r11w r12 r12b r12d r12w r13 r13b r13d r13w r14 r14b r14d r14w r15 r15b r15d r15w r8 r8b r8d r8w r9 r9b r9d r9w rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0008(64)
fn0000000000401C60_entry:
// DataOut: r10 r11 r12 r13 r15 r8 rbp rbx rcx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -002C(32) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401C60:
	word32 ebx_129
	word32 ecx_23 = Mem0[0x0000000000407624:word32]
	word64 rbp_154 = r8
	branch ecx_23 <= 0x00000000 l0000000000401D78
// DataOut: ecx r10 r11 r12 r13 r15 r8 rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0004(0) Local -0008(0) Local -0010(64) Local -0018(64) Local -002C(32) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401D78:
	ebx_129 = 0x00000000
// DataOut: ebx r10 r11 r15 rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(0) Local -0008(0) Local -0010(64) Local -0018(64) Local -002C(32) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401C83:
	ebx_129 = 0x00000000
	word64 rax_298 = Mem0[0x0000000000407628:word64] + 0x0000000000000008
	r8_308 = r8
// DataOut: ebx ecx r10 r11 r12 r13 r15 r8 rax rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(0) Local -0008(0) Local -0010(64) Local -0018(64) Local -002C(32) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401C90:
	word64 r8_308
	rdx = Mem0[rax_298:word64]
	branch rcx <u rdx l0000000000401CAC
// DataOut: ebx ecx r10 r11 r12 r13 r15 r8 rax rbp rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 rax:<invalid> ebx:<invalid> rdx:<invalid> r8:<invalid> r8d:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(0) Local -0008(0) Local -0010(64) Local -0018(64) Local -002C(32) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401C98:
	word64 r8_324 = Mem0[r8_308 + 0x0000000000000008:word64]
	r8_308 = DPB(r8_324, Mem0[r8_324 + 0x0000000000000008:word32], 0) (alias)
	rdx = rdx + r8_308
	branch rcx <u rdx l0000000000401D5E
// DataOut: ebx ecx r10 r11 r12 r13 r15 r8 rax rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 rax:<invalid> ebx:<invalid> rdx:<invalid> r8:<invalid> r8d:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(0) Local -0008(0) Local -0010(64) Local -0018(64) Local -002C(32) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401CAC:
	ebx_129 = ebx_129 + 0x00000001
	rax_298 = rax_298 + 0x0000000000000018
	branch ebx_129 != ecx_23 l0000000000401C90
// DataOut: ebx ecx r10 r11 r12 r13 r15 r8 rax rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 rax:<invalid> ebx:<invalid> rdx:<invalid> r8:<invalid> r8d:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(0) Local -0008(0) Local -0010(64) Local -0018(64) Local -002C(32) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401CB7:
	word64 r8_134
	word64 rax_135 = fn00000000004028C0(rcx, r10, out r8_134)
	branch rax_135 == 0x0000000000000000 l0000000000401DB0
// DataOut: ebx r10 r11 r12 r15 r8 rax rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 ebx:<invalid> rax:<invalid> rdx:<invalid> r8:<invalid> r8d:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(0) Local -0008(0) Local -0010(64) Local -0018(64) Local -002C(32) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401CCB:
	Mem191[r8 + 0x0000000000000010:word64] = rax_135
	Mem192[r8:word32] = 0x00000000
	word64 r8_193
	Mem201[r8 + 0x0000000000000008:word64] = DPB(fn0000000000402A10(rax_135, out r8_193), 0x00000030, 0) + DPB(rdx, Mem192[rax_135 + 0x000000000000000C:word32], 0)
	word64 rax_202 = Mem201[0x0000000000407628:word64]
	word64 rbx_186 = (int64) ebx_129 * 0x0000000000000018
	branch DPB(rax_202, VirtualQuery(tLoc6C, tLoc64, tLoc5C), 0) == 0x0000000000000000 l0000000000401D93
// DataOut: r10 r11 r12 r13 r15 r8 rbp rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 ebx:<invalid> rcx:<invalid> r12:<invalid> rax:<invalid> rdx:<invalid> r8:<invalid> r8d:<invalid> r9:<invalid> edx:<invalid> eax:<invalid> al:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64) Local -0010(64) Local -0018(64) Local -002C(32) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401D1F:
	branch (DPB(rax_202, dwLoc2C, 0) - 0x0000000000000040 & 0xFFFFFFBF) == 0x00000000 l0000000000401D57
// DataOut: eax r10 r11 r12 r13 r15 r8 rax rbp rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 ebx:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> eax:<invalid> rdx:fp - 0x0000000000000050 r8d:<invalid> r9:<invalid> al:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64) Local -0010(64) Local -0018(64) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401D2B:
	branch (dwLoc2C - 0x00000004 & 0xFFFFFFFB) == 0x00000000 l0000000000401D57
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 ebx:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> eax:<invalid> rdx:<invalid> r8d:<invalid> r9:<invalid> al:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64) Local -0010(64) Local -0018(64) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401D33:
	branch VirtualProtect(tLoc6C, tLoc64, tLoc5C, tLoc54) == 0x00000000 l0000000000401D7F
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 ebx:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> eax:<invalid> rdx:<invalid> r8d:<invalid> r9:<invalid> al:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64) Local -0010(64) Local -0018(64) Local -0050(0) Local -0054(0) Local -005C(0) Local -0064(0) Local -006C(0) Stack +0008(64)

l0000000000401D7F:
	GetLastError()
	word64 rcx_283
	word64 rsi_286
	word64 rdi_287
	word64 r8_288
	word64 r11_290
	word64 r12_291
	word64 r13_292
	word64 r15_293
	fn0000000000401BF0(r8, r8_193, r10, qwLoc60, qwLoc58, qwLoc50, out rcx_283, out rbx_186, out rbp_154, out rsi_286, out rdi_287, out r8_288, out r10, out r11_290, out r12_291, out r13_292, out r15_293)
// DataOut: r10 r12 rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 ebx:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> eax:<invalid> rdx:<invalid> r9:<invalid> r8d:<invalid> al:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401D93:
	word64 rcx_227
	word64 rbx_228
	word64 rsi_230
	word64 rdi_231
	word64 r11_234
	word64 r12_235
	word64 r13_236
	word64 r15_237
	fn0000000000401BF0(rbp_154, Mem201[Mem201[0x0000000000407628:word64] + 0x0000000000000008 + rbx_186:word64], r10, qwArg10, qwArg18, qwArg20, out rcx_227, out rbx_228, out rbp_154, out rsi_230, out rdi_231, out r8_134, out r10, out r11_234, out r12_235, out r13_236, out r15_237)
// DataOut: r10 r8 rbp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rsi:<invalid> ecx:<invalid> rdi:<invalid> rbp:<invalid> ebx:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> eax:<invalid> rdx:<invalid> r8d:<invalid> r9:<invalid> al:<invalid> esi:<invalid> ax:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: Local -0004(0) Local -0008(0)

l0000000000401DB0:
	word64 rcx_160
	word64 rbx_161
	word64 rbp_162
	word64 rsi_163
	word64 rdi_164
	word64 r8_165
	word64 r10_166
	word64 r11_167
	word64 r12_168
	word64 r13_169
	word64 r15_170
	fn0000000000401BF0(rbp_154, r8_134, r10, qwArg10, qwArg18, qwArg20, out rcx_160, out rbx_161, out rbp_162, out rsi_163, out rdi_164, out r8_165, out r10_166, out r11_167, out r12_168, out r13_169, out r15_170)
// DataOut: r10 r11 rbp rdi
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rsi:<invalid> ecx:<invalid> rdi:<invalid> rbp:<invalid> ebx:<invalid> rcx:<invalid> r12:<invalid> rax:<invalid> rdx:<invalid> r8:<invalid> r8d:<invalid> r9:<invalid> edx:<invalid> rbx:<invalid> r13:<invalid> eax:<invalid> al:<invalid> esi:<invalid> ax:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401DBF_thunk_fn0000000000401DC0:
	word64 rcx_172
	word64 rbp_173
	word64 rsi_174
	word64 rdi_175
	word64 r8_176
	word64 r10_177
	word64 r11_178
	word64 r12_179
	word64 r13_180
	word64 r15_181
	return fn0000000000401DC0(rbp_162, rdi_164, r10_166, r11_167, out rcx_172, out rbp_173, out rsi_174, out rdi_175, out r8_176, out r10_177, out r11_178, out r12_179, out r13_180, out r15_181)
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rsi:<invalid> ecx:<invalid> rdi:<invalid> rbp:<invalid> ebx:<invalid> rcx:<invalid> r12:<invalid> rdx:<invalid> rax:<invalid> rbx:<invalid> r9:<invalid> eax:<invalid> edx:<invalid> r8:<invalid> r8d:<invalid> r13:<invalid> al:<invalid> esi:<invalid> ax:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000401D57:
	Mem257[0x0000000000407624:word32] = Mem201[0x0000000000407624:word32] + 0x00000001
// DataOut: r10 r11 r12 r13 r15 rax rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 ebx:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> eax:<invalid> rdx:<invalid> r8d:<invalid> r9:<invalid> al:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Local -0008(64) Local -0010(64) Local -0018(64) Stack +0008(64)

l0000000000401D5E:
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000070 rsi:rcx ecx:<invalid> rdi:rdx rbp:r8 rax:<invalid> ebx:<invalid> rdx:<invalid> r8:<invalid> r8d:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> edx:<invalid> eax:<invalid> r9:<invalid> al:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000402C28:
	word64 rsp_103
	word64 rbp_104
	word64 rdi_105
	word64 rsi_106
	word64 rbx_107
	byte SCZO_108
	word64 rcx_109
	word32 ecx_110
	word64 rdx_111
	word64 r8_112
	byte SZO_113
	byte C_114
	word64 rax_115
	word32 ebx_116
	word32 r8d_117
	byte Z_118
	word64 r12_119
	word64 r13_120
	word32 edx_121
	word32 eax_122
	word64 r9_123
	word64 r10_124
	word64 r11_125
	word64 r15_126
	call Mem0[0x0000000000408394:word32] (retsize: 4; depth: 4)
		uses: C_73,dwLoc04_4,dwLoc08_7,dwLoc0C_9,dwLoc10_12,dwLoc14_15,dwLoc18_18,eax_67,ebx_84,ecx_79,edx_68,qwLoc08,qwLoc10,qwLoc18,r10,r11,r12_70,r13_69,r15,r8_75,r8d_76,r9_66,rax_72,rbp_98,rbx_83,rcx_78,rdi_90,rdx_77,rsi_87,rsp_99,SCZO_81,SZO_74,Z_71
		defs: C_114,eax_122,ebx_116,ecx_110,edx_121,r10_124,r11_125,r12_119,r13_120,r15_126,r8_112,r8d_117,r9_123,rax_115,rbp_104,rbx_107,rcx_109,rdi_105,rdx_111,rsi_106,rsp_103,SCZO_108,SZO_113,Z_118
	return rax_115
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rsi:rdi ecx:<invalid> rdi:fp - 0x0000000000000004 rbp:<invalid> rax:<invalid> ebx:<invalid> rdx:rdx r8:r8 r8d:<invalid> rcx:rcx rbx:rbx r12:<invalid> r13:<invalid> edx:<invalid> eax:<invalid> r9:<invalid> al:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp

fn0000000000401C60_exit:
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rsi:<invalid> ecx:<invalid> rdi:<invalid> rbp:<invalid> ebx:<invalid> rcx:<invalid> r12:<invalid> rdx:<invalid> rax:<invalid> rbx:<invalid> r9:<invalid> eax:<invalid> edx:<invalid> r8:<invalid> esi:<invalid> ax:<invalid> r8d:<invalid> r13:<invalid> r11d:<invalid> r10d:<invalid> al:<invalid> r9d:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -24(fp):rbx -20(fp):rsi -16(fp):rdi -12(fp):rbp -8(fp):fp - 0x0000000000000004 -4(fp):rbp



word64 fn0000000000401DC0(word64 rbp, word64 rdi, word64 r10, word64 r11, ptr64 & rcxOut, ptr64 & rbpOut, ptr64 & rsiOut, ptr64 & rdiOut, ptr64 & r8Out, ptr64 & r10Out, ptr64 & r11Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r11 rbp rdi
// LiveOut: esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp r10 r10b r10d r10w r11 r11b r11d r11w r12 r12b r12d r12w r13 r13b r13d r13w r14 r14b r14d r14w r15 r15b r15d r15w r8 r8b r8d r8w r9 r9b r9d r9w rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: rbx
fn0000000000401DC0_entry:
	*r10Out = r10
	*r8Out = r8
	*rcxOut = rcx
	*r15Out = r15
	*r13Out = r13
	*r11Out = r11
	*r12Out = r12
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rcx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401DC0:
	word64 rbp_139 = fp - 0x0000000000000008
	word32 esi_26 = Mem0[0x0000000000407620:word32]
	branch esi_26 == 0x00000000 l0000000000401DF3
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401DF3:
	Mem158[0x0000000000407620:word32] = 0x00000001
	word64 r8_159
	word64 rax_164 = DPB(rax, (int16) fn0000000000402950(out r8_159), 0) * 0x0000000000000003 * 0x0000000000000008 + 0x0000001E
	word64 r8_169
	word64 rcx_170 = fn0000000000402BC0(rax_164 & 0xFFFFFFFFFFFFFFF0, r8_159, qwLoc90, out r8_169)
	*rcxOut = rcx_170
	word64 r12_172 = Mem158[0x0000000000404300:word64]
	*r12Out = r12_172
	word64 rbx_174 = Mem158[0x0000000000404310:word64]
	Mem177[0x0000000000407624:word32] = 0x00000000
	Mem179[0x0000000000407628:word64] = fp - 0x0000000000000088 - (rax_164 & 0xFFFFFFFFFFFFFFF0) + 0x0000000000000020
	rax = r12_172 - rbx_174
	branch rax <= 0x0000000000000007 l0000000000401DE2
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000088 rbp:fp - 0x0000000000000008 esi:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401E4C:
	branch rax <= 0x000000000000000B l0000000000401E80
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> rdx:<invalid> r8d:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401E52:
	word32 r11d_927 = Mem179[r11:word32]
	r11 = DPB(r11, r11d_927, 0) (alias)
	*r11Out = r11
	branch r11d_927 != 0x00000000 l0000000000401FA0
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> rdx:<invalid> r8d:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401E5E:
	word32 r10d_932 = Mem179[r11 + 0x0000000000000004:word32]
	r10 = DPB(r10, r10d_932, 0) (alias)
	*r10Out = r10
	branch r10d_932 != 0x00000000 l0000000000401FA0
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> rdx:<invalid> r8d:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401E6B:
	branch Mem179[r11 + 0x0000000000000008:word32] != 0x00000000 l0000000000401E97
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r10d:<invalid> rdx:<invalid> r8d:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401E74:
	rbx_174 = rbx_174 + 0x000000000000000C
// DataOut: r10 r11 r12 r13 r15 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> rdx:<invalid> r8d:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401E80:
	word32 r8d_917 = Mem179[r11:word32]
	*r8Out = DPB(r8_169, r8d_917, 0)
	branch r8d_917 != 0x00000000 l0000000000401FA0
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> rdx:<invalid> r8d:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401E8C:
	word32 ecx_922 = Mem179[rbx_174 + 0x0000000000000004:word32]
	*rcxOut = DPB(rcx_170, ecx_922, 0)
	branch ecx_922 != 0x00000000 l0000000000401FA0
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> rdx:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401FA0:
	branch rbx_174 >=u r12_172 l0000000000401DE2
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> ecx:<invalid> rdx:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> r9d:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0004(64) Local -0008(64)

l0000000000401FA9:
	word64 r13_871 = Mem179[0x0000000000404330:word64]
// DataOut: r10 r13 r8 rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> ecx:<invalid> rdx:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> r9d:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401FB4:
	word64 rcx_889 = DPB(rcx_170, Mem179[rbx_174 + 0x0000000000000004:word32], 0) + r13_871
	Mem893[rbp_139 - 0x0000000000000050:word32] = Mem179[rcx_889:word32] + 0x00000004
	word64 rsi_897
	word64 rdi_898
	word64 r11_901
	word64 r12_902
	word64 r15_904
	rax = fn0000000000401C60(rcx_889, rbp_139, r8_169, r10, qwLoc08, qwArg00, out rcx_170, out rbx_174, out rbp_139, out rsi_897, out rdi_898, out r8_169, out r10, out r11_901, out r12_902, out r13_871, out r15_904)
	branch rbx_174 <u r12_902 l0000000000401FB4
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> r13:<invalid> rdi:<invalid> ecx:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> r9d:<invalid> al:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401FD8:
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> r13:<invalid> rdi:<invalid> ecx:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> r9d:<invalid> al:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401E97:
	branch Mem179[rbx_174 + 0x0000000000000008:word32] != 0x00000001 l00000000004020A9
	branch Mem179[rbx_174 + 0x0000000000000008:word32] != 0x00000001 l00000000004020A9
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> rdx:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401EA3:
	word64 rbx_592 = rbx_174 + 0x000000000000000C
	branch rbx_592 >=u r12_172 l0000000000401DE2
	rbx_174 = rbx_592 + 0x000000000000000C
	branch rbx_592 + 0x000000000000000C >=u r12_172 l0000000000401DE2
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> rdx:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401EB0:
	word64 r13_600 = Mem179[0x0000000000404330:word64]
	r13_609 = r13_600
// DataOut: r10 r13 r8 rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000008 esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> rdx:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> al:<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401EC5:
	word64 rbx_664
	word64 r12_658
	word64 r13_609
	word32 edx_624 = (word32) Mem179[rbx_174 + 0x0000000000000008:byte]
	word64 rax_628 = DPB(rax, Mem179[rbx_174:word32], 0) + r13_609
	word64 rcx_632 = DPB(rcx_170, Mem179[rbx_174 + 0x0000000000000004:word32], 0) + r13_609
	word64 r8_641 = Mem179[r8_169:word64]
	branch edx_624 == 0x00000010 l0000000000402015
// DataOut: edx r10 r13 r8 rax rbp rcx
// DataOut (flags): CZ
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 rdx:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> rdi:<invalid> r10:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000402015:
	word64 rdx_830
	word32 edx_817 = (word32) Mem179[rcx_632:word16]
	word64 rdx_818 = DPB(rdx, edx_817, 0)
	rdx_830 = rdx_818
	branch (word16) edx_817 >= 0x0000 l000000000040202C
// DataOut: r10 r13 r8 rax rbp rcx rdx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdx:<invalid> rdi:<invalid> r10:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000402028_1:
	rdx_830 = rdx_818 | -65536
// DataOut: r10 r13 r8 rax rbp rcx rdx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdi:<invalid> r10:<invalid> rdx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l000000000040202C:
	word64 r8_833 = r8_641 + (rdx_830 - rax_628)
	Mem837[r13_609 - 0x0000000000000050:word64] = r8_833
	word64 rsi_842
	word64 rdi_843
	word64 r11_846
	word64 r15_849
	rax = fn0000000000401C60(rcx_632, rbp_139, r8_833, rdx_818 | -65536, qwLoc08, qwArg00, out rcx_170, out rbx_664, out rbp_139, out rsi_842, out rdi_843, out r8_169, out r10, out r11_846, out r12_658, out r13_609, out r15_849)
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdi:<invalid> r10:<invalid> rdx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401EE0:
	branch edx_624 <=u 0x00000010 l0000000000401FDD
// DataOut: edx r10 r13 r8 rax rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdx:<invalid> rdi:<invalid> r10:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(0) Local -0008(0)

l0000000000401FDD:
	branch edx_624 != 0x00000008 l0000000000402049
// DataOut: r10 r13 r8 rax rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdx:<invalid> rdi:<invalid> r10:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(0) Local -0008(0)

l0000000000401FE2:
	word64 rdx_791
	word32 edx_778 = (word32) Mem179[rcx_632:byte]
	word64 rdx_779 = DPB(rdx, edx_778, 0)
	rdx_791 = rdx_779
	branch (byte) edx_778 >= 0x00 l0000000000401FF8
// DataOut: r10 r13 r8 rax rbp rcx rdx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdx:<invalid> rdi:<invalid> r10:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401FF4_1:
	rdx_791 = rdx_779 | -256
// DataOut: r10 r13 r8 rax rbp rcx rdx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdi:<invalid> r10:<invalid> rdx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401FF8:
	word64 r8_794 = r8_641 + (rdx_791 - rax_628)
	Mem798[r13_609 - 0x0000000000000050:word64] = r8_794
	word64 rsi_803
	word64 rdi_804
	word64 r11_807
	word64 r15_810
	rax = fn0000000000401C60(rcx_632, rbp_139, r8_794, rdx_779 | -256, qwLoc08, qwArg00, out rcx_170, out rbx_664, out rbp_139, out rsi_803, out rdi_804, out r8_169, out r10, out r11_807, out r12_658, out r13_609, out r15_810)
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdi:<invalid> r10:<invalid> rdx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401EE6:
	branch edx_624 == 0x00000020 l000000000040205D
// DataOut: edx r10 r13 r8 rax rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdx:<invalid> rdi:<invalid> r10:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(0) Local -0008(0)

l0000000000401EEF:
	branch edx_624 != 0x00000040 l0000000000402049
// DataOut: r10 r13 r8 rax rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdx:<invalid> rdi:<invalid> r10:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(0) Local -0008(0)

l0000000000402049:
	Mem734[rbp_139 - 0x0000000000000050:word64] = 0x0000000000000000
	word64 rbx_736
	word64 rsi_738
	word64 rdi_739
	word64 r10_741
	word64 r11_742
	word64 r12_743
	word64 r15_745
	rax_628 = fn0000000000401BF0(rbp_139, r8_641, r10, qwArg10, qwArg18, qwArg20, out rcx_632, out rbx_736, out rbp_139, out rsi_738, out rdi_739, out r8_641, out r10_741, out r11_742, out r12_743, out r13_609, out r15_745)
// DataOut: r13 r8 rax rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdx:<invalid> rdi:<invalid> r10:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l000000000040205D:
	word32 edx_689 = Mem179[rcx_632:word32]
	word64 rdx_690 = DPB(rdx, edx_689, 0)
	branch edx_689 >= 0x00000000 l000000000040206E
// DataOut: r10 r13 r8 rax rbp rcx rdx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> r9:<invalid> rsi:<invalid> rdx:<invalid> rdi:<invalid> ebx:<invalid> al:<invalid> r10:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l000000000040206A_1:
// DataOut: r10 r13 r8 rax rbp rcx rdx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdi:<invalid> r10:<invalid> r9:<invalid> rsi:<invalid> rdx:<invalid> ebx:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l000000000040206E:
	word64 r8_705 = r8_641 + (rdx_690 - rax_628)
	Mem709[r13_609 - 0x0000000000000050:word64] = r8_705
	word64 rsi_716
	word64 rdi_717
	word64 r11_720
	word64 r15_723
	rax = fn0000000000401C60(rcx_632, rbp_139, r8_705, rdx_690, qwLoc08, qwArg00, out rcx_170, out rbx_664, out rbp_139, out rsi_716, out rdi_717, out r8_169, out r10, out r11_720, out r12_658, out r13_609, out r15_723)
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdi:<invalid> r10:<invalid> rdx:<invalid> r9:<invalid> rsi:<invalid> ebx:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401EF8:
	word64 r8_757 = r8_641 + (Mem179[rcx_632:word64] - rax_628)
	Mem761[r13_609 - 0x0000000000000050:word64] = r8_757
	word64 rsi_766
	word64 rdi_767
	word64 r11_770
	word64 r15_773
	rax = fn0000000000401C60(rcx_632, rbp_139, r8_757, r10, qwLoc08, qwArg00, out rcx_170, out rbx_664, out rbp_139, out rsi_766, out rdi_767, out r8_169, out r10, out r11_770, out r12_658, out r13_609, out r15_773)
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdx:<invalid> rdi:<invalid> r10:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401F16:
	rdx = r13_600 - 0x0000000000000050
	rbx_174 = rbx_664 + 0x000000000000000C
	branch rbx_174 <u r12_658 l0000000000401EC5
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdi:<invalid> r10:<invalid> rdx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401F1F:
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 eax:<invalid> rcx:<invalid> r8:<invalid> rdi:<invalid> r10:<invalid> rdx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> al:<invalid> -88(fp):0x0000000000000000 -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401F20:
	word32 eax_275 = Mem179[0x0000000000407624:word32]
	rax = DPB(rax, eax_275, 0) (alias)
	word64 rbx_280 = DPB(rbx_174, 0x00000000, 0)
	branch eax_275 <= 0x00000000 l0000000000401DE2
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> r13:<invalid> rdi:<invalid> ecx:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> r9d:<invalid> al:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401F30:
	word64 r12_283 = Mem179[0x00000000004082CC:word64]
	*r12Out = r12_283
	word32 r12d_284 = (word32) r12_283
	word64 r13_286
	*r13Out = Mem179[0x00000000004082C4:word64]
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> r13:<invalid> rdi:<invalid> ecx:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> r9d:<invalid> al:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401F57:
	branch Mem179[rbx_280 + Mem179[0x0000000000407628:word64]:word32] == 0x00000000 l0000000000401F44
	rax = rbx_280 + Mem179[0x0000000000407628:word64]
	word32 edx_328 = Mem179[rax:word32]
	branch edx_328 == 0x00000000 l0000000000401F44
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> r13:<invalid> rdi:<invalid> ecx:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> r14:<invalid> r9d:<invalid> al:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401F67:
	word64 rsp_377
	word64 rbp_378
	word64 rdi_379
	word64 rsi_380
	word64 rbx_381
	byte SCZO_382
	word32 esi_383
	byte SZO_384
	byte C_385
	byte Z_386
	word16 ax_387
	byte al_388
	word64 rax_389
	word64 r12_390
	word32 r11d_391
	word64 r11_392
	word32 r10d_393
	word32 r9d_394
	word32 edx_395
	word64 r13_396
	word64 r14_397
	word64 r15_398
	word32 ecx_399
	word32 eax_400
	word64 rcx_401
	word64 r8_402
	byte CZ_403
	word64 rdx_404
	word32 ebx_405
	word32 r12d_406
	word64 r9_407
	word32 r8d_408
	word32 r13d_409
	byte SO_410
	word64 r10_411
	byte S_412
	byte dl_413
	word16 dx_414
	call r12d_284 (retsize: 4; depth: 4)
		uses: al_326,ax_325,C_331,CZ_297,dl_289,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_12,dwLoc14_15,dwLoc18_17,dwLoc1C_19,dwLoc20_22,dx_288,eax_374,ebx_309,ecx_300,edx_328,esi_314,qwLoc90,r10_291,r10d_305,r11_306,r11d_307,r12_308,r12d_295,r13_303,r13d_292,r14_302,r15_301,r8_298,r8d_293,r9_294,r9d_304,rax_375,rbp_316,rbx_312,rcx_373,rdi_315,rdx_376,rsi_313,rsp_317,S_290,SCZO_310,SO_311,SZO_329,Z_330
		defs: al_388,ax_387,C_385,CZ_403,dl_413,dx_414,eax_400,ebx_405,ecx_399,edx_395,esi_383,r10_411,r10d_393,r11_392,r11d_391,r12_390,r12d_406,r13_396,r13d_409,r14_397,r15_398,r8_402,r8d_408,r9_407,r9d_394,rax_389,rbp_378,rbx_381,rcx_401,rdi_379,rdx_404,rsi_380,rsp_377,S_412,SCZO_382,SO_410,SZO_384,Z_386
	branch rax_389 == 0x0000000000000000 l000000000040208B
	word64 rsp_422
	word64 rbp_423
	word64 rdi_424
	word64 rsi_425
	word64 rbx_426
	byte SCZO_427
	word32 esi_428
	byte SZO_429
	byte C_430
	byte Z_431
	word16 ax_432
	byte al_433
	word64 rax_434
	word64 r12_435
	word32 r11d_436
	word64 r11_437
	word32 r10d_438
	word32 r9d_439
	word32 edx_440
	word64 r13_441
	word64 r14_442
	word64 r15_443
	word32 ecx_444
	word32 eax_445
	word64 rcx_446
	word64 r8_447
	byte CZ_448
	word64 rdx_449
	word32 ebx_450
	word32 r12d_451
	word64 r9_452
	word32 r8d_453
	word32 r13d_454
	byte SO_455
	word64 r10_456
	byte S_457
	byte dl_458
	word16 dx_459
	call r12d_406 (retsize: 4; depth: 4)
		uses: al_388,ax_387,C_417,CZ_403,dl_413,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_12,dwLoc14_15,dwLoc18_17,dwLoc1C_19,dwLoc20_22,dx_414,eax_419,ebx_405,ecx_399,edx_395,esi_383,qwLoc90,r10_411,r10d_393,r11_392,r11d_391,r12_390,r12d_406,r13_396,r13d_409,r14_397,r15_398,r8_402,r8d_408,r9_407,r9d_394,rax_420,rbp_378,rbx_381,rcx_418,rdi_379,rdx_421,rsi_380,rsp_377,S_412,SCZO_382,SO_410,SZO_415,Z_416
		defs: al_433,ax_432,C_430,CZ_448,dl_458,dx_459,eax_445,ebx_450,ecx_444,edx_440,esi_428,r10_456,r10d_438,r11_437,r11d_436,r12_435,r12d_451,r13_441,r13d_454,r14_442,r15_443,r8_447,r8d_453,r9_452,r9d_439,rax_434,rbp_423,rbx_426,rcx_446,rdi_424,rdx_449,rsi_425,rsp_422,S_457,SCZO_427,SO_455,SZO_429,Z_431
	branch rax_434 == 0x0000000000000000 l000000000040208B
// DataOut: esi r10 r11 r12 r13 r15 rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> r13:<invalid> rdi:<invalid> ecx:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> r14:<invalid> r9d:<invalid> al:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l000000000040208B:
	word64 rcx_561
	word64 rbx_562
	word64 rsi_564
	word64 rdi_565
	word64 r11_568
	word64 r12_569
	word64 r13_570
	word64 r15_571
	fn0000000000401BF0(rbp_423, Mem179[r11_437 + 0x0000000000000008:word64], r10_456, qwArg10, qwArg18, qwArg20, out rcx_561, out rbx_562, out rbp_139, out rsi_564, out rdi_565, out r8_169, out r10, out r11_568, out r12_569, out r13_570, out r15_571)
// DataOut: r10 r8 rbp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> r13:<invalid> rdi:<invalid> ecx:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> r14:<invalid> r9d:<invalid> al:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l00000000004020A9:
	word64 rcx_217
	word64 rbx_218
	word64 rbp_219
	word64 rsi_220
	word64 rdi_221
	word64 r8_222
	word64 r10_223
	word64 r11_224
	word64 r12_225
	word64 r13_226
	word64 r15_227
	word64 rax_228 = fn0000000000401BF0(rbp_139, r8_169, r10, qwArg10, qwArg18, qwArg20, out rcx_217, out rbx_218, out rbp_219, out rsi_220, out rdi_221, out r8_222, out r10_223, out r11_224, out r12_225, out r13_226, out r15_227)
	word32 eax_230 = Mem179[rcx_217:word32]
	word64 rax_233 = DPB(rax_228, eax_230, 0)
	branch eax_230 >u 0xC0000091 l0000000000402130
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> rdx:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> al:<invalid> r13:<invalid> rdi:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp

l00000000004020CB_thunk_fn0000000000402130:
	word64 rcx_241
	return fn0000000000402130(rax_233, out rcx_241)
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> rcx:<invalid> r9:<invalid> eax:<invalid> rsi:<invalid> rdx:<invalid> r8:<invalid> rdi:<invalid> ebx:<invalid> r13:<invalid> al:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp

l00000000004020CB_thunk_fn00000000004020CD:
	word64 rcx_236
	return fn00000000004020CD(rax_233, out rcx_236)
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r8d:<invalid> ecx:<invalid> r11d:<invalid> r10d:<invalid> r9d:<invalid> edx:<invalid> rcx:<invalid> r9:<invalid> eax:<invalid> rsi:<invalid> rdx:<invalid> r8:<invalid> rdi:<invalid> ebx:<invalid> r13:<invalid> al:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp

l0000000000401F80:
	word64 rsp_468
	word64 rbp_469
	word64 rdi_470
	word64 rsi_471
	word64 rbx_472
	byte SCZO_473
	word32 esi_474
	byte SZO_475
	byte C_476
	byte Z_477
	word16 ax_478
	byte al_479
	word64 rax_480
	word64 r12_481
	word32 r11d_482
	word64 r11_483
	word32 r10d_484
	word32 r9d_485
	word32 edx_486
	word64 r13_487
	word64 r14_488
	word64 r15_489
	word32 ecx_490
	word32 eax_491
	word64 rcx_492
	word64 r8_493
	byte CZ_494
	word64 rdx_495
	word32 ebx_496
	word32 r12d_497
	word64 r9_498
	word32 r8d_499
	word32 r13d_500
	byte SO_501
	word64 r10_502
	byte S_503
	byte dl_504
	word16 dx_505
	call r13d_454 (retsize: 4; depth: 4)
		uses: al_433,ax_432,C_462,CZ_448,dl_458,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_12,dwLoc14_15,dwLoc18_17,dwLoc1C_19,dwLoc20_22,dx_459,eax_445,ebx_450,ecx_444,edx_440,esi_428,qwLoc90,r10_456,r10d_438,r11_437,r11d_436,r12_435,r12d_451,r13_441,r13d_454,r14_442,r15_443,r8_447,r8d_467,r9_464,r9d_439,rax_463,rbp_423,rbx_426,rcx_466,rdi_424,rdx_465,rsi_425,rsp_422,S_457,SCZO_427,SO_455,SZO_460,Z_461
		defs: al_479,ax_478,C_476,CZ_494,dl_504,dx_505,eax_491,ebx_496,ecx_490,edx_486,esi_474,r10_502,r10d_484,r11_483,r11d_482,r12_481,r12d_497,r13_487,r13d_500,r14_488,r15_489,r8_493,r8d_499,r9_498,r9d_485,rax_480,rbp_469,rbx_472,rcx_492,rdi_470,rdx_495,rsi_471,rsp_468,S_503,SCZO_473,SO_501,SZO_475,Z_477
	word64 rsp_516
	word64 rdi_518
	word64 rsi_519
	byte SCZO_521
	byte SZO_523
	byte C_524
	byte Z_525
	word16 ax_526
	byte al_527
	word64 r12_529
	word32 r11d_530
	word64 r11_531
	word32 r10d_532
	word32 r9d_533
	word32 edx_534
	word64 r13_535
	word64 r14_536
	word64 r15_537
	word32 ecx_538
	word32 eax_539
	word64 rcx_540
	word64 r8_541
	byte CZ_542
	word64 rdx_543
	word32 ebx_544
	word64 r9_546
	word32 r8d_547
	word32 r13d_548
	byte SO_549
	word64 r10_550
	byte S_551
	byte dl_552
	word16 dx_553
	call r13d_500 (retsize: 4; depth: 4)
		uses: al_508,ax_507,C_476,CZ_494,dl_504,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_12,dwLoc14_15,dwLoc18_17,dwLoc1C_19,dwLoc20_22,dx_505,eax_509,ebx_496,ecx_513,edx_486,esi_474,qwLoc90,r10_502,r10d_484,r11_483,r11d_482,r12_481,r12d_497,r13_487,r13d_500,r14_488,r15_489,r8_515,r8d_514,r9_510,r9d_485,rax_506,rbp_469,rbx_472,rcx_512,rdi_470,rdx_511,rsi_471,rsp_468,S_503,SCZO_473,SO_501,SZO_475,Z_477
		defs: al_527,ax_526,C_524,CZ_542,dl_552,dx_553,eax_539,ebx_544,ecx_538,edx_534,esi_522,r10_550,r10d_532,r11_531,r11d_530,r12_529,r12d_545,r13_535,r13d_548,r14_536,r15_537,r8_541,r8d_547,r9_546,r9d_533,rax_528,rbp_517,rbx_520,rcx_540,rdi_518,rdx_543,rsi_519,rsp_516,S_551,SCZO_521,SO_549,SZO_523,Z_525
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> r13:<invalid> rdi:<invalid> ecx:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> r14:<invalid> r9d:<invalid> al:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401F44:
	esi_26 = esi_26 + 0x00000001
	rbx_280 = rbx_280 + 0x0000000000000018
	branch esi_26 >= Mem179[0x0000000000407624:word32] l0000000000401DE2
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> r11d:<invalid> r8d:<invalid> r10d:<invalid> r13:<invalid> rdi:<invalid> ecx:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> r14:<invalid> r9d:<invalid> al:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: Local -0004(64) Local -0008(64)

l0000000000401DE2:
	word64 rsp_147 = Mem0[rbp_139:word64]
	word64 rsi_151
	*rsiOut = Mem0[rsp_147 + 0x0000000000000010:word64]
	word64 rdi_154
	*rdiOut = Mem0[rsp_147 + 0x0000000000000018:word64]
	word64 rbp_156
	*rbpOut = Mem0[rsp_147 + 0x0000000000000020:word64]
	return rax
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rbx:<invalid> rdx:<invalid> r8d:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> r11d:<invalid> r10d:<invalid> ecx:<invalid> r9d:<invalid> edx:<invalid> al:<invalid> r13:<invalid> rdi:<invalid> rsi:<invalid> ebx:<invalid> r9:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp

fn0000000000401DC0_exit:
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> esi:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> ax:<invalid> rax:<invalid> r12:<invalid> rdx:<invalid> r8d:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> r11d:<invalid> r10d:<invalid> ecx:<invalid> r9d:<invalid> edx:<invalid> r9:<invalid> al:<invalid> ebx:<invalid> r13:<invalid> r14:<invalid> r15:0x0000000000000000 r10:<invalid> -88(fp):<invalid> -32(fp):rbx -28(fp):rsi -24(fp):rdi -20(fp):fp - 0x0000000000000010 -16(fp):rbp -12(fp):rsi -8(fp):rdi -4(fp):rbp



void fn00000000004020C0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esp rax rcx rdx rsp sp spl
// Preserved:
fn00000000004020C0_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004020C0:
	word32 eax_5 = Mem0[rcx:word32]
	word64 rax_7 = DPB(rax, eax_5, 0)
	branch eax_5 >u 0xC0000091 l00000000004020CB_thunk_fn0000000000402130
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004020CB_thunk_fn0000000000402130:
	word64 rcx_18
	fn0000000000402130(rax_7, out rcx_18)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 eax:<invalid>

l00000000004020CB_thunk_fn00000000004020CD:
	word64 rcx_13
	word64 rax_14 = fn00000000004020CD(rax_7, out rcx_13)
	return
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 eax:<invalid>

l00000000004020CB_thunk_fn00000000004020CD:
	word64 rcx_16
	fn00000000004020CD(rax_14, out rcx_16)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> rdx:<invalid>

fn00000000004020C0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> rdx:<invalid>



word64 fn00000000004020CD(word64 rax, ptr64 & rcxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax rax
// LiveOut: eax rax rcx rsp
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esp rax rcx rdx rsp sp spl
// Preserved:
fn00000000004020CD_entry:
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004020CD:
	branch eax >=u 0xC000008D l000000000040214F
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004020D2_thunk_fn0000000000402130:
	word64 rcx_114
	return fn0000000000402130(rax, out rcx_114)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004020D4:
	branch eax == 0xC0000008 l00000000004021EC
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): CZ
// SymbolicIn: rsp:v3

l00000000004020D9_thunk_fn0000000000402130:
	word64 rcx_111
	return fn0000000000402130(rax, out rcx_111)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004020DF:
	branch eax >u 0xC0000008 l00000000004021C0
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004021C0:
	branch eax == 0xC000001D l000000000040218E
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004021C5_thunk_fn0000000000402130:
	word64 rcx_108
	return fn0000000000402130(rax, out rcx_108)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004021C7:
	branch eax == 0xC000008C l00000000004021EC
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004021CC_thunk_fn0000000000402130:
	word64 rcx_105
	return fn0000000000402130(rax, out rcx_105)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004021CC_thunk_fn0000000000402130:
	word64 rcx_102
	return fn0000000000402130(rax, out rcx_102)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004020E5:
	branch eax == 0x80000002 l00000000004021EC
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004020EA_thunk_fn0000000000402130:
	word64 rcx_95
	return fn0000000000402130(rax, out rcx_95)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004020F0:
	branch eax != 0xC0000005 l00000000004021CE
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004020F5_thunk_fn0000000000402130:
	word64 rcx_90
	return fn0000000000402130(rax, out rcx_90)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004020FB:
	word64 rsp_32
	word32 eax_33
	byte SCZO_34
	byte C_35
	byte Z_36
	byte CZ_37
	word32 edx_38
	byte SZO_39
	word32 ecx_40
	word64 rax_41
	word64 rcx_42
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_28,CZ_21,eax,ecx_29,edx_26,rax,rcx,rsp_1,SCZO_24,SZO_27,Z_25
		defs: C_35,CZ_37,eax_33,ecx_40,edx_38,rax_41,rcx_42,rsp_32,SCZO_34,SZO_39,Z_36
	branch rax_41 == 0x0000000000000001 l0000000000402242
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:v3

l0000000000402242:
	word64 rsp_72
	word32 eax_73
	byte SCZO_74
	byte C_75
	byte Z_76
	byte CZ_77
	word32 edx_78
	byte SZO_79
	word32 ecx_80
	word64 rax_81
	word64 rcx_82
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_35,CZ_37,eax_33,ecx_71,edx_70,rax_41,rcx_42,rsp_32,SCZO_43,SZO_39,Z_44
		defs: C_75,CZ_77,eax_73,ecx_80,edx_78,rax_81,rcx_82,rsp_72,SCZO_74,SZO_79,Z_76
	word64 rax_84 = DPB(rax_81, 0x00000000, 0)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid>

l0000000000402251_thunk_fn0000000000402130:
	word64 rcx_87
	return fn0000000000402130(rax_84, out rcx_87)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid> eax:0x00000000

l0000000000402111:
	branch rax_41 == 0x0000000000000000 l0000000000402222
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid>

l0000000000402114_thunk_fn0000000000402130:
	word64 rcx_67
	return fn0000000000402130(rax_41, out rcx_67)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid>

l000000000040211A:
	word64 rsp_49
	word32 eax_50
	byte SCZO_51
	byte C_52
	byte Z_53
	byte CZ_54
	word32 edx_55
	byte SZO_56
	word32 ecx_57
	word64 rax_58
	word64 rcx_59
	call eax_33 (retsize: 4; depth: 4)
		uses: C_47,CZ_37,eax_33,ecx_48,edx_38,rax_41,rcx_42,rsp_32,SCZO_43,SZO_45,Z_46
		defs: C_52,CZ_54,eax_50,ecx_57,edx_55,rax_58,rcx_59,rsp_49,SCZO_51,SZO_56,Z_53
	word64 rax_61 = DPB(rax_58, 0x00000000, 0)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid>

l0000000000402121_thunk_fn0000000000402130:
	word64 rcx_64
	return fn0000000000402130(rax_61, out rcx_64)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid> eax:0x00000000

fn00000000004020CD_exit:
// DataOut: eax rax rcx rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> rdx:<invalid>



word64 fn0000000000402130(word64 rax, ptr64 & rcxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax rax
// LiveOut: eax rax rcx rsp
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esp rax rcx rdx rsp sp spl
// Preserved:
fn0000000000402130_entry:
	*rcxOut = rcx
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: v3(64)

l0000000000402130:
	word64 rax_146
	word32 edx_152
	word64 rdx_151
	word64 rax_245
	branch eax == 0xC0000094 l00000000004021F3
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): CZ
// SymbolicIn: rsp:fp

l00000000004021F3:
	word64 rsp_276
	word32 eax_277
	byte SCZO_278
	byte Z_279
	byte CZ_280
	word32 edx_281
	byte SZO_282
	byte C_283
	word32 ecx_284
	word64 rdx_286
	word64 rcx_287
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_273,CZ_6,eax,ecx_274,edx_271,rax,rcx_275,rdx,rsp_1,SCZO_3,SZO_272,Z_4
		defs: C_283,CZ_280,eax_277,ecx_284,edx_281,rax_285,rcx_287,rdx_286,rsp_276,SCZO_278,SZO_282,Z_279
	rdx_151 = rax_146
	edx_152 = (word32) rax_146 (alias)
	branch rax_146 != 0x0000000000000001 l0000000000402164
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rcx rdi rdx rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l000000000040220C:
	word64 rsp_295
	word32 eax_296
	byte SCZO_297
	byte Z_298
	byte CZ_299
	word32 edx_300
	byte SZO_301
	byte C_302
	word32 ecx_303
	word64 rax_304
	word64 rdx_305
	word64 rcx_306
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_283,CZ_280,eax_277,ecx_293,edx_292,rax_285,rcx_294,rdx_290,rsp_276,SCZO_288,SZO_282,Z_289
		defs: C_302,CZ_299,eax_296,ecx_303,edx_300,rax_304,rcx_306,rdx_305,rsp_295,SCZO_297,SZO_301,Z_298
	rax_245 = DPB(rax_304, 0x00000000, 0) (alias)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid> rdx:rax

l000000000040213B:
	branch eax >u 0xC0000094 l0000000000402180
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l0000000000402180:
	branch eax == 0xC0000095 l00000000004021EC
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l0000000000402187:
	branch eax != 0xC0000096 l00000000004021CE
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l000000000040218E:
	word64 rsp_176
	word32 eax_177
	byte SCZO_178
	byte Z_179
	byte CZ_180
	word32 edx_181
	byte SZO_182
	byte C_183
	word32 ecx_184
	word64 rax_185
	word64 rdx_186
	word64 rcx_187
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_174,CZ_6,eax,ecx_175,edx_172,rax,rcx,rdx,rsp_1,SCZO_170,SZO_173,Z_171
		defs: C_183,CZ_180,eax_177,ecx_184,edx_181,rax_185,rcx_187,rdx_186,rsp_176,SCZO_178,SZO_182,Z_179
	branch rax_185 == 0x0000000000000001 l000000000040222C
	word64 rsp_195
	word32 eax_196
	byte SCZO_197
	byte Z_198
	byte CZ_199
	word32 edx_200
	byte SZO_201
	byte C_202
	word32 ecx_203
	word64 rax_204
	word64 rdx_205
	word64 rcx_206
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_192,CZ_180,eax_177,ecx_193,edx_190,rax_185,rcx_194,rdx_186,rsp_176,SCZO_188,SZO_191,Z_189
		defs: C_202,CZ_199,eax_196,ecx_203,edx_200,rax_204,rcx_206,rdx_205,rsp_195,SCZO_197,SZO_201,Z_198
	branch rax_204 == 0x0000000000000001 l000000000040222C
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l000000000040222C:
	word64 rsp_255
	word32 eax_256
	byte SCZO_257
	byte Z_258
	byte CZ_259
	word32 edx_260
	byte SZO_261
	byte C_262
	word32 ecx_263
	word64 rax_264
	word64 rdx_265
	word64 rcx_266
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_202,CZ_199,eax_196,ecx_253,edx_252,rax_204,rcx_254,rdx_205,rsp_195,SCZO_207,SZO_201,Z_208
		defs: C_262,CZ_259,eax_256,ecx_263,edx_260,rax_264,rcx_266,rdx_265,rsp_255,SCZO_257,SZO_261,Z_258
	rax_245 = DPB(rax_264, 0x00000000, 0) (alias)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid>

l00000000004021A4:
	branch rax_204 == 0x0000000000000000 l0000000000402222
	branch rax_204 == 0x0000000000000000 l0000000000402222
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid>

l0000000000402222:
	return DPB(rax_204, 0x00000004, 0)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid>

l00000000004021A9:
	word64 rsp_215
	word32 eax_216
	byte SCZO_217
	byte Z_218
	byte CZ_219
	word32 edx_220
	byte SZO_221
	byte C_222
	word32 ecx_223
	word64 rax_224
	word64 rdx_225
	word64 rcx_226
	call eax_196 (retsize: 4; depth: 4)
		uses: C_213,CZ_199,eax_196,ecx_214,edx_200,rax_204,rcx_206,rdx_205,rsp_195,SCZO_207,SZO_211,Z_212
		defs: C_222,CZ_219,eax_216,ecx_223,edx_220,rax_224,rcx_226,rdx_225,rsp_215,SCZO_217,SZO_221,Z_218
	word64 rsp_232
	word32 eax_233
	byte SCZO_234
	byte Z_235
	byte CZ_236
	word32 edx_237
	byte SZO_238
	byte C_239
	word32 ecx_240
	word64 rax_241
	word64 rdx_242
	word64 rcx_243
	call 0x00000000 (retsize: 4; depth: 4)
		uses: C_229,CZ_219,eax_227,ecx_230,edx_220,rax_224,rcx_231,rdx_225,rsp_215,SCZO_217,SZO_228,Z_218
		defs: C_239,CZ_236,eax_233,ecx_240,edx_237,rax_241,rcx_243,rdx_242,rsp_232,SCZO_234,SZO_238,Z_235
	rax_245 = DPB(rax_241, 0x00000000, 0) (alias)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid>

l000000000040213D:
	branch eax == 0xC0000092 l00000000004021EC
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l0000000000402148:
	branch eax != 0xC0000093 l00000000004021CE
// DataOut: esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004021CE:
	return rax
	return DPB(rax, 0x00000001, 0)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l000000000040214F:
	word64 rsp_117
	word32 eax_118
	byte SCZO_119
	byte Z_120
	byte CZ_121
	word32 edx_122
	byte SZO_123
	byte C_124
	word32 ecx_125
	word64 rax_126
	word64 rdx_127
	word64 rcx_128
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_115,CZ_6,eax,ecx_116,edx_113,rax,rcx,rdx,rsp_1,SCZO_111,SZO_114,Z_112
		defs: C_124,CZ_121,eax_118,ecx_125,edx_122,rax_126,rcx_128,rdx_127,rsp_117,SCZO_119,SZO_123,Z_120
	branch rax_126 == 0x0000000000000001 l00000000004021D8
	word64 rsp_137
	word32 eax_138
	byte SCZO_139
	byte Z_140
	byte CZ_141
	word32 edx_142
	byte SZO_143
	byte C_144
	word32 ecx_145
	word64 rdx_147
	word64 rcx_148
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_134,CZ_121,eax_118,ecx_135,edx_132,rax_126,rcx_136,rdx_131,rsp_117,SCZO_129,SZO_133,Z_130
		defs: C_144,CZ_141,eax_138,ecx_145,edx_142,rax_146,rcx_148,rdx_147,rsp_137,SCZO_139,SZO_143,Z_140
	rdx_151 = rax_146
	edx_152 = (word32) rax_146 (alias)
	branch rax_146 == 0x0000000000000001 l00000000004021D8
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rcx rdi rdx rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l00000000004021D8:
	word64 rsp_156
	word32 eax_157
	byte SCZO_158
	byte Z_159
	byte CZ_160
	word32 edx_161
	byte SZO_162
	byte C_163
	word32 ecx_164
	word64 rdx_166
	word64 rcx_167
	call msvcrt.dll!signal (retsize: 8; depth: 8)
		uses: C_144,CZ_141,eax_138,ecx_154,edx_153,rax_146,rcx_155,rdx_151,rsp_137,SCZO_149,SZO_143,Z_150
		defs: C_163,CZ_160,eax_157,ecx_164,edx_161,rax_165,rcx_167,rdx_166,rsp_156,SCZO_158,SZO_162,Z_159
	fn0000000000401BC0()
// DataOut: esi r10 r11 r12 r13 r15 r8 rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid> rdx:rax

l00000000004021EC:
	return DPB(rax, 0x00000000, 0)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3

l0000000000402164:
	branch rdx_151 == 0x0000000000000000 l0000000000402123
	rax_245 = DPB(rax_146, 0x00000001, 0) (alias)
	branch rdx_151 == 0x0000000000000000 l0000000000402123
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid> rdx:rax

l0000000000402123:
	return rax_245
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid> rdx:<invalid> eax:<invalid>

l000000000040216E:
	word64 rsp_50
	word32 eax_51
	byte SCZO_52
	byte Z_53
	byte CZ_54
	word32 edx_55
	byte SZO_56
	byte C_57
	word32 ecx_58
	word64 rax_59
	word64 rdx_60
	word64 rcx_61
	call edx_152 (retsize: 4; depth: 4)
		uses: C_46,CZ_38,eax_47,ecx_49,edx_37,rax_48,rcx_34,rdx_35,rsp_40,SCZO_41,SZO_44,Z_45
		defs: C_57,CZ_54,eax_51,ecx_58,edx_55,rax_59,rcx_61,rdx_60,rsp_50,SCZO_52,SZO_56,Z_53
	word64 rax_63 = DPB(rax_59, 0x00000000, 0)
	return rax_63
	word64 rsp_68
	word32 eax_69
	byte SCZO_70
	byte Z_71
	byte CZ_72
	word32 edx_73
	byte SZO_74
	byte C_75
	word32 ecx_76
	word64 rax_77
	word64 rdx_78
	word64 rcx_79
	call edx_55 (retsize: 4; depth: 4)
		uses: C_57,CZ_54,eax_62,ecx_66,edx_55,rax_63,rcx_67,rdx_60,rsp_64,SCZO_65,SZO_56,Z_53
		defs: C_75,CZ_72,eax_69,ecx_76,edx_73,rax_77,rcx_79,rdx_78,rsp_68,SCZO_70,SZO_74,Z_71
	return DPB(rax_77, 0x00000000, 0)
// DataOut: eax esi r10 r11 r12 r13 r15 r8 rax rbp rcx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:v3 edx:<invalid> ecx:<invalid> rdx:rax eax:0x00000001

fn0000000000402130_exit:
// DataOut: eax rax rcx rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> rdx:<invalid>



void fn0000000000402260(word64 rax, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 rax rbp rbx rdi rsi
// LiveOut: rsp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp r12 r12b r12d r12w r8 r8b r8d r8w r9 r9b r9d r9w rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: rbx
fn0000000000402260_entry:
// DataOut: r15 rax rbp rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402260:
	word64 r8_20
	word64 rax_21 = fn0000000000402A10(rax, out r8_20)
	branch Mem0[0x0000000000407648:word32] != 0x00000000 l00000000004022A1
// DataOut: ebp r15 rbp rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: Local -0004(0) Local -0008(0) Local -000C(0) Local -0010(0) Local -0014(0)

l000000000040227C:
	branch rax_21 == 0x0000000000000000 l00000000004022A1
// DataOut: ebp r15 rbp rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbp:<invalid> eax:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp
// LocalsOut: Local -0004(0) Local -0008(0) Local -000C(0) Local -0010(0) Local -0014(0)

l0000000000402281:
	Mem67[0x0000000000407648:word32] = 0x00000001
	word64 rax_72 = fn0000000000402830(qwLoc38, qwLoc10, qwLoc08, qwArg00)
	branch rax_72 == 0x0000000000000000 l00000000004022B0
// DataOut: ebp r15 rax rbp rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbp:<invalid> eax:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l00000000004022B0:
	word64 rbx_133 = 0x0000000000407760
	word64 rcx_101 = DPB(0x00000000004042C0, 0x00000030, 0)
	word64 rsi_105 = DPB(rsi, 0x00000000, 0)
	word64 rdi_108 = 0x0000000000407760
// DataOut: ebp r12 r15 rax rbp rbx rcx rdi rdx rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> rbx:<invalid> rdi:<invalid> rax:<invalid> rdx:<invalid> r8:<invalid> edx:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l00000000004022CF:
	branch rcx_101 == 0x0000000000000000 l00000000004022D2
// DataOut: ebp r12 r15 rax rbp rbx rcx rdi rdx rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:0000000000407760 rdx:0000000000407660 ecx:<invalid> r12:00000000004020C0 esi:0x00000000 rdi:<invalid> rsi:<invalid> ebx:<invalid> rax:<invalid> r8:<invalid> edx:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l00000000004022D2:
	word64 r12_119 = 0x00000000004020C0 - rax_21
	word64 rcx_117 = DPB(rcx_101, 0x00000020, 0)
	word64 rdi_118 = 0x0000000000407660
	word32 r12d_120 = (word32) r12_119
// DataOut: ebp r12d r15 rax rbx rcx rdi rdx rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:0000000000407760 rdx:0000000000407660 ecx:<invalid> r12:00000000004020C0 esi:0x00000000 rdi:<invalid> rsi:<invalid> ebx:<invalid> rax:<invalid> r8:<invalid> edx:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l00000000004022DD:
	branch rcx_117 == 0x0000000000000000 l00000000004022E0
// DataOut: ebp r12d r15 rax rbx rcx rdi rdx rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:0000000000407760 rdx:0000000000407660 ecx:<invalid> r12:<invalid> esi:0x00000000 rdi:<invalid> rsi:<invalid> ebx:<invalid> rax:<invalid> r8:<invalid> edx:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l00000000004022E0:
	word64 rdi_129 = 0x0000000000407660
// DataOut: ebp edi r12d r15 rbx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:0000000000407760 rdx:0000000000407660 ecx:<invalid> r12:<invalid> esi:0x00000000 rdi:<invalid> rsi:<invalid> ebx:<invalid> rax:<invalid> r8:<invalid> edx:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l0000000000402313:
	branch fn0000000000402990(rsi_215) != 0x0000000000000000 l00000000004022E5
	word64 rax_142 = fn0000000000402990(rsi_215)
	branch rax_142 != 0x0000000000000000 l00000000004022E5
// DataOut: ebp edi r12d r15 rax rbx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rdx:<invalid> ecx:<invalid> r12:<invalid> esi:<invalid> rdi:<invalid> rsi:<invalid> ebx:<invalid> rax:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l00000000004022E5:
	Mem197[rdi_216:byte] = 0x09
	Mem198[r15 + 0x0000000000000004:word32] = r12d_120
	word32 edx_201 = Mem198[rax_142 + 0x000000000000000C:word32]
	rbx_133 = rbx_214 + 0x000000000000000C
	Mem203[rbx_133 - 0x000000000000000C:word32] = edx_201
	word32 edx_204 = edx_201 + Mem203[rax_142 + 0x0000000000000008:word32]
	Mem209[rbx_133 - 0x0000000000000004:word32] = (word32) (rdi_216 - rax_21)
	Mem210[rbx_133 - 0x0000000000000008:word32] = edx_204
	rsi_105 = rsi_215 + 0x0000000000000001
	rdi_129 = rdi_216 + 0x0000000000000008
	word64 rbx_214 = rbx_133
	word64 rsi_215 = rsi_105
	word64 rdi_216 = rdi_129
	branch rsi_105 == 0x0000000000000020 l0000000000402345
// DataOut: ebp edi r12d r15 rbx rdi rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rdx:<invalid> ecx:<invalid> r12:<invalid> esi:<invalid> rdi:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> rax:<invalid> al:<invalid> rsi:<invalid> ebx:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l0000000000402345:
// DataOut: r15 rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rdx:<invalid> ecx:<invalid> r12:<invalid> esi:<invalid> rdi:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> rax:<invalid> al:<invalid> rsi:<invalid> ebx:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l0000000000402320:
	branch rsi_215 == 0x0000000000000000 l000000000040229C
	branch rsi_215 == 0x0000000000000000 l000000000040229C
// DataOut: r15 rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rdx:<invalid> ecx:<invalid> r12:<invalid> esi:<invalid> rdi:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> rax:<invalid> al:<invalid> rsi:<invalid> ebx:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l0000000000402329:
// DataOut: r15 rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rdx:<invalid> ecx:<invalid> r12:<invalid> esi:<invalid> rdi:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> rax:<invalid> al:<invalid> rsi:<invalid> ebx:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l0000000000402330:
	word64 rsp_149
	word64 rbp_150
	word64 rdi_151
	word64 rsi_152
	word64 rbx_153
	byte SCZO_154
	word64 rax_155
	word32 eax_156
	byte SZO_157
	byte C_158
	byte Z_159
	word64 rcx_160
	word64 rdx_161
	word32 ecx_162
	word64 r12_163
	word32 esi_164
	word32 edx_165
	word64 r8_166
	word64 r15_167
	word32 r12d_168
	call KERNEL32.dll!RtlAddFunctionTable (retsize: 4; depth: 4)
		uses: C_146,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc14_16,eax_143,ecx_123,edx_130,esi_131,qwLoc08,qwLoc10,qwLoc38,r12_119,r12d_120,r15,r8_147,rax_142,rbp_22,rbx_133,rcx_148,rdi_135,rdx_98,rsi_134,rsp_17,SCZO_132,SZO_144,Z_145
		defs: C_158,eax_156,ecx_162,edx_165,esi_164,r12_163,r12d_168,r15_167,r8_166,rax_155,rbp_150,rbx_153,rcx_160,rdi_151,rdx_161,rsi_152,rsp_149,SCZO_154,SZO_157,Z_159
	word64 rsp_171
	word64 rbp_172
	word64 rdi_173
	word64 rsi_174
	word64 rbx_175
	byte SCZO_176
	word64 rax_177
	word32 eax_178
	byte SZO_179
	byte C_180
	byte Z_181
	word64 rcx_182
	word64 rdx_183
	word32 ecx_184
	word64 r12_185
	word32 esi_186
	word32 edx_187
	word64 r8_188
	word64 r15_189
	word32 r12d_190
	call KERNEL32.dll!RtlAddFunctionTable (retsize: 4; depth: 4)
		uses: C_158,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc14_16,eax_156,ecx_162,edx_165,esi_164,qwLoc08,qwLoc10,qwLoc38,r12_163,r12d_168,r15_167,r8_169,rax_155,rbp_150,rbx_153,rcx_170,rdi_151,rdx_161,rsi_152,rsp_149,SCZO_154,SZO_157,Z_159
		defs: C_180,eax_178,ecx_184,edx_187,esi_186,r12_185,r12d_190,r15_189,r8_188,rax_177,rbp_172,rbx_175,rcx_182,rdi_173,rdx_183,rsi_174,rsp_171,SCZO_176,SZO_179,Z_181
// DataOut: r15 rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rdx:<invalid> ecx:<invalid> r12:<invalid> esi:<invalid> rdi:<invalid> r9:<invalid> edx:<invalid> r8:<invalid> rax:<invalid> al:<invalid> rsi:<invalid> ebx:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l00000000004022DD_1:
	Mem125[rdi_118:word64] = rax_72
	rdi_118 = rdi_118 + 0x0000000000000008
	rcx_117 = rcx_117 - 0x0000000000000001
// DataOut: ebp r12d r15 rax rbx rcx rdi rdx rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:0000000000407760 rdx:0000000000407660 ecx:<invalid> r12:<invalid> esi:0x00000000 rdi:<invalid> rsi:<invalid> ebx:<invalid> rax:<invalid> r8:<invalid> edx:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l00000000004022CF_1:
	Mem112[rdi_108:word64] = rax_72
	rdi_108 = rdi_108 + 0x0000000000000008
	rcx_101 = rcx_101 - 0x0000000000000001
// DataOut: ebp r12 r15 rax rbp rbx rcx rdi rdx rsi rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rbx:0000000000407760 rdx:0000000000407660 ecx:<invalid> r12:00000000004020C0 esi:0x00000000 rdi:<invalid> rsi:<invalid> ebx:<invalid> rax:<invalid> r8:<invalid> edx:<invalid> al:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l000000000040229C:
// DataOut: r15 rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> rsi:<invalid> ebx:<invalid> rbx:<invalid> rdi:<invalid> rax:<invalid> rdx:<invalid> r8:<invalid> edx:<invalid> al:<invalid> ecx:<invalid> r12:<invalid> esi:<invalid> r9:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

l00000000004022A1:
	return
// DataOut: r15 rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rcx:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> rsi:<invalid> ebx:<invalid> rbx:<invalid> rdi:<invalid> rdx:<invalid> al:<invalid> ecx:<invalid> r12:<invalid> esi:<invalid> r9:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp

fn0000000000402260_exit:
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> rcx:<invalid> r8:<invalid> edx:<invalid> rax:<invalid> ebx:<invalid> rdx:<invalid> al:<invalid> ecx:<invalid> r12:<invalid> esi:<invalid> r9:<invalid> -20(fp):rbx -16(fp):rsi -12(fp):rdi -8(fp):rbp -4(fp):fp



void fn0000000000402350(word64 rcx, word64 qwArg24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved: rbx
fn0000000000402350_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402350:
	word64 rdx_8 = Mem0[rcx:word64]
	word32 eax_11 = Mem0[rdx_8:word32]
	branch (eax_11 & 0x20FFFFFF) == 0x20474343 l0000000000402450
// DataOut: eax rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402450:
	branch (Mem0[rdx_8 + 0x0000000000000004:byte] & 0x01) != 0x00 l0000000000402371
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402371:
	word32 eax_223
	word64 rax_217
	branch eax_11 >u 0xC0000091 l0000000000402400
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402400:
	branch eax_11 == 0xC0000094 l00000000004024A4
// DataOut: eax rax
// DataOut (flags): CZ
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004024A4:
	word64 rsp_408
	word64 rbx_409
	byte SCZO_410
	word64 rdx_411
	word64 rcx_412
	word32 ecx_414
	byte SZO_415
	byte C_416
	byte Z_417
	byte CZ_418
	word32 edx_419
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_406,CZ_395,dwLoc04_4,eax_11,ecx_407,edx_404,qwLoc04,rax_13,rbx_10,rcx,rdx_8,rsp_5,SCZO_391,SZO_405,Z_393
		defs: C_416,CZ_418,eax_413,ecx_414,edx_419,rax_420,rbx_409,rcx_412,rdx_411,rsp_408,SCZO_410,SZO_415,Z_417
	branch rax_217 != 0x0000000000000001 l0000000000402431
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004024BA:
	word64 rsp_425
	word64 rbx_426
	byte SCZO_427
	word64 rdx_428
	word64 rcx_429
	word32 eax_430
	word32 ecx_431
	byte SZO_432
	byte C_433
	byte Z_434
	byte CZ_435
	word32 edx_436
	word64 rax_437
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_416,CZ_418,dwLoc04_4,eax_413,ecx_424,edx_423,qwLoc04,rax_420,rbx_409,rcx_412,rdx_411,rsp_408,SCZO_421,SZO_415,Z_422
		defs: C_433,CZ_435,eax_430,ecx_431,edx_436,rax_437,rbx_426,rcx_429,rdx_428,rsp_425,SCZO_427,SZO_432,Z_434
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l000000000040240B:
	branch eax_11 >u 0xC0000094 l0000000000402465
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402465:
	branch eax_11 == 0xC0000095 l000000000040245A
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l000000000040246C:
	branch eax_11 != 0xC0000096 l00000000004023E5
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l000000000040240D:
	branch eax_11 == 0xC0000092 l000000000040245A
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402414:
	branch eax_11 != 0xC0000093 l00000000004023E5
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l000000000040237C:
	branch eax_11 >=u 0xC000008D l000000000040241B
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l000000000040241B:
	word64 rsp_274
	word64 rbx_275
	byte SCZO_276
	word64 rdx_277
	word64 rcx_278
	word32 eax_279
	word32 ecx_280
	byte SZO_281
	byte C_282
	byte Z_283
	byte CZ_284
	word32 edx_285
	word64 rax_286
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_272,CZ_52,dwLoc04_4,eax_11,ecx_273,edx_270,qwLoc04,rax_13,rbx_10,rcx,rdx_8,rsp_5,SCZO_51,SZO_271,Z_48
		defs: C_282,CZ_284,eax_279,ecx_280,edx_285,rax_286,rbx_275,rcx_278,rdx_277,rsp_274,SCZO_276,SZO_281,Z_283
	branch rax_286 == 0x0000000000000001 l0000000000402509
	word64 rsp_293
	word64 rbx_294
	byte SCZO_295
	word64 rdx_296
	word64 rcx_297
	word32 ecx_299
	byte SZO_300
	byte C_301
	byte Z_302
	byte CZ_303
	word32 edx_304
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_291,CZ_284,dwLoc04_4,eax_279,ecx_292,edx_289,qwLoc04,rax_286,rbx_275,rcx_278,rdx_277,rsp_274,SCZO_287,SZO_290,Z_288
		defs: C_301,CZ_303,eax_298,ecx_299,edx_304,rax_305,rbx_294,rcx_297,rdx_296,rsp_293,SCZO_295,SZO_300,Z_302
	branch rax_217 == 0x0000000000000001 l0000000000402509
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402509:
	word64 rsp_310
	word64 rbx_311
	byte SCZO_312
	word64 rdx_313
	word64 rcx_314
	word32 eax_315
	word32 ecx_316
	byte SZO_317
	byte C_318
	byte Z_319
	byte CZ_320
	word32 edx_321
	word64 rax_322
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_301,CZ_303,dwLoc04_4,eax_298,ecx_309,edx_308,qwLoc04,rax_305,rbx_294,rcx_297,rdx_296,rsp_293,SCZO_306,SZO_300,Z_307
		defs: C_318,CZ_320,eax_315,ecx_316,edx_321,rax_322,rbx_311,rcx_314,rdx_313,rsp_310,SCZO_312,SZO_317,Z_319
	fn0000000000401BC0()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402431:
	branch rax_217 == 0x0000000000000000 l00000000004023E5
	branch rax_217 == 0x0000000000000000 l00000000004023E5
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402436:
	word64 rsp_233
	word64 rbx_234
	byte SCZO_235
	word64 rdx_236
	word64 rcx_237
	word32 eax_238
	word32 ecx_239
	byte SZO_240
	byte C_241
	byte Z_242
	byte CZ_243
	word32 edx_244
	word64 rax_245
	call eax_223 (retsize: 4; depth: 40)
		uses: C_231,CZ_219,dwLoc04_4,eax_223,ecx_232,edx_218,qwLoc04,rax_217,rbx_225,rcx_221,rdx_222,rsp_226,SCZO_224,SZO_229,Z_230
		defs: C_241,CZ_243,eax_238,ecx_239,edx_244,rax_245,rbx_234,rcx_237,rdx_236,rsp_233,SCZO_235,SZO_240,Z_242
	return
	word64 rsp_252
	word64 rbx_253
	byte SCZO_254
	word64 rdx_255
	word64 rcx_256
	word32 eax_257
	word32 ecx_258
	byte SZO_259
	byte C_260
	byte Z_261
	byte CZ_262
	word32 edx_263
	word64 rax_264
	call 0xFFFFFFFF (retsize: 4;)
		uses: C_241,CZ_243,dwLoc04_4,eax_246,ecx_251,edx_244,qwLoc04,rax_245,rbx_249,rcx_237,rdx_236,rsp_250,SCZO_248,SZO_240,Z_242
		defs: C_260,CZ_262,eax_257,ecx_258,edx_263,rax_264,rbx_253,rcx_256,rdx_255,rsp_252,SCZO_254,SZO_259,Z_261
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx

l0000000000402387:
	branch eax_11 == 0xC0000008 l000000000040245A
// DataOut: eax rax
// DataOut (flags): CZ
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402392:
	branch eax_11 >u 0xC0000008 l00000000004023D3
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004023D3:
	branch eax_11 == 0xC000001D l0000000000402477
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402477:
	word64 rsp_124
	word64 rbx_125
	byte SCZO_126
	word64 rdx_127
	word64 rcx_128
	word32 eax_129
	word32 ecx_130
	byte SZO_131
	byte C_132
	byte Z_133
	byte CZ_134
	word32 edx_135
	word64 rax_136
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_122,CZ_52,dwLoc04_4,eax_11,ecx_123,edx_120,qwLoc04,rax_13,rbx_10,rcx,rdx_8,rsp_5,SCZO_51,SZO_121,Z_48
		defs: C_132,CZ_134,eax_129,ecx_130,edx_135,rax_136,rbx_125,rcx_128,rdx_127,rsp_124,SCZO_126,SZO_131,Z_133
	branch rax_136 == 0x0000000000000001 l00000000004024D3
	word64 rsp_143
	word64 rbx_144
	byte SCZO_145
	word64 rdx_146
	word64 rcx_147
	word32 eax_148
	word32 ecx_149
	byte SZO_150
	byte C_151
	byte Z_152
	byte CZ_153
	word32 edx_154
	word64 rax_155
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_141,CZ_134,dwLoc04_4,eax_129,ecx_142,edx_139,qwLoc04,rax_136,rbx_125,rcx_128,rdx_127,rsp_124,SCZO_137,SZO_140,Z_138
		defs: C_151,CZ_153,eax_148,ecx_149,edx_154,rax_155,rbx_144,rcx_147,rdx_146,rsp_143,SCZO_145,SZO_150,Z_152
	branch rax_155 == 0x0000000000000001 l00000000004024D3
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004024D3:
	word64 rsp_203
	word64 rbx_204
	byte SCZO_205
	word64 rdx_206
	word64 rcx_207
	word32 eax_208
	word32 ecx_209
	byte SZO_210
	byte C_211
	byte Z_212
	byte CZ_213
	word32 edx_214
	word64 rax_215
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_151,CZ_153,dwLoc04_4,eax_148,ecx_202,edx_201,qwLoc04,rax_155,rbx_144,rcx_147,rdx_146,rsp_143,SCZO_156,SZO_150,Z_157
		defs: C_211,CZ_213,eax_208,ecx_209,edx_214,rax_215,rbx_204,rcx_207,rdx_206,rsp_203,SCZO_205,SZO_210,Z_212
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402489:
	branch rax_155 == 0x0000000000000000 l00000000004023E5
	branch rax_155 == 0x0000000000000000 l00000000004023E5
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402492:
	word64 rsp_164
	word64 rbx_165
	byte SCZO_166
	word64 rdx_167
	word64 rcx_168
	word32 eax_169
	word32 ecx_170
	byte SZO_171
	byte C_172
	byte Z_173
	byte CZ_174
	word32 edx_175
	word64 rax_176
	call eax_148 (retsize: 4; depth: 40)
		uses: C_162,CZ_153,dwLoc04_4,eax_148,ecx_163,edx_154,qwLoc04,rax_155,rbx_144,rcx_147,rdx_146,rsp_143,SCZO_156,SZO_160,Z_161
		defs: C_172,CZ_174,eax_169,ecx_170,edx_175,rax_176,rbx_165,rcx_168,rdx_167,rsp_164,SCZO_166,SZO_171,Z_173
	return
	word64 rsp_183
	word64 rbx_184
	byte SCZO_185
	word64 rdx_186
	word64 rcx_187
	word32 eax_188
	word32 ecx_189
	byte SZO_190
	byte C_191
	byte Z_192
	byte CZ_193
	word32 edx_194
	word64 rax_195
	call 0xFFFFFFFF (retsize: 4;)
		uses: C_172,CZ_174,dwLoc04_4,eax_177,ecx_182,edx_175,qwLoc04,rax_176,rbx_180,rcx_168,rdx_167,rsp_181,SCZO_179,SZO_171,Z_173
		defs: C_191,CZ_193,eax_188,ecx_189,edx_194,rax_195,rbx_184,rcx_187,rdx_186,rsp_183,SCZO_185,SZO_190,Z_192
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx

l00000000004023DE:
	branch eax_11 == 0xC000008C l000000000040245A
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402394:
	branch eax_11 == 0x80000002 l000000000040245A
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l000000000040245A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx

l000000000040239F:
	branch eax_11 != 0xC0000005 l00000000004023E5
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004023A6:
	word64 rsp_338
	word64 rbx_339
	byte SCZO_340
	word64 rdx_341
	word64 rcx_342
	word32 eax_343
	word32 ecx_344
	byte SZO_345
	byte C_346
	byte Z_347
	byte CZ_348
	word32 edx_349
	word64 rax_350
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_336,CZ_329,dwLoc04_4,eax_11,ecx_337,edx_334,qwLoc04,rax_13,rbx_10,rcx,rdx_8,rsp_5,SCZO_332,SZO_335,Z_333
		defs: C_346,CZ_348,eax_343,ecx_344,edx_349,rax_350,rbx_339,rcx_342,rdx_341,rsp_338,SCZO_340,SZO_345,Z_347
	branch rax_350 == 0x0000000000000001 l00000000004024F0
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004024F0:
	word64 rsp_373
	word64 rbx_374
	byte SCZO_375
	word64 rdx_376
	word64 rcx_377
	word32 eax_378
	word32 ecx_379
	byte SZO_380
	byte C_381
	byte Z_382
	byte CZ_383
	word32 edx_384
	word64 rax_385
	call msvcrt.dll!signal (retsize: 8; depth: 44)
		uses: C_346,CZ_348,dwLoc04_4,eax_343,ecx_372,edx_371,qwLoc04,rax_350,rbx_339,rcx_342,rdx_341,rsp_338,SCZO_351,SZO_345,Z_352
		defs: C_381,CZ_383,eax_378,ecx_379,edx_384,rax_385,rbx_374,rcx_377,rdx_376,rsp_373,SCZO_375,SZO_380,Z_382
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004023BC:
	branch rax_350 == 0x0000000000000000 l00000000004023E5
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004023E5:
	branch Mem0[0x0000000000407640:word64] == 0x0000000000000000 l00000000004023CD
	word64 rax_79 = Mem0[0x0000000000407640:word64]
	branch rax_79 == 0x0000000000000000 l00000000004023CD
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004023F1:
	word64 rsp_88
	word64 rbx_89
	byte SCZO_90
	word64 rdx_91
	word64 rcx_92
	word32 eax_93
	word32 ecx_94
	byte SZO_95
	byte C_96
	byte Z_97
	byte CZ_98
	word32 edx_99
	word64 rax_100
	call rax_79 (retsize: 4;)
		uses: C_82,CZ_68,dwLoc04_4,eax_72,ecx_69,edx_67,qwLoc04,rax_79,rbx_86,rcx_83,rdx_71,rsp_87,SCZO_85,SZO_80,Z_81
		defs: C_96,CZ_98,eax_93,ecx_94,edx_99,rax_100,rbx_89,rcx_92,rdx_91,rsp_88,SCZO_90,SZO_95,Z_97
	return
	word64 rsp_107
	word64 rbx_108
	byte SCZO_109
	word64 rdx_110
	word64 rcx_111
	word32 eax_112
	word32 ecx_113
	byte SZO_114
	byte C_115
	byte Z_116
	byte CZ_117
	word32 edx_118
	word64 rax_119
	call rax_100 (retsize: 4;)
		uses: C_96,CZ_98,dwLoc04_4,eax_93,ecx_94,edx_99,qwLoc04,rax_100,rbx_105,rcx_101,rdx_91,rsp_106,SCZO_103,SZO_95,Z_97
		defs: C_115,CZ_117,eax_112,ecx_113,edx_118,rax_119,rbx_108,rcx_111,rdx_110,rsp_107,SCZO_109,SZO_114,Z_116
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> rax:<invalid> -4(fp):rbx

l00000000004023C1:
	word64 rsp_357
	word64 rbx_358
	byte SCZO_359
	word64 rdx_360
	word64 rcx_361
	word32 eax_362
	word32 ecx_363
	byte SZO_364
	byte C_365
	byte Z_366
	byte CZ_367
	word32 edx_368
	word64 rax_369
	call eax_343 (retsize: 4; depth: 40)
		uses: C_355,CZ_348,dwLoc04_4,eax_343,ecx_356,edx_349,qwLoc04,rax_350,rbx_339,rcx_342,rdx_341,rsp_338,SCZO_351,SZO_353,Z_354
		defs: C_365,CZ_367,eax_362,ecx_363,edx_368,rax_369,rbx_358,rcx_361,rdx_360,rsp_357,SCZO_359,SZO_364,Z_366
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l00000000004023CD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 rdx:<invalid> rbx:rcx eax:<invalid> ecx:<invalid> edx:<invalid> rax:<invalid> -4(fp):rbx

fn0000000000402350_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rdx:<invalid> rbx:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> rax:<invalid> rcx:<invalid> -4(fp):rbx



void fn0000000000402530(word64 rax, word64 qwArg00, word64 qwArg08, word64 qwArg38, word64 qwArg40, word64 qwArg48, word64 qwArg50)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax rax
// LiveOut: rsp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn0000000000402530_entry:
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0034(0)

l0000000000402530:
	EnterCriticalSection(tLoc34)
	branch Mem0[0x00000000004078E0:word64] == 0x0000000000000000 l0000000000402584
// DataOut: eax rax rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402551:
// DataOut: eax rax rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:0000000000407900 rbx:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64)

l0000000000402560:
	word64 rsp_91
	word64 rbp_92
	word64 rdi_93
	word64 rsi_94
	word64 rbx_95
	byte SCZO_96
	word64 rcx_97
	byte SZO_98
	byte C_99
	byte Z_100
	word32 ecx_101
	word32 ebp_102
	word64 rax_103
	word32 edi_104
	word32 eax_105
	call ebp (retsize: 4; depth: 60)
		uses: C_21,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,eax,ebp,ecx_85,edi,qwLoc08,qwLoc10,rax,rbp_82,rbx_84,rcx_15,rdi_83,rsi,rsp_14,SCZO,SZO_19,tLoc34,Z_20
		defs: C_99,eax_105,ebp_102,ecx_101,edi_104,rax_103,rbp_92,rbx_95,rcx_97,rdi_93,rsi_94,rsp_91,SCZO_96,SZO_98,Z_100
	word64 rsp_107
	word64 rbp_108
	word64 rdi_109
	word64 rsi_110
	byte SCZO_112
	word64 rcx_113
	byte SZO_114
	byte C_115
	byte Z_116
	word32 ecx_117
	word32 ebp_118
	word64 rax_119
	word32 edi_120
	word32 eax_121
	word64 rbx_111
	call edi_104 (retsize: 4; depth: 60)
		uses: C_99,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,eax_105,ebp_102,ecx_101,edi_104,qwLoc08,qwLoc10,rax_103,rbp_92,rbx_95,rcx_97,rdi_93,rsi_106,rsp_91,SCZO_96,SZO_98,tLoc34,Z_100
		defs: C_115,eax_121,ebp_118,ecx_117,edi_120,rax_119,rbp_108,rbx_111,rcx_113,rdi_109,rsi_110,rsp_107,SCZO_112,SZO_114,Z_116
	branch eax_121 != 0x00000000 l000000000040257B
// DataOut: eax rax rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> rbx:<invalid> rbp:<invalid> rdi:<invalid> ecx:<invalid> rsi:<invalid> rax:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64)

l000000000040256D:
	branch rsi_110 == 0x0000000000000000 l000000000040257B
// DataOut: eax rax rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> rbx:<invalid> rbp:<invalid> rdi:<invalid> ecx:<invalid> rsi:<invalid> rax:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64)

l0000000000402572:
	word64 rax_144 = Mem0[rbx_111 + 0x0000000000000008:word64]
	word32 eax_145 = (word32) rax_144
	word64 rsp_147
	word64 rbp_148
	word64 rdi_149
	word64 rsi_150
	byte SCZO_152
	word64 rcx_153
	byte SZO_154
	byte C_155
	byte Z_156
	word32 ecx_157
	word32 ebp_158
	word64 rax_159
	word32 edi_160
	word32 eax_161
	call eax_145 (retsize: 4; depth: 60)
		uses: C_143,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,eax_145,ebp_118,ecx_117,edi_120,qwLoc08,qwLoc10,rax_144,rbp_108,rbx_111,rcx_146,rdi_109,rsi_110,rsp_107,SCZO_112,SZO_141,tLoc34,Z_142
		defs: C_155,eax_161,ebp_158,ecx_157,edi_160,rax_159,rbp_148,rbx_151,rcx_153,rdi_149,rsi_150,rsp_147,SCZO_152,SZO_154,Z_156
// DataOut: eax rax rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> rbx:<invalid> rbp:<invalid> rdi:<invalid> ecx:<invalid> rsi:<invalid> rax:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64)

l000000000040257B:
	branch Mem0[rbx_111 + 0x0000000000000010:word64] != 0x0000000000000000 l0000000000402560
// DataOut: eax rax rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> rbx:<invalid> rbp:<invalid> rdi:<invalid> ecx:<invalid> rsi:<invalid> rax:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64)

l0000000000402584:
	word64 rsp_37
	word64 rbp_38
	word64 rdi_39
	word64 rsi_40
	word64 rbx_41
	byte SCZO_42
	word64 rcx_43
	byte SZO_44
	byte C_45
	byte Z_46
	word32 ecx_47
	word32 ebp_48
	word64 rax_49
	word32 edi_50
	word32 eax_51
	call Mem0[0x0000000000408264:word64] (retsize: 4;)
		uses: C_21,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,qwLoc08,qwLoc10,rbp_35,rbx_26,rcx_22,rdi_32,rsi_29,rsp_36,SCZO_24,SZO_19,tLoc34,Z_20
		defs: C_45,eax_51,ebp_48,ecx_47,edi_50,rax_49,rbp_38,rbx_41,rcx_43,rdi_39,rsi_40,rsp_37,SCZO_42,SZO_44,Z_46
	return
	word64 rsp_67
	word64 rbp_68
	word64 rdi_69
	word64 rsi_70
	word64 rbx_71
	byte SCZO_72
	word64 rcx_73
	byte SZO_74
	byte C_75
	byte Z_76
	word32 ecx_77
	word32 ebp_78
	word64 rax_79
	word32 edi_80
	word32 eax_81
	call Mem0[0x0000000000408264:word64] (retsize: 4;)
		uses: C_45,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,eax_51,ebp_48,ecx_47,edi_50,qwLoc08,qwLoc10,rax_49,rbp_65,rbx_56,rcx_52,rdi_62,rsi_59,rsp_66,SCZO_54,SZO_44,tLoc34,Z_46
		defs: C_75,eax_81,ebp_78,ecx_77,edi_80,rax_79,rbp_68,rbx_71,rcx_73,rdi_69,rsi_70,rsp_67,SCZO_72,SZO_74,Z_76
	return
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> rbx:<invalid> rbp:<invalid> rdi:<invalid> ecx:<invalid> rsi:<invalid> rax:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp

fn0000000000402530_exit:
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000058 rcx:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> rax:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp



void fn00000000004025A0(word32 ecx, word64 rdx, word64 qwArg00, word64 qwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx rdx
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: rbx
fn00000000004025A0_entry:
// DataOut: ecx rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0034(0)

l00000000004025A0:
	branch Mem0[0x00000000004078E8:word32] != 0x00000000 l00000000004025C4
// DataOut: ebp rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0034(0)

l00000000004025C4:
	word64 rax_73 = calloc(DPB(rcx, 0x00000001, 0), DPB(rdx, 0x00000018, 0))
	branch rax_73 == 0x0000000000000000 l0000000000402618
// DataOut: ebp rax rbx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 eax:<invalid> esi:0x00000000 ebp:ecx rdi:rdx -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64) Local -0034(0)

l0000000000402618:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 eax:<invalid> esi:0x00000000 ebp:ecx rdi:rdx edx:0x00000018 ecx:0x00000001 rax:<invalid> rbx:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp
// LocalsOut: fp(64)

l00000000004025DB:
	Mem79[rax_73:word32] = ecx
	Mem80[rax_73 + 0x0000000000000008:word64] = rdx
	EnterCriticalSection(tLoc34)
	word64 rax_82 = Mem80[0x00000000004078E0:word64]
	Mem84[0x00000000004078E0:word64] = rax_73
	Mem85[rax_73 + 0x0000000000000010:word64] = rax_82
	LeaveCriticalSection(tLoc34)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 eax:<invalid> esi:0x00000000 ebp:ecx rdi:rdx edx:0x00000018 ecx:0x00000001 rax:<invalid> rbx:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp

l00000000004025B9:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 eax:<invalid> esi:<invalid> ebp:ecx rdi:rdx edx:0x00000018 ecx:0x00000001 rax:<invalid> rbx:<invalid> -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp

fn00000000004025A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000010 eax:<invalid> esi:<invalid> ebp:<invalid> rdi:SLICE(rbp, word64, 32) rbx:rbx rsi:rdi rbp:<invalid> edx:0x00000018 ecx:<invalid> rax:<invalid> rcx:0000000000407900 -16(fp):rbx -12(fp):rsi -8(fp):rdi -4(fp):rbp



void fn0000000000402620(word32 ecx, word64 qwArg24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved: rbx
fn0000000000402620_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0020(0)

l0000000000402620:
	branch Mem0[0x00000000004078E8:word32] != 0x00000000 l0000000000402640
// DataOut: ebx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0020(0)

l0000000000402640:
	EnterCriticalSection(tLoc20)
	word64 rax_101 = Mem0[0x00000000004078E0:word64]
	branch rax_101 == 0x0000000000000000 l0000000000402673
// DataOut: ebx rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx -4(fp):rbx
// LocalsOut: fp(64) Local -0020(0)

l0000000000402659:
	word64 rcx_81
	branch ecx != Mem0[rax_101:word32] l000000000040266A
// DataOut: ebx rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:0000000000407900 rax:<invalid> -4(fp):rbx
// LocalsOut: fp(64) Local -0020(0)

l000000000040266A:
	rcx_81 = Mem0[rax_101 + 0x0000000000000010:word64]
	branch rcx_81 != 0x0000000000000000 l0000000000402661
// DataOut: ebx rax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:<invalid> rax:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64) Local -0020(0)

l0000000000402661:
	branch Mem0[rcx_81:word32] == ecx l0000000000402690
// DataOut: ebx rax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:<invalid> rax:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64) Local -0020(0)

l0000000000402690:
	Mem104[rax_101 + 0x0000000000000010:word64] = Mem0[rcx_81 + 0x0000000000000010:word64]
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:<invalid> rax:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64) Local -0020(0)

l0000000000402667:
	rax_101 = rcx_81
// DataOut: ebx rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:<invalid> rax:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64) Local -0020(0)

l0000000000402673:
	LeaveCriticalSection(tLoc20)
	LeaveCriticalSection(tLoc20)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:<invalid> rax:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l000000000040265F:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:0000000000407900 rax:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64) Local -0020(0)

l00000000004026AC:
	Mem88[0x00000000004078E0:word64] = Mem0[rax_101 + 0x0000000000000010:word64]
	rcx_81 = rax_101
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:0000000000407900 rax:<invalid> edx:<invalid> -4(fp):rbx
// LocalsOut: fp(64) Local -0020(0)

l0000000000402698:
	free(rcx_81)
	LeaveCriticalSection(tLoc20)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:<invalid> rax:<invalid> edx:<invalid> rdx:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l0000000000402680:
	return
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx rcx:0000000000407900 rax:<invalid> edx:<invalid> rdx:<invalid> -4(fp):rbx

l0000000000402631:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> ebx:ecx -4(fp):rbx

fn0000000000402620_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> ebx:<invalid> rbx:<invalid> rcx:0000000000407900 rax:<invalid> edx:<invalid> rdx:<invalid> -4(fp):rbx



void fn00000000004026C0(word32 edx, word32 ebx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edx
// LiveOut: rsp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: rbx
fn00000000004026C0_entry:
// DataOut: ebx edx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0020(0)

l00000000004026C0:
	branch edx == 0x00000001 l0000000000402760
// DataOut: edx rsp
// DataOut (flags): C
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0004(32) Local -0020(0)

l0000000000402760:
	branch Mem0[0x00000000004078E8:word32] == 0x00000000 l0000000000402780
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 -4(fp):rbx
// LocalsOut: fp(64) Local -0020(0)

l0000000000402780:
	InitializeCriticalSection(tLoc20)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> -4(fp):rbx
// LocalsOut: fp(64)

l000000000040276A:
	Mem79[0x00000000004078E8:word32] = 0x00000001
	return
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> rcx:0000000000407900 -4(fp):rbx

l00000000004026CE:
	branch edx <u 0x00000001 l0000000000402700
// DataOut: edx rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 -4(fp):rbx
// LocalsOut: Local -0004(32) Local -0020(32)

l0000000000402700:
	word32 eax_48 = Mem0[0x00000000004078E8:word32]
	word64 rax_49 = DPB(rax, eax_48, 0)
	branch eax_48 != 0x00000000 l0000000000402790
// DataOut: eax rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 -4(fp):rbx
// LocalsOut: Local -0004(32) Local -0020(32)

l0000000000402790:
	fn0000000000402530(rax_49, qwLoc2C, qwLoc24, qwArg0C, qwArg14, qwArg1C, qwArg24)
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> -4(fp):rbx

l000000000040270E:
	branch Mem0[0x00000000004078E8:word32] != 0x00000001 l00000000004026F5
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> rax:<invalid> -4(fp):rbx

l0000000000402719:
	word64 rcx_56 = Mem0[0x00000000004078E0:word64]
	branch rcx_56 == 0x0000000000000000 l0000000000402736
// DataOut: rcx rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> rax:<invalid> -4(fp):rbx

l0000000000402725:
	word64 rbx_68 = Mem0[rcx_56 + 0x0000000000000010:word64]
	free(rcx_56)
	rcx_56 = rbx_68
	branch rbx_68 != 0x0000000000000000 l0000000000402725
// DataOut: rcx rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> rax:<invalid> -4(fp):rbx

l0000000000402736:
	Mem65[0x00000000004078E0:word64] = 0x0000000000000000
	Mem66[0x00000000004078E8:word32] = 0x00000000
	DeleteCriticalSection(Mem66[fp - 0x0000000000000020:LPCRITICAL_SECTION])
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> rax:<invalid> -4(fp):rbx

l00000000004026D0:
	branch edx == 0x00000002 l00000000004026F0
// DataOut: edx rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 -4(fp):rbx
// LocalsOut: Local -0004(0) Local -0020(0)

l00000000004026F0:
	fn0000000000401BC0()
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 -4(fp):rbx

l00000000004026D5:
	branch edx != 0x00000003 l00000000004026F5
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 -4(fp):rbx
// LocalsOut: Local -0004(0) Local -0020(0)

l00000000004026DA:
	word32 eax_37 = Mem0[0x00000000004078E8:word32]
	word64 rax_38 = DPB(rax, eax_37, 0)
	branch eax_37 == 0x00000000 l00000000004026F5
// DataOut: eax rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 -4(fp):rbx
// LocalsOut: Local -0004(0) Local -0020(0)

l00000000004026E4:
	fn0000000000402530(rax_38, qwLoc2C, qwLoc24, qwArg0C, qwArg14, qwArg1C, qwArg24)
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000024 eax:<invalid> -4(fp):rbx

l00000000004026F5:
	return
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:<invalid> rcx:<invalid> rbx:<invalid> rsi:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> rax:<invalid> -4(fp):rbx

fn00000000004026C0_exit:
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> eax:0x00000001 rbx:<invalid> rcx:<invalid> rsi:<invalid> rdi:<invalid> rbp:<invalid> ecx:<invalid> rax:<invalid> -4(fp):rbx



word64 fn00000000004027A0(word64 rcx, ptr64 & rcxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut: eax rax rcx
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: rsp
fn00000000004027A0_entry:
// DataOut: ebp ebx edi r10 r11 r12 r12d r13 r15 r8 r8d r9 rbp rbx rcx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004027A0:
	word64 rax_4 = (int64) Mem0[rcx + 0x000000000000003C:word32]
	word64 rcx_5 = rcx + rax_4
	*rcxOut = rcx_5
	word64 rax_13 = DPB(rax_4, 0x00000000, 0)
	byte al_14 = 0x00
	branch Mem0[rcx_5:word32] != 0x00004550 l00000000004027BA
// DataOut: al ebp ebx edi r10 r11 r12 r12d r13 r15 r8 r8d r9 rbp rbx rcx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004027B1:
	al_14 = Mem0[rcx_5 + 0x0000000000000018:word16] == 0x020B
	rax_13 = DPB(rax_4, al_14, 0) (alias)
// DataOut: al ebp ebx edi r10 r11 r12 r12d r13 r15 r8 r8d r9 rbp rbx rcx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:rcx + (int64) Mem0[rcx + 0x000000000000003C:word32] eax:0x00000000

l00000000004027BA:
	return DPB(rax_13, (word32) al_14, 0)
// DataOut: eax ebp ebx edi r10 r11 r12 r12d r13 r15 r8 r8d r9 rax rbp rbx rcx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:rcx + (int64) Mem0[rcx + 0x000000000000003C:word32] eax:<invalid> al:Test(EQ,Z)

fn00000000004027A0_exit:
// DataOut: eax rax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:rcx + (int64) Mem0[rcx + 0x000000000000003C:word32] eax:(word32) Test(EQ,Z) al:<invalid>



void fn00000000004027C0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: rsp
fn00000000004027C0_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004027C0:
	branch Mem0[rcx:word16] == 0x5A4D l00000000004027D0
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004027D0:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004027D0_thunk_fn00000000004027A0:
	word64 rcx_15
	fn00000000004027A0(rcx, out rcx_15)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004027C7:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn00000000004027C0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp eax:<invalid> rax:<invalid> rcx:<invalid> al:<invalid>



void fn00000000004027E0(word64 rcx, word64 rdx, word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8 rcx rdx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx
// Preserved: rsp
fn00000000004027E0_entry:
// DataOut: r8 rcx rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004027E0:
	word64 rax_4 = (int64) Mem0[rcx + 0x000000000000003C:word32]
	word64 rcx_5 = rcx + rax_4
	word64 rax_50 = rcx_5 + 0x0000000000000018 + DPB(rax_4, (word32) Mem0[rcx_5 + 0x0000000000000014:word16], 0) + 0x0000000000000008
	word32 ecx_10 = (word32) Mem0[rcx_5 + 0x0000000000000006:word16]
	branch ecx_10 == 0x00000000 l0000000000402821
// DataOut: ecx r8 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004027F8:
	word64 r9_48 = rax_50 + 0x0000000000000028 + (DPB(rcx_5, ecx_10 - 0x00000001, 0) * 0x0000000000000005) * 0x0000000000000008
// DataOut: r8 r9 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:<invalid> eax:<invalid> ecx:(word32) Mem0[rcx + (int64) Mem0[rcx + 0x000000000000003C:word32] + 0x0000000000000006:word16]

l0000000000402804:
	word32 r8d_54 = Mem0[r8 + 0x000000000000000C:word32]
	r8 = DPB(r8, r8d_54, 0) (alias)
	branch r8 >u rdx l0000000000402818
// DataOut: ecx r8 r9 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:<invalid> eax:<invalid> ecx:<invalid> r9:<invalid> r8d:<invalid>

l0000000000402810:
	branch rdx <u DPB(r8, r8d_54 + Mem0[rax_50 + 0x0000000000000000:word32], 0) l0000000000402823
// DataOut: r8 r9 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:r8 eax:<invalid> ecx:<invalid> r9:<invalid> r8d:<invalid>

l0000000000402818:
	rax_50 = rax_50 + 0x0000000000000028
	branch rax_50 != r9_48 l0000000000402804
// DataOut: r8 r9 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:<invalid> eax:<invalid> ecx:<invalid> r9:<invalid> r8d:<invalid>

l0000000000402821:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:<invalid> eax:<invalid> ecx:<invalid> r9:<invalid> r8d:<invalid>

l0000000000402823:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:<invalid> eax:<invalid> ecx:<invalid> r9:<invalid> r8d:<invalid>

fn00000000004027E0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rcx:<invalid> eax:<invalid> ecx:<invalid> r9:<invalid> r8d:<invalid>



word64 fn0000000000402830(word64 qwArg04, word64 qwArg2C, word64 qwArg34, word64 qwArg3C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax rsp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0000000000402830_entry:
// DataOut: ebp r15 rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -001C(0) Local -0024(0) Local -002C(0)

l0000000000402830:
	word64 rax_111 = DPB(rax, strlen(ptrLoc2C), 0)
	branch rax_111 >u 0x0000000000000008 l00000000004028AE
// DataOut: ebp r15 rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -001C(0) Local -0024(0) Local -002C(0)

l0000000000402845:
	word64 rdx_73 = Mem0[0x0000000000404330:word64]
	word64 rbx_108 = DPB(rbx, 0x00000000, 0)
	branch Mem0[rdx_73:word16] == 0x5A4D l0000000000402860
// DataOut: ebp r15 rbp rbx rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000002C rsi:rcx eax:<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -001C(0) Local -0024(0) Local -002C(0)

l0000000000402860:
	word64 rcx_98
	branch (word32) fn00000000004027A0(rdx_73, out rcx_98) == 0x00000000 l0000000000402855
// DataOut: ebp r15 rbp rbx rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000002C rsi:rcx eax:<invalid> rdx:<invalid> ebx:0x00000000 -12(fp):rbx -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -001C(0) Local -0024(0) Local -002C(0)

l000000000040286C:
	word64 rax_105 = (int64) Mem0[rdx_73 + 0x000000000000003C:word32] + rdx_73
	word32 eax_110 = (word32) Mem0[rax_105 + 0x0000000000000006:word16]
	rbx_108 = rax_105 + 0x0000000000000018 + DPB(rdx_73, (word32) Mem0[rax_105 + 0x0000000000000014:word16], 0)
	rax_111 = DPB(rax_105, eax_110, 0) (alias)
	branch eax_110 == 0x00000000 l00000000004028AE
// DataOut: eax ebp r15 rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000002C rsi:rcx eax:<invalid> rdx:<invalid> ebx:0x00000000 rcx:<invalid> rax:<invalid> al:<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -001C(0) Local -0024(0) Local -002C(0)

l0000000000402884:
	word64 rax_116 = DPB(rax_105, eax_110 - 0x00000001, 0)
	rax_111 = rax_116 * 0x0000000000000005
	word64 rdi_119 = rbx_108 + 0x0000000000000028 + (rax_116 * 0x0000000000000005) * 0x0000000000000008
// DataOut: ebp r15 rbp rbx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000002C rsi:rcx eax:<invalid> rdx:<invalid> ebx:<invalid> rcx:<invalid> rax:<invalid> al:<invalid> edx:<invalid> rbx:<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -001C(0) Local -0024(0) Local -002C(0)

l0000000000402890:
	branch strncmp(ptrLoc2C, ptrLoc24, tLoc1C) == 0x00000000 l0000000000402855
// DataOut: ebp r15 rbp rbx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000002C rsi:rcx eax:<invalid> rdx:<invalid> ebx:<invalid> rcx:<invalid> rax:<invalid> al:<invalid> edx:<invalid> rbx:<invalid> rdi:<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -001C(0) Local -0024(0) Local -002C(0)

l00000000004028A5:
	rbx_108 = rbx_108 + 0x0000000000000028
	branch rbx_108 != rdi_119 l0000000000402890
// DataOut: ebp r15 rbp rbx rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000002C rsi:rcx eax:<invalid> rdx:rcx ebx:<invalid> rcx:<invalid> rax:<invalid> al:<invalid> edx:<invalid> rbx:<invalid> rdi:<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -001C(0) Local -0024(0) Local -002C(0)

l00000000004028AE:
	return rax_111
	return DPB(qwLoc0C, 0x00000000, 0)
// DataOut: ebp r15 rax rbp rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000002C rsi:rcx eax:<invalid> rdx:<invalid> ebx:<invalid> rcx:<invalid> rax:<invalid> al:<invalid> edx:<invalid> rbx:<invalid> rdi:<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rdi

l0000000000402855:
	return rbx_108
// DataOut: ebp r15 rax rbp rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x000000000000002C rsi:rcx eax:<invalid> rdx:<invalid> ebx:<invalid> rcx:<invalid> rax:<invalid> al:<invalid> edx:<invalid> rbx:<invalid> rdi:<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rdi

fn0000000000402830_exit:
// DataOut: rax rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rsi:<invalid> eax:<invalid> ebx:<invalid> rbx:<invalid> rdi:<invalid> rax:<invalid> rdx:<invalid> rcx:<invalid> al:<invalid> edx:<invalid> -12(fp):rbx -8(fp):rsi -4(fp):rdi



word64 fn00000000004028C0(word64 rcx, word64 r10, ptr64 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 rcx
// LiveOut: r8 rax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rsp
fn00000000004028C0_entry:
// DataOut: ebx r10 r11 r15 rbp rcx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004028C0:
	word64 r9_4 = Mem0[0x0000000000404330:word64]
	word64 rdx_37 = DPB(rdx, 0x00000000, 0)
	word64 r8_79 = rcx
	*r8Out = r8_79
	branch Mem0[rcx:word16] == 0x5A4D l00000000004028E0
// DataOut: ebx r10 r11 r15 r8 r9 rbp rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004028E0:
	word64 rcx_43
	branch (word32) fn00000000004027A0(r9_4, out rcx_43) == 0x00000000 l00000000004028D8
// DataOut: ebx r10 r11 r15 r8 r9 rbp rcx rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:0x00000000 r8:rcx
// LocalsOut: fp(64)

l00000000004028EC:
	word64 rax_52 = (int64) Mem0[rcx_43 + 0x000000000000003C:word32] + r9_4
	word64 rcx_51 = rcx - r9_4
	rdx_37 = rax_52 + 0x0000000000000018 + DPB(rdx, (word32) Mem0[rax_52 + 0x0000000000000014:word16], 0) + 0x0000000000000008
	word32 eax_57 = (word32) Mem0[rax_52 + 0x0000000000000006:word16]
	branch eax_57 == 0x00000000 l000000000040293D
// DataOut: eax ebx r10 r11 r15 r8 rbp rcx rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:0x00000000 r8:rcx rcx:<invalid> rax:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l000000000040290A:
	word64 r9_78 = rdx_37 + 0x0000000000000028 + (DPB(rax_52, eax_57 - 0x00000001, 0) * 0x0000000000000005) * 0x0000000000000008
// DataOut: ebx r10 r11 r15 r9 rbp rcx rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:rcx rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402920:
	word32 r8d_84 = Mem0[r10 + 0x000000000000000C:word32]
	r8_79 = DPB(r8_79, r8d_84, 0) (alias)
	*r8Out = r8_79
	branch rcx_51 <u r8_79 l0000000000402934
// DataOut: eax ebx r10 r11 r15 r8 r9 rbp rcx rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid> r8d:<invalid>
// LocalsOut: fp(64)

l000000000040292C:
	branch rcx_51 <u DPB(r8_79, r8d_84 + Mem0[rdx_37 + 0x0000000000000000:word32], 0) l00000000004028D8
// DataOut: ebx r10 r11 r15 r8 r9 rbp rcx rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> r8d:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402934:
	rdx_37 = rdx_37 + 0x0000000000000028
	branch rdx_37 != r9_78 l0000000000402920
// DataOut: ebx r10 r11 r15 r8 r9 rbp rcx rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> r8d:<invalid> al:<invalid>
// LocalsOut: fp(64)

l000000000040293D:
	return DPB(rdx_37, 0x00000000, 0)
// DataOut: ebx r10 r11 r15 r8 rax rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid> r8d:<invalid>

l00000000004028D8:
	return rdx_37
// DataOut: ebx r10 r11 r15 r8 rax rbp rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> eax:<invalid> al:<invalid> rdx:<invalid> r8d:<invalid>

fn00000000004028C0_exit:
// DataOut: r8 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp r9:<invalid> edx:<invalid> r8:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> eax:<invalid> al:<invalid> r8d:<invalid>



byte fn0000000000402950(ptr64 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al r8
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w rax rcx rdx
// Preserved: rsp
fn0000000000402950_entry:
// DataOut: r10 r11 r13 r15 rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402950:
	word64 rdx_4 = Mem0[0x0000000000404330:word64]
	word64 r8_7
	*r8Out = DPB(r8, 0x00000000, 0)
	branch Mem0[rdx_4:word16] == 0x5A4D l0000000000402970
// DataOut: r10 r11 r13 r15 r8 rbp rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402970:
	word64 rcx_37
	branch (word32) fn00000000004027A0(rdx_4, out rcx_37) == 0x00000000 l0000000000402965
// DataOut: r10 r11 r13 r15 r8 rbp rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rdx:<invalid> r8d:0x00000000
// LocalsOut: fp(64)

l000000000040297C:
	word32 r8d_44 = (word32) Mem0[(int64) Mem0[rdx_4 + 0x000000000000003C:word32] + 0x0000000000000006 + rdx_4:word16]
	word64 r8_45
	*r8Out = DPB(r8, r8d_44, 0)
	return (byte) r8d_44
// DataOut: al r10 r11 r13 r15 r8 rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rdx:<invalid> r8d:0x00000000 rcx:<invalid> rax:<invalid> eax:<invalid> al:<invalid>

l0000000000402965:
	return 0x00
// DataOut: al r10 r11 r13 r15 r8 rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rdx:<invalid> r8d:0x00000000 rcx:<invalid> rax:<invalid> eax:<invalid> al:<invalid>

fn0000000000402950_exit:
// DataOut: al r8
// DataOut (flags): 
// SymbolicIn: rsp:fp rdx:<invalid> r8d:<invalid> eax:<invalid> rcx:<invalid> rax:<invalid> al:<invalid>



word64 fn0000000000402990(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut: rax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rsp
fn0000000000402990_entry:
// DataOut: ebp edi r12d r15 rbx rcx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402990:
	word64 r9_4 = Mem0[0x0000000000404330:word64]
	word64 rdx_31 = DPB(rdx, 0x00000000, 0)
	word64 r8_71 = rcx
	branch Mem0[rcx:word16] == 0x5A4D l00000000004029B0
// DataOut: ebp edi r12d r15 r8 r9 rbx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004029B0:
	word64 rcx_37
	branch (word32) fn00000000004027A0(r9_4, out rcx_37) == 0x00000000 l00000000004029A8
// DataOut: ebp edi r12d r15 r8 r9 rbx rcx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:0x00000000 r8:rcx
// LocalsOut: fp(64)

l00000000004029BC:
	word64 rax_44 = (int64) Mem0[rcx_37 + 0x000000000000003C:word32] + r9_4
	rdx_31 = rax_44 + 0x0000000000000018 + DPB(rdx, (word32) Mem0[rax_44 + 0x0000000000000014:word16], 0) + 0x0000000000000027
	word32 eax_49 = (word32) Mem0[rax_44 + 0x0000000000000006:word16]
	branch eax_49 == 0x00000000 l00000000004029F8
// DataOut: eax ebp edi r12d r15 r8 rbx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:0x00000000 r8:rcx rcx:<invalid> rax:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000000004029D4:
	word64 rax_69 = rdx_31 + 0x0000000000000028 + (DPB(rax_44, eax_49 - 0x00000001, 0) * 0x0000000000000005) * 0x0000000000000008
// DataOut: ebp edi r12d r15 r8 rax rbx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:rcx rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000000004029E0:
	branch (Mem0[rdx_31 + 0x0000000000000000:byte] & 0x20) == 0x00 l00000000004029EF
// DataOut: ebp edi r12d r15 r8 rax rbx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000000004029E6:
	branch r8_71 == 0x0000000000000000 l00000000004029A8
// DataOut: ebp edi r12d r15 r8 rax rbx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000000004029EB:
	r8_71 = r8_71 - 0x0000000000000001
// DataOut: ebp edi r12d r15 r8 rax rbx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000000004029EF:
	rdx_31 = rdx_31 + 0x0000000000000028
	branch rdx_31 != rax_69 l00000000004029E0
// DataOut: ebp edi r12d r15 r8 rax rbx rdi rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000000004029F8:
	return DPB(rdx_31, 0x00000000, 0)
// DataOut: ebp edi r12d r15 rax rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid>

l00000000004029A8:
	return rdx_31
// DataOut: ebp edi r12d r15 rax rbx rdi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r9:<invalid> edx:<invalid> r8:<invalid> rcx:<invalid> rax:<invalid> eax:<invalid> al:<invalid> rdx:<invalid>

fn0000000000402990_exit:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp r9:<invalid> edx:<invalid> r8:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> eax:<invalid> al:<invalid>



word64 fn0000000000402A10(word64 rax, ptr64 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax
// LiveOut: r8 rax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w rax rcx rdx
// Preserved: rsp
fn0000000000402A10_entry:
// DataOut: r10 r11 r12 r13 r15 rax rbp rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402A10:
	word64 r8_4 = Mem0[0x0000000000404330:word64]
	*r8Out = r8_4
	word64 rdx_36 = DPB(rdx, 0x00000000, 0)
	branch Mem0[rax:word16] == 0x5A4D l0000000000402A30
// DataOut: r10 r11 r12 r13 r15 r8 rbp rbx rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402A30:
	word64 rcx_30
	branch (word32) fn00000000004027A0(r8_4, out rcx_30) == 0x00000000 l0000000000402A3E
// DataOut: r10 r11 r12 r13 r15 r8 rbp rbx rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> edx:0x00000000
// LocalsOut: fp(64)

l0000000000402A3A_1:
	rdx_36 = r8_4
// DataOut: r10 r11 r12 r13 r15 r8 rbp rbx rdx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> edx:0x00000000 rcx:<invalid> rax:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402A3E:
	return rdx_36
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> edx:<invalid> rcx:<invalid> rdx:<invalid> rax:<invalid> eax:<invalid> al:<invalid>

l0000000000402A25:
	return rdx_36
// DataOut: r10 r11 r12 r13 r15 r8 rax rbp rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> edx:0x00000000

fn0000000000402A10_exit:
// DataOut: r8 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp r8:<invalid> edx:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> eax:<invalid> al:<invalid>



void fn0000000000402A50(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rsp
fn0000000000402A50_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402A50:
	word64 r8_4 = Mem0[0x0000000000404330:word64]
	branch Mem0[DPB(rax, 0x00000000, 0):word16] == 0x5A4D l0000000000402A70
// DataOut: r8 rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402A70:
	word64 rcx_39
	word64 rax_40 = fn00000000004027A0(r8_4, out rcx_39)
	branch (word32) rax_40 == 0x00000000 l0000000000402A68
// DataOut: r8 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> eax:0x00000000 rdx:rcx
// LocalsOut: fp(64)

l0000000000402A7C:
	word64 rax_45 = (int64) Mem0[rax_40 + 0x000000000000003C:word32]
	word64 r8_48 = r8_4 + rax_45
	word64 rcx_47 = rcx - r8_4
	word32 edx_50 = (word32) Mem0[rax_45 + 0x0000000000000006:word16]
	word64 rax_57 = r8_48 + 0x0000000000000018 + DPB(rax_45, (word32) Mem0[rax_45 + 0x0000000000000014:word16], 0) + 0x0000000000000008
	branch edx_50 == 0x00000000 l0000000000402ACD
// DataOut: edx r8 rax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> eax:<invalid> rdx:rcx rcx:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402A9C:
	word64 r9_74 = rax_57 + 0x0000000000000028 + (DPB(rcx, edx_50 - 0x00000001, 0) * 0x0000000000000005) * 0x0000000000000008
// DataOut: r8 r9 rax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> edx:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402AB0:
	word32 r8d_79 = Mem0[r8_48 + 0x000000000000000C:word32]
	r8_48 = DPB(r8_48, r8d_79, 0) (alias)
	branch rcx_47 <u r8_48 l0000000000402AC4
// DataOut: edx r8 r9 rax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> edx:<invalid> r9:<invalid> al:<invalid> r8d:<invalid>
// LocalsOut: fp(64)

l0000000000402ABC:
	branch rcx_47 <u DPB(r8_48, r8d_79 + Mem0[rax_57 + 0x0000000000000000:word32], 0) l0000000000402AD4
// DataOut: r8 r9 rax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> edx:<invalid> r9:<invalid> r8d:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402AD4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> edx:<invalid> r9:<invalid> r8d:<invalid> al:<invalid>

l0000000000402AC4:
	rax_57 = rax_57 + 0x0000000000000028
	branch rax_57 != r9_74 l0000000000402AB0
// DataOut: r8 r9 rax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> edx:<invalid> r9:<invalid> r8d:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402ACD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> edx:<invalid> al:<invalid> r9:<invalid> r8d:<invalid>

l0000000000402A68:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r8:<invalid> eax:<invalid> rdx:rcx rcx:<invalid> rax:<invalid> al:<invalid>

fn0000000000402A50_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp r8:<invalid> eax:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> edx:<invalid> al:<invalid> r9:<invalid> r8d:<invalid>



void fn0000000000402AF0(word32 ecx, word64 rbx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx rbx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r10 r10b r10d r10w r11 r11b r11d r11w r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rsp
fn0000000000402AF0_entry:
// DataOut: ecx rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402AF0:
	word64 r11_4 = Mem0[0x0000000000404330:word64]
	word32 r8d_117 = ecx
	branch Mem0[rbx:word16] == 0x5A4D l0000000000402B11
// DataOut: r11 r8 r8d rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402B11:
	word64 rcx_49
	word64 rax_50 = fn00000000004027A0(r11_4, out rcx_49)
	branch (word32) rax_50 == 0x00000000 l0000000000402B09
// DataOut: r11 r8 r8d rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:0x00000000 r8d:ecx
// LocalsOut: fp(64)

l0000000000402B1D:
	word64 rcx_56 = (int64) Mem0[rbx + 0x000000000000003C:word32] + r11_4
	word32 eax_58 = Mem0[rcx_56 + 0x0000000000000090:word32]
	word64 rax_59 = DPB(rax_50, eax_58, 0)
	branch eax_58 == 0x00000000 l0000000000402B09
// DataOut: r11 r8 r8d rax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:0x00000000 r8d:ecx rcx:<invalid> rax:<invalid> eax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B2E:
	word64 rdx_105 = rcx_56 + 0x0000000000000018 + DPB(rdx, (word32) Mem0[rcx_56 + 0x0000000000000014:word16], 0) + 0x0000000000000008
	word32 ecx_67 = (word32) Mem0[rcx_56 + 0x0000000000000006:word16]
	branch ecx_67 == 0x00000000 l0000000000402B09
// DataOut: ecx r11 r8 r8d rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:0x00000000 r8d:ecx rcx:<invalid> eax:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B3F:
	word64 r10_76 = rdx_105 + 0x0000000000000028 + (DPB(rcx_56, ecx_67 - 0x00000001, 0) * 0x0000000000000005) * 0x0000000000000008
// DataOut: r10 r11 r8 r8d rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:0x00000000 r8d:ecx rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B50:
	word32 r9d_81 = Mem0[r10_76 + 0x000000000000000C:word32]
	r9 = DPB(r9, r9d_81, 0) (alias)
	branch rax_59 <u r9 l0000000000402B64
// DataOut: ecx r10 r11 r8 r8d rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:ecx rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B5C:
	branch rax_59 <u DPB(r9, r9d_81 + Mem0[rdx_105 + 0x0000000000000000:word32], 0) l0000000000402B80
// DataOut: r10 r11 r8 r8d rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:ecx rcx:r9 eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B80:
	word64 rax_113 = rax_59 + r11_4
	branch rax_113 != 0x0000000000000000 l0000000000402B98
// DataOut: r11 r8 r8d rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:ecx rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B98:
	branch Mem0[rax_113 + 0x0000000000000004:word32] != 0x00000000 l0000000000402BA6
// DataOut: r11 r8 r8d rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:<invalid> rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B9F:
	branch Mem0[rax_113 + 0x000000000000000C:word32] == 0x00000000 l0000000000402B6D
// DataOut: r11 r8 r8d rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:<invalid> rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402BA6:
	branch r8d_117 > 0x00000000 l0000000000402B90
// DataOut: r11 r8 r8d rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:<invalid> rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B90:
	r8d_117 = r8d_117 - 0x00000001
	rax_113 = rax_113 + 0x0000000000000014
// DataOut: r11 r8 r8d rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:<invalid> rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402BAB:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:<invalid> rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>

l0000000000402B85:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:ecx rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B64:
	rdx_105 = rdx_105 + 0x0000000000000028
	branch rdx_105 != r10_76 l0000000000402B50
// DataOut: r10 r11 r8 r8d rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:ecx rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l0000000000402B6D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:<invalid> r8d:<invalid> rcx:<invalid> eax:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> rax:<invalid> al:<invalid>

l0000000000402B09:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 r11:<invalid> r9d:0x00000000 r8d:ecx rcx:<invalid> eax:<invalid> rax:<invalid> al:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid>

fn0000000000402AF0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp r11:<invalid> r9d:<invalid> r8d:<invalid> rax:<invalid> rcx:<invalid> eax:<invalid> al:<invalid> edx:<invalid> rdx:<invalid> ecx:<invalid> r10:<invalid> r9:<invalid>



word64 fn0000000000402BC0(word64 rax, word64 r8, word64 qwArg00, ptr64 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8 rax
// LiveOut: r8 rcx rsp
// Trashed: SCZO ch cl cx ecx esp r8 r8b r8d r8w rcx rsp sp spl
// Preserved: rax
// Stack args: Stack +0000(64)
fn0000000000402BC0_entry:
	*r8Out = r8
// DataOut: r10 r11 r13 r15 r8 rax rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000402BC0:
	word64 rcx_11 = fp + 0x0000000000000010
	branch r8 <u 0x0000000000001000 l0000000000402BE8
// DataOut: r10 r11 r13 r15 r8 rax rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000402BCF:
	rcx_11 = rcx_11 - 4096
	Mem34[rcx_11:word64] = Mem0[rcx_11:word64]
	r8 = r8 - 4096
	*r8Out = r8
	branch r8 >u 0x0000000000001000 l0000000000402BCF
// DataOut: r10 r11 r13 r15 r8 rax rbp rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rcx:<invalid> r8:<invalid> -4080(fp):<invalid> -8(fp):rax -4(fp):rcx
// LocalsOut: fp(64) Stack +0000(64)

l0000000000402BE8:
	word64 rcx_17 = rcx_11 - rax
	Mem20[rcx_17:word64] = Mem0[rcx_17:word64]
	return qwArg00
// DataOut: r10 r11 r13 r15 r8 rbp rcx rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rcx:<invalid> r8:<invalid> -4080(fp):<invalid> -8(fp):rax -4(fp):rcx

fn0000000000402BC0_exit:
// DataOut: r8 rcx rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000008 rcx:SLICE(rcx, word64, 32) r8:<invalid> rax:rax -4080(fp):<invalid> -8(fp):rax -4(fp):rcx



void fn0000000000402CD0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ah al ax eax rax
// Preserved: rsp
fn0000000000402CD0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000402CD0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000402CD0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



void fn0000000000402CE0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed: ah al ax eax rax
// Preserved: rsp
fn0000000000402CE0_entry:
// DataOut: r15 rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000402CE0:
	Mem6[0x0000000000407950:word64] = rcx
	return
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000402CE0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



void fn0000000000402DC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esp r8 r8b r8d r8w rax rbx rcx rdx rsp sp spl
// Preserved: rbp
fn0000000000402DC0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000402DC0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000402DC4_thunk_fn0000000000401540:
	fn0000000000401540()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rbp:rbp -4(fp):rbp

fn0000000000402DC0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:rbp rcx:<invalid> al:<invalid> eax:<invalid> rdx:<invalid> rax:<invalid> rbx:<invalid> ecx:<invalid> r8:<invalid> -4(fp):rbp



