r2:r2
    def:  def r2
    uses: r4_1 = r2()
          call r3 (retsize: 4; depth: 4)	uses: r2,r3,r4_1	defs: r2_3,r3_4,r4_5,r63_6
r4_1: orig: r4
    def:  r4_1 = r2()
    uses: call r3 (retsize: 4; depth: 4)	uses: r2,r3,r4_1	defs: r2_3,r3_4,r4_5,r63_6
r3:r3
    def:  def r3
    uses: call r3 (retsize: 4; depth: 4)	uses: r2,r3,r4_1	defs: r2_3,r3_4,r4_5,r63_6
          call r3 (retsize: 4; depth: 4)	uses: r2,r3,r4_1	defs: r2_3,r3_4,r4_5,r63_6
r2_3: orig: r2
    def:  call r3 (retsize: 4; depth: 4)	uses: r2,r3,r4_1	defs: r2_3,r3_4,r4_5,r63_6
r3_4: orig: r3
    def:  call r3 (retsize: 4; depth: 4)	uses: r2,r3,r4_1	defs: r2_3,r3_4,r4_5,r63_6
r4_5: orig: r4
    def:  call r3 (retsize: 4; depth: 4)	uses: r2,r3,r4_1	defs: r2_3,r3_4,r4_5,r63_6
r63_6: orig: r63
    def:  call r3 (retsize: 4; depth: 4)	uses: r2,r3,r4_1	defs: r2_3,r3_4,r4_5,r63_6
// foo
// Return size: 0
void foo(word32 r2)
foo_entry:
	def r2
	def r3
	// succ:  l1
l1:
	r4_1 = r2()
	call r3 (retsize: 4; depth: 4)
		uses: r2,r3,r4_1
		defs: r2_3,r3_4,r4_5,r63_6
	return
	// succ:  foo_exit
foo_exit:

