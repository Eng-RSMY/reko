#region License
/* 
 * Copyright (C) 1999-2017 John Källén.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; see the file COPYING.  If not, write to
 * the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 */
#endregion

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Reko.Arch.Vax
{
    public partial class VaxDisassembler
    {
        private static OpRec[] twoByteInstructions = new[]
        {
/* 00FD */ new OpRec(Opcode.Reserved, -1),
/* 01FD */ new OpRec(Opcode.Reserved, -1),
/* 02FD */ new OpRec(Opcode.Reserved, -1),
/* 03FD */ new OpRec(Opcode.Reserved, -1),
/* 04FD */ new OpRec(Opcode.Reserved, -1),
/* 05FD */ new OpRec(Opcode.Reserved, -1),
/* 06FD */ new OpRec(Opcode.Reserved, -1),
/* 07FD */ new OpRec(Opcode.Reserved, -1),
/* 08FD */ new OpRec(Opcode.Reserved, -1),
/* 30FD */ new OpRec(Opcode.Reserved, -1),
/* 31FD */ new OpRec(Opcode.mfvp, -1),
/* 32FD */ new OpRec(Opcode.cvtdh, -1),
/* 33FD */ new OpRec(Opcode.cvtgf, -1),
/* 34FD */ new OpRec(Opcode.vldl, -1),
/* 35FD */ new OpRec(Opcode.vgathl, -1),
/* 36FD */ new OpRec(Opcode.vldq, -1),
/* 37FD */ new OpRec(Opcode.vgathq, -1),
/* 38FD */ new OpRec(Opcode.Reserved, -1),
/* 09FD */ new OpRec(Opcode.Reserved, -1),
/* 39FD */ new OpRec(Opcode.Reserved, -1),
/* 0AFD */ new OpRec(Opcode.Reserved, -1),
/* 3AFD */ new OpRec(Opcode.Reserved, -1),
/* 0BFD */ new OpRec(Opcode.Reserved, -1),
/* 3BFD */ new OpRec(Opcode.Reserved, -1),
/* 0CFD */ new OpRec(Opcode.Reserved, -1),
/* 3CFD */ new OpRec(Opcode.Reserved, -1),
/* 0DFD */ new OpRec(Opcode.Reserved, -1),
/* 3DFD */ new OpRec(Opcode.Reserved, -1),
/* 0EFD */ new OpRec(Opcode.Reserved, -1),
/* 3EFD */ new OpRec(Opcode.Reserved, -1),
/* 0FFD */ new OpRec(Opcode.Reserved, -1),
/* 3FFD */ new OpRec(Opcode.Reserved, -1),
/* 10FD */ new OpRec(Opcode.Reserved, -1),
/* 40FD */ new OpRec(Opcode.addg2, -1),
/* 11FD */ new OpRec(Opcode.Reserved, -1),
/* 41FD */ new OpRec(Opcode.addg3, -1),
/* 12FD */ new OpRec(Opcode.Reserved, -1),
/* 42FD */ new OpRec(Opcode.subg2, -1),
/* 13FD */ new OpRec(Opcode.Reserved, -1),
/* 43FD */ new OpRec(Opcode.subg3, -1),
/* 14FD */ new OpRec(Opcode.Reserved, -1),
/* 44FD */ new OpRec(Opcode.mulg2, -1),
/* 15FD */ new OpRec(Opcode.Reserved, -1),
/* 45FD */ new OpRec(Opcode.mulg3, -1),
/* 16FD */ new OpRec(Opcode.Reserved, -1),
/* 46FD */ new OpRec(Opcode.divg2, -1),
/* 17FD */ new OpRec(Opcode.Reserved, -1),
/* 47FD */ new OpRec(Opcode.divg3, -1),
/* 18FD */ new OpRec(Opcode.Reserved, -1),
/* 48FD */ new OpRec(Opcode.cvtgb, -1),
/* 19FD */ new OpRec(Opcode.Reserved, -1),
/* 49FD */ new OpRec(Opcode.cvtgw, -1),
/* 1AFD */ new OpRec(Opcode.Reserved, -1),
/* 4AFD */ new OpRec(Opcode.cvtgl, -1),
/* 1BFD */ new OpRec(Opcode.Reserved, -1),
/* 4BFD */ new OpRec(Opcode.cvtrgl, -1),
/* 1CFD */ new OpRec(Opcode.Reserved, -1),
/* 4CFD */ new OpRec(Opcode.cvtbg, -1),
/* 1DFD */ new OpRec(Opcode.Reserved, -1),
/* 4DFD */ new OpRec(Opcode.cvtwg, -1),
/* 1EFD */ new OpRec(Opcode.Reserved, -1),
/* 4EFD */ new OpRec(Opcode.cvtlg, -1),
/* 1FFD */ new OpRec(Opcode.Reserved, -1),
/* 4FFD */ new OpRec(Opcode.acbg,  "rg,rg,mg,bw"),
/* 20FD */ new OpRec(Opcode.Reserved, -1),
/* 50FD */ new OpRec(Opcode.movg, -1),
/* 21FD */ new OpRec(Opcode.Reserved, -1),
/* 51FD */ new OpRec(Opcode.cmpg, -1),
/* 22FD */ new OpRec(Opcode.Reserved, -1),
/* 52FD */ new OpRec(Opcode.mnegg, -1),
/* 23FD */ new OpRec(Opcode.Reserved, -1),
/* 53FD */ new OpRec(Opcode.tstg, -1),
/* 24FD */ new OpRec(Opcode.Reserved, -1),
/* 54FD */ new OpRec(Opcode.emodg,  "rg,rb,rd,wl,wg"),
/* 25FD */ new OpRec(Opcode.Reserved, -1),
/* 55FD */ new OpRec(Opcode.polyg,  "rg,rw,ab"), 
/* 26FD */ new OpRec(Opcode.Reserved, -1),
/* 56FD */ new OpRec(Opcode.cvtgh, -1),
/* 27FD */ new OpRec(Opcode.Reserved, -1),
/* 57FD */ new OpRec(Opcode.Reserved, -1),
/* 28FD */ new OpRec(Opcode.Reserved, -1),
/* 58FD */ new OpRec(Opcode.Reserved, -1),
/* 29FD */ new OpRec(Opcode.Reserved, -1),
/* 59FD */ new OpRec(Opcode.Reserved, -1),
/* 2AFD */ new OpRec(Opcode.Reserved, -1),
/* 5AFD */ new OpRec(Opcode.Reserved, -1),
/* 2BFD */ new OpRec(Opcode.Reserved, -1),
/* 5BFD */ new OpRec(Opcode.Reserved, -1),
/* 2CFD */ new OpRec(Opcode.Reserved, -1),
/* 5CFD */ new OpRec(Opcode.Reserved, -1),
/* 2DFD */ new OpRec(Opcode.Reserved, -1),
/* 5DFD */ new OpRec(Opcode.Reserved, -1),
/* 2EFD */ new OpRec(Opcode.Reserved, -1),
/* 5EFD */ new OpRec(Opcode.Reserved, -1),
/* 2FFD */ new OpRec(Opcode.Reserved, -1),
/* 5FFD */ new OpRec(Opcode.Reserved, -1),
/* 60FD */ new OpRec(Opcode.addh2, "rh,wh"),
/* 90FD */ new OpRec(Opcode.Reserved, -1),
/* 61FD */ new OpRec(Opcode.addh3, "rh,rh,wh"),
/* 91FD */ new OpRec(Opcode.Reserved, -1),
/* 62FD */ new OpRec(Opcode.subh2, "rh,wh"),
/* 92FD */ new OpRec(Opcode.Reserved, -1),
/* 63FD */ new OpRec(Opcode.subh3, "rh,rh,wh"),
/* 93FD */ new OpRec(Opcode.Reserved, -1),
/* 64FD */ new OpRec(Opcode.mulh2, "rh,wh"),
/* 94FD */ new OpRec(Opcode.Reserved, -1),
/* 65FD */ new OpRec(Opcode.mulh3, "rh,rh,wh"),
/* 95FD */ new OpRec(Opcode.Reserved, -1),
/* 66FD */ new OpRec(Opcode.divh2, "rh,wh"),
/* 96FD */ new OpRec(Opcode.Reserved, -1),
/* 67FD */ new OpRec(Opcode.divh3, "rh,rh,wh"),
/* 97FD */ new OpRec(Opcode.Reserved, -1),
/* 68FD */ new OpRec(Opcode.cvthb, -1),
/* 98FD */ new OpRec(Opcode.cvtfh, -1),
/* 69FD */ new OpRec(Opcode.cvthw, -1),
/* 99FD */ new OpRec(Opcode.cvtfg, -1),
/* 6AFD */ new OpRec(Opcode.cvthl, -1),
/* 9AFD */ new OpRec(Opcode.Reserved, -1),
/* 6BFD */ new OpRec(Opcode.cvtrhl, -1),
/* 9BFD */ new OpRec(Opcode.Reserved, -1),
/* 6CFD */ new OpRec(Opcode.cvtbh, -1),
/* 9CFD */ new OpRec(Opcode.vstl, -1),
/* 6DFD */ new OpRec(Opcode.cvtwh, -1),
/* 9DFD */ new OpRec(Opcode.vscatl, -1),
/* 6EFD */ new OpRec(Opcode.cvtlh, -1),
/* 9EFD */ new OpRec(Opcode.vstq, -1),
/* 6FFD */ new OpRec(Opcode.acbh,  "rh,rh,mh,bw"),
/* 9FFD */ new OpRec(Opcode.vscatq, -1),
/* 70FD */ new OpRec(Opcode.movh, -1),
/* 71FD */ new OpRec(Opcode.cmph, -1),
/* 72FD */ new OpRec(Opcode.mnegh, -1),
/* 73FD */ new OpRec(Opcode.tsth, -1),
/* 74FD */ new OpRec(Opcode.emodh,  "rh,rb,rd,wl,wh"),
/* 75FD */ new OpRec(Opcode.polyh,  "rh,rw,ab"), 
/* 76FD */ new OpRec(Opcode.cvthg, -1),
/* 77FD */ new OpRec(Opcode.Reserved, -1),
/* 78FD */ new OpRec(Opcode.Reserved, -1),
/* 79FD */ new OpRec(Opcode.Reserved, -1),
/* 7AFD */ new OpRec(Opcode.Reserved, -1),
/* 7BFD */ new OpRec(Opcode.Reserved, -1),
/* 7CFD */ new OpRec(Opcode.clrh, -1), // clro, -1),
/* 7DFD */ new OpRec(Opcode.movo, -1),
/* 7EFD */ new OpRec(Opcode.movah, -1), //  movao, -1),
/* 7FFD */ new OpRec(Opcode.pushah, -1), // pushao, -1),


/* 80FD */ new OpRec(Opcode.vvaddl, -1),
/* 81FD */ new OpRec(Opcode.vsaddl, -1),
/* 82FD */ new OpRec(Opcode.vvaddg, -1),
/* 83FD */ new OpRec(Opcode.vsaddg, -1),
/* 84FD */ new OpRec(Opcode.vvaddf, -1),
/* 85FD */ new OpRec(Opcode.vsaddf, -1),
/* 86FD */ new OpRec(Opcode.vvaddd, -1),
/* 87FD */ new OpRec(Opcode.vsaddd, -1),
/* 88FD */ new OpRec(Opcode.vvsubl, -1),
/* 89FD */ new OpRec(Opcode.vssubl, -1),
/* 8AFD */ new OpRec(Opcode.vvsubg, -1),
/* 8BFD */ new OpRec(Opcode.vssubg, -1),
/* 8CFD */ new OpRec(Opcode.vvsubf, -1),
/* 8DFD */ new OpRec(Opcode.vssubf, -1),
/* 8EFD */ new OpRec(Opcode.vvsubd, -1),
/* 8FFD */ new OpRec(Opcode.vssubd, -1),

/* A0FD */ new OpRec(Opcode.vvmull, -1),
/* A1FD */ new OpRec(Opcode.vsmull, -1),
/* A2FD */ new OpRec(Opcode.vvmulg, -1),
/* A3FD */ new OpRec(Opcode.vsmulg, -1),
/* A4FD */ new OpRec(Opcode.vvmulf, -1),
/* A5FD */ new OpRec(Opcode.vsmulf, -1),
/* A6FD */ new OpRec(Opcode.vvmuld, -1),
/* A7FD */ new OpRec(Opcode.vsmuld, -1),
/* A8FD */ new OpRec(Opcode.vsync, -1),
/* A9FD */ new OpRec(Opcode.mtvp, -1),
/* AAFD */ new OpRec(Opcode.vvdivg, -1),
/* ABFD */ new OpRec(Opcode.vsdivg, -1),
/* ACFD */ new OpRec(Opcode.vvdivf, -1),
/* ADFD */ new OpRec(Opcode.vsdivf, -1),
/* AEFD */ new OpRec(Opcode.vvdivd, -1),
/* AFFD */ new OpRec(Opcode.vsdivd, -1),

/* B0FD */ new OpRec(Opcode.Reserved, -1),
/* B1FD */ new OpRec(Opcode.Reserved, -1),
/* B2FD */ new OpRec(Opcode.Reserved, -1),
/* B3FD */ new OpRec(Opcode.Reserved, -1),
/* B4FD */ new OpRec(Opcode.Reserved, -1),
/* B5FD */ new OpRec(Opcode.Reserved, -1),
/* B6FD */ new OpRec(Opcode.Reserved, -1),
/* B7FD */ new OpRec(Opcode.Reserved, -1),
/* B8FD */ new OpRec(Opcode.Reserved, -1),
/* B9FD */ new OpRec(Opcode.Reserved, -1),
/* BAFD */ new OpRec(Opcode.Reserved, -1),
/* BBFD */ new OpRec(Opcode.Reserved, -1),
/* BCFD */ new OpRec(Opcode.Reserved, -1),
/* BDFD */ new OpRec(Opcode.Reserved, -1),
/* BEFD */ new OpRec(Opcode.Reserved, -1),
/* BFFD */ new OpRec(Opcode.Reserved, -1),

/* C0FD */ new OpRec(Opcode.vvcmpl, -1),
/* C1FD */ new OpRec(Opcode.vscmpl, -1),
/* C2FD */ new OpRec(Opcode.vvcmpg, -1),
/* C3FD */ new OpRec(Opcode.vscmpg, -1),
/* C4FD */ new OpRec(Opcode.vvcmpf, -1),
/* C5FD */ new OpRec(Opcode.vscmpf, -1),
/* C6FD */ new OpRec(Opcode.vvcmpd, -1),
/* C7FD */ new OpRec(Opcode.vscmpd, -1),
/* C8FD */ new OpRec(Opcode.vvbisl, -1),
/* C9FD */ new OpRec(Opcode.vsbisl, -1),
/* CAFD */ new OpRec(Opcode.Invalid, -1),
/* CBFD */ new OpRec(Opcode.Invalid, -1),
/* CCFD */ new OpRec(Opcode.vvbicl, -1),
/* CDFD */ new OpRec(Opcode.vsbicl, -1),
/* CEFD */ new OpRec(Opcode.Invalid, -1),
/* CFFD */ new OpRec(Opcode.Invalid, -1),

/* D0FD */ new OpRec(Opcode.Reserved, -1),
/* D1FD */ new OpRec(Opcode.Reserved, -1),
/* D2FD */ new OpRec(Opcode.Reserved, -1),
/* D3FD */ new OpRec(Opcode.Reserved, -1),
/* D4FD */ new OpRec(Opcode.Reserved, -1),
/* D5FD */ new OpRec(Opcode.Reserved, -1),
/* D6FD */ new OpRec(Opcode.Reserved, -1),
/* D7FD */ new OpRec(Opcode.Reserved, -1),
/* D8FD */ new OpRec(Opcode.Reserved, -1),
/* D9FD */ new OpRec(Opcode.Reserved, -1),
/* DAFD */ new OpRec(Opcode.Reserved, -1),
/* DBFD */ new OpRec(Opcode.Reserved, -1),
/* DCFD */ new OpRec(Opcode.Reserved, -1),
/* DDFD */ new OpRec(Opcode.Reserved, -1),
/* DEFD */ new OpRec(Opcode.Reserved, -1),
/* DFFD */ new OpRec(Opcode.Reserved, -1),

/* E0FD */ new OpRec(Opcode.vvsrll, -1),
/* E1FD */ new OpRec(Opcode.vssrll, -1),
/* E2FD */ new OpRec(Opcode.Invalid, -1),
/* E3FD */ new OpRec(Opcode.Invalid, -1),
/* E4FD */ new OpRec(Opcode.vvslll, -1),
/* E5FD */ new OpRec(Opcode.vsslll, -1),
/* E6FD */ new OpRec(Opcode.Invalid, -1),
/* E7FD */ new OpRec(Opcode.Invalid, -1),
/* E8FD */ new OpRec(Opcode.vvxorl, -1),
/* E9FD */ new OpRec(Opcode.vsxorl, -1),
/* EAFD */ new OpRec(Opcode.Invalid, -1),
/* EBFD */ new OpRec(Opcode.Invalid, -1),
/* ECFD */ new OpRec(Opcode.vvcvt, -1),
/* EDFD */ new OpRec(Opcode.iota, -1),
/* EEFD */ new OpRec(Opcode.vvmerge, -1),
/* EFFD */ new OpRec(Opcode.vsmerge, -1),

/* F0FD */ new OpRec(Opcode.Reserved, -1),
/* F1FD */ new OpRec(Opcode.Reserved, -1),
/* F2FD */ new OpRec(Opcode.Reserved, -1),
/* F3FD */ new OpRec(Opcode.Reserved, -1),
/* F4FD */ new OpRec(Opcode.Reserved, -1),
/* F5FD */ new OpRec(Opcode.Reserved, -1),
/* F6FD */ new OpRec(Opcode.cvthf, -1),
/* F7FD */ new OpRec(Opcode.cvthd, -1),
/* F8FD */ new OpRec(Opcode.Reserved, -1),
/* F9FD */ new OpRec(Opcode.Reserved, -1),
/* FAFD */ new OpRec(Opcode.Reserved, -1),
/* FBFD */ new OpRec(Opcode.Reserved, -1),
/* FCFD */ new OpRec(Opcode.Reserved, -1),
/* FCFE */ new OpRec(Opcode.Reserved, -1),
/* FCFF */ new OpRec(Opcode.Reserved, -1),

/* FDFF */ new OpRec(Opcode.bugl, -1),
/* FEFF */ new OpRec(Opcode.bugw, -1),
/* FFFF */ new OpRec(Opcode.Reserved   , -1), // invalid opcode, basically

    };
    }
}
